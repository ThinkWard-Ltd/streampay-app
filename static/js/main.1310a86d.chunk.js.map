{"version":3,"sources":["constants/constants.js","Components/ButtonPrimary.js","Pages/NotConnected.js","Components/Recipient.js","Components/SelectToken.js","Components/Banner.js","Components/DateTime.js","Components/Amount.js","Components/Curtain.js","Components/Stream/Badge.js","Components/Stream/Duration.js","Components/Stream/Progress.js","Components/Stream.js","Components/Footer.js","Components/Logo.js","logo.png","App.js","reportWebVitals.js","index.js","utils/helpers.js","constants/ids.js","Components/ToastrLink.js","Actions/sendTransaction.js","Actions/createStream.js","Actions/withdrawStream.js","Actions/cancelStream.js"],"names":["SOLLET_URL","AIRDROP_AMOUNT","TX_FINALITY_CONFIRMED","INSTRUCTION_CREATE_STREAM","INSTRUCTION_WITHDRAW_STREAM","INSTRUCTION_CANCEL_STREAM","STREAM_STATUS_SCHEDULED","STREAM_STATUS_STREAMING","STREAM_STATUS_COMPLETE","STREAM_STATUS_CANCELED","STREAM_STATUS_COLOR","ButtonPrimary","props","text","action","className","submit","disabled","type","onClick","NotConnected","width","height","src","title","frameBorder","allowFullScreen","Recipient","htmlFor","name","id","defaultValue","value","onChange","e","target","pattern","placeholder","aria-describedby","required","SelectToken","Banner","state","hidden","this","setState","Component","DateTime","date","min","format","Date","max","add","years","updateDate","time","updateTime","Amount","step","autoFocus","Number","MAX_SAFE_INTEGER","Curtain","visible","Badge","color","fill","viewBox","cx","cy","r","Duration","fromUnixTime","start","end","memo","Progress","rtl","toFixed","style","Stream","data","withdrawn","amount","receiver","sender","status","myAddress","removeStream","onStatusUpdate","onCancel","onWithdraw","useState","getStreamed","streamed","setStreamed","available","setAvailable","showWithdraw","showCancel","useEffect","interval","setInterval","tmpStatus","now","getUnixTime","updateStatus","clearInterval","timestamp","Footer","alt","href","rel","Logo","App","network","clusterApiUrl","pda","Keypair","generate","providerUrl","undefined","selectedWallet","setSelectedWallet","connected","setConnected","balance","setBalance","setAmount","setReceiver","startDate","setStartDate","minutes","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","loading","setLoading","airdropTxSignature","setAirdropTxSignature","localStorage","streams","JSON","parse","setStreams","connection","useMemo","Connection","urlWallet","Wallet","a","requestAirdrop","publicKey","LAMPORTS_PER_SOL","signature","toast","success","validate","element","msg","setCustomValidity","createStream","form","document","getElementById","elements","checkValidity","reportValidity","StreamData","toBase58","_createStream","streamCreated","_withdrawStream","_cancelStream","canceled_at","skipPrompt","_swal","newStreams","on","getBalance","then","result","info","connect","disconnect","streamID","window","location","hash","substring","PublicKey","error","hasOwnProperty","pk","message","getAccountInfo","temp","getDecodedAccountData","stringify","confirmTransaction","err","logo","getExplorerLink","onSubmit","Object","keys","length","entries","sort","stream1","map","withdrawStream","cancelStream","hideProgressBar","position","limit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","property","BufferLayout","blob","uint64","DataLayout","struct","buffer","accountData","decode","u64","fromBuffer","starttime","endtime","recipient","getStreamStatus","cluster","url","hasMatch","match","getClusterName","swal","icon","buttons","origin","button","content","attributes","innerHTML","clicked","el","createElement","setAttribute","left","body","appendChild","select","execCommand","removeChild","copyToClipboard","PROGRAM_ID","STREAMFLOW_ACCOUNT_ID","ToastrLink","urlText","nonUrlText","sendTransaction","transaction","wallet","getRecentBlockhash","recentBlockhash","blockhash","feePayer","partialSign","signTransaction","signed","sendRawTransaction","serialize","autoClose","finality","transactionUrl","closeOnClick","console","warn","instruction","getCreateStreamInstruction","tx","Transaction","pdaPub","TransactionInstruction","pubkey","isSigner","isWritable","SystemProgram","programId","encodeInstructionData","layout","u8","u32","nu64","encoded","Buffer","alloc","span","encode","Math","trunc","account_id","getWithdrawStreamInstruction","getCancelStreamInstruction"],"mappings":"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","file":"static/js/main.1310a86d.chunk.js","sourcesContent":["export const SOLLET_URL = 'https://www.sollet.io';\nexport const AIRDROP_AMOUNT = 10; //10 is the cap on the devnet\n\nexport const TX_FINALITY_CONFIRMED = \"confirmed\";\nexport const TX_FINALITY_FINALIZED = \"finalized\";\n\nexport const INSTRUCTION_CREATE_STREAM = 0;\nexport const INSTRUCTION_WITHDRAW_STREAM = 1;\nexport const INSTRUCTION_CANCEL_STREAM = 2;\n\nexport const ACC_DATA_OFFSET_WITHDRAWN = 25;\n\nexport const STREAM_STATUS_SCHEDULED = \"scheduled\";\nexport const STREAM_STATUS_STREAMING = \"streaming\";\nexport const STREAM_STATUS_COMPLETE = \"complete\";\nexport const STREAM_STATUS_CANCELED = \"canceled\";\n\nexport const STREAM_STATUS_COLOR = {\n    [STREAM_STATUS_SCHEDULED]: 'gray', // now < start\n    [STREAM_STATUS_STREAMING]: 'green', // start <= now < end\n    [STREAM_STATUS_COMPLETE]: 'blue', //now >= end;\n    [STREAM_STATUS_CANCELED]: 'red',\n}","export default function ButtonPrimary(props: {text: string, action?: void, className?: string, submit?: boolean, disabled?: boolean}) {\n    const baseClasses = \"block mx-auto px-8 py-4 bg-gradient-to-br from-primary via-primary to-secondary border-transparent font-medium rounded shadow-sm text-white hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary \"\n    const {text, action, className, submit, disabled} = props;\n    return (\n        <button type={submit ? \"submit\" : \"button\"} onClick={action}\n                className={baseClasses + className} disabled={disabled}>\n            {text}\n        </button>\n    )\n}","import ButtonPrimary from \"../Components/ButtonPrimary\";\n\nexport default function NotConnected(props: { action: () => * }) {\n    return <div className=\"max-w-md mx-auto\">\n        <iframe width=\"100%\" height={270} src=\"https://www.youtube-nocookie.com/embed/7HWzcxu-De0\"\n                title=\"StreamFlow Finance Demo\" frameBorder=\"0\"\n                allowFullScreen>&nbsp;</iframe>\n        <ButtonPrimary text=\"Connect\" className=\"font-bold text-2xl my-5\"\n                       action={props.action}/>\n    </div>;\n}","export default function Recipient(props: { onChange: void, value: string }) {\n    return (\n        <div className=\"col-span-full\">\n            <label htmlFor=\"account\" className=\"block font-medium text-gray-100\">\n                Recipient Account\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"account\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    pattern=\"[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}\"\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    placeholder=\"Please double check the address\"\n                    aria-describedby=\"account-description\"\n                    required\n                />\n            </div>\n        </div>\n    )\n}","export default function SelectToken() {\n    return (\n        <div className=\"col-span-2 sm:col-span-1\">\n            <label htmlFor=\"token\" className=\"block font-medium text-gray-100\">\n                Token\n            </label>\n            <select\n                id=\"token\"\n                name=\"token\"\n                className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"                defaultValue=\"SOL\"\n            >\n                <option>SOL</option>\n                <option disabled>ETH - Coming soon️™</option>\n                <option disabled>BTC - Coming soon™</option>\n                <option disabled>USDC - Coming soon™</option>\n                <option disabled>Other tokens...</option>\n            </select>\n        </div>\n    )\n}\n","import {XIcon} from '@heroicons/react/outline'\nimport {Component} from \"react\";\n\n//could be \"stupid\"/functional component, but we decided to let it manage its own state (open/close)\nexport default class Banner extends Component {\n    state = {\n        hidden: false\n    }\n\n    render() {\n        return (\n            <div className={`relative bg-primary ${this.state.hidden && \"hidden\"}`}>\n                <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n                    <div className=\"pr-16 sm:text-center sm:px-16\">\n                        <p className=\"font-small text-white\">\n                            <b>Devnet version. Test freely! </b>\n                            <span className=\"hidden lg:inline\">Transactions are slower. Live version coming soon™</span>\n                        </p>\n                    </div>\n                    <div\n                        className=\"absolute inset-y-0 right-0 pt-1 pr-1 flex items-start sm:pt-1 sm:pr-2 sm:items-start\">\n                        <button type=\"button\" onClick={() => this.setState({hidden: true})}\n                                className=\"flex p-2 rounded-md hover:bg-primary focus:outline-none focus:ring-2 focus:ring-white\"\n                        >\n                            <span className=\"sr-only\">Dismiss</span>\n                            <XIcon className=\"h-6 w-6 text-white\"/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import {add, format} from \"date-fns\";\n\nexport default function DateTime(props: { title: string, date: string, updateDate: void, time: string, updateTime: void }) {\n    return (\n        <>\n            <div className=\"col-span-3 sm:col-span-1\">\n                <label htmlFor={props.title}\n                       className=\"block font-medium text-gray-100 capitalize\">{props.title} Date</label>\n                <div className=\"mt-1\">\n                    <input type=\"date\" name={props.title} id={props.title}\n                           value={props.date}\n                           min={format(new Date(), \"yyyy-MM-dd\")}\n                           max={format(add(new Date(), {years: 1}), \"yyyy-MM-dd\")}\n                           onChange={props.updateDate}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={props.title + `-description`} required/>\n                </div>\n            </div>\n            <div className=\"col-span-2 sm:col-span-1\">\n                <label htmlFor={props.title + `_time`}\n                       className=\"block font-medium text-gray-100 capitalize\">{props.title} time</label>\n                <div className=\"mt-1\">\n                    <input type=\"time\" name={props.title + `_time`} id={props.title + `_time`}\n                           value={props.time}\n                           onChange={props.updateTime}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={props.title + `_time-description`} required/>\n                </div>\n            </div>\n        </>\n    )\n}","export default function Amount(props: { onChange: void, max: number, value: number }) {\n    return (\n        <div className=\"col-span-3 sm:col-span-1\">\n            <label htmlFor=\"amount\" className=\"block font-medium text-gray-100\">\n                Amount\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    step={0.001} autoFocus={true}\n                    type=\"number\"\n                    name=\"amount\"\n                    id=\"amount\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    min={0}\n                    max={props.max || Number.MAX_SAFE_INTEGER}\n                    placeholder=\"0.00\"\n                    aria-describedby=\"amount-description\"\n                    required={true}\n                />\n            </div>\n        </div>\n    )\n}\n","export default function Curtain(props: { visible: boolean }) {\n    return (\n        <div className={`fixed top-0 bottom-0 left-0 right-0 bg-gray-900 opacity-90 z-10 ${props.visible ? \"block\" : \"hidden\"}`}>\n            <div className=\"loader\"> </div>\n        </div>\n    )\n}","export default function Badge(props: { type: string, color: string }) {\n    const {type, color } = props;\n    return <div className=\"inline\">\n        <span\n            className={`align-top px-2.5 py-0.5 rounded-full text-xs font-medium bg-${color}-100 text-${color}-800 capitalize`}>\n            <svg className={`mr-1 -ml-1 inline align-baseline h-2 w-2 text-${color}-400`} fill=\"currentColor\" viewBox=\"0 0 8 8\">\n              <circle cx={4} cy={4} r={3}/>\n            </svg>\n            {type}\n      </span></div>\n}","import {memo} from 'react'\nimport {format, fromUnixTime} from \"date-fns\";\n\nfunction Duration(props: { start: number, end: number }) {\n    return (\n        <dt className=\"col-span-full text-center\">\n            {(format(fromUnixTime(props.start), \"yyyy-MM-dd HH:mm\"))} &ndash; {(format(fromUnixTime(props.end), \"yyyy-MM-dd HH:mm\"))}\n        </dt>\n    )\n}\n\nexport default memo(Duration);","export default function Progress(props: { title: string, value: number, max: number, rtl?: boolean }) {\n    let {title, value, max, rtl} = props;\n    value = Number(value).toFixed(2);\n    max = Number(max).toFixed(2);\n    return (\n        <>\n            <dt>{title}</dt>\n            <div className=\"rounded-sm h-3 bg-gray-900 w-full my-auto\">\n                <div\n                    className={\"bg-gradient-to-r from-primary to-secondary rounded-sm h-full \" + (rtl ? \"float-right\" : \"\")}\n                    style={{width: value / max * 100 + \"%\"}}>\n                </div>\n            </div>\n            <label className=\"ml-2 text-right truncate\">◎{value}<small className=\"text-gray-400\">/{max}</small></label>\n        </>\n    )\n}","import Badge from \"./Stream/Badge\";\nimport {getUnixTime} from \"date-fns\";\nimport Duration from \"./Stream/Duration\";\nimport Progress from \"./Stream/Progress\";\nimport {useEffect, useState} from \"react\";\nimport {StreamData} from \"../utils/helpers\";\nimport {XIcon} from \"@heroicons/react/outline\";\nimport {\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COLOR,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants/constants\";\n\nexport default function Stream(props: { data: StreamData, myAddress: string, id: string, removeStream: void, onStatusUpdate: void, onCancel: void, onWithdraw: void }) {\n    const {start, end, withdrawn, amount, receiver, sender, status} = props.data;\n    const {myAddress, removeStream, onStatusUpdate, onCancel, onWithdraw, id} = props;\n\n    const color = STREAM_STATUS_COLOR[status];\n\n    const [streamed, setStreamed] = useState(getStreamed(start, end, amount))\n    const [available, setAvailable] = useState(streamed - withdrawn);\n\n    const showWithdraw = status === STREAM_STATUS_STREAMING || (status === STREAM_STATUS_COMPLETE && withdrawn < amount);\n    const showCancel = (status === STREAM_STATUS_STREAMING || status === STREAM_STATUS_SCHEDULED) && myAddress === sender\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setStreamed(getStreamed(start, end, amount));\n            setAvailable(streamed - withdrawn);\n            const tmpStatus = updateStatus(status, start, end);\n            if (tmpStatus !== status) {\n                onStatusUpdate(tmpStatus)\n            }\n        }, 1000)\n        return () => clearInterval(interval);\n    });\n\n    return (\n        <dl className={`text-white my-4 grid gap-y-4 gap-x-2 grid-cols-3 p-4 bg-${color}-300 bg-opacity-10 hover:bg-opacity-20 shadow rounded-lg`}>\n            <div className=\"col-span-full\">\n                <Badge className=\"inline\" type={status} color={color}/>\n                <button onClick={removeStream}\n                        className={`p-1.5 h-6 w-6 float-right align-top rounded-sm hover:bg-${color}-100 focus:outline-none focus:ring-1`}>\n                    <XIcon className=\"float-right w-3 h-3\"/>\n                </button>\n            </div>\n            <Duration start={start} end={end}/>\n            <dt>ID</dt>\n            <dd className=\"col-span-2 text-sm text-gray-400 truncate\">{id}</dd>\n            <dt>Recipient</dt>\n            <dd className=\"col-span-2 text-sm text-gray-400 truncate\">{receiver}</dd>\n            {status === STREAM_STATUS_CANCELED ? (\n                <>\n                    <Progress title=\"Withdrawn\" value={withdrawn} max={amount}/>\n                    <Progress title=\"Returned\" value={amount - withdrawn} max={amount} rtl={true}/>\n                </>\n            ) : (\n                <>\n                    <Progress title=\"Streamed\" value={streamed} max={amount}/>\n                    <Progress title=\"Withdrawn\" value={withdrawn} max={amount}/>\n                    {myAddress === receiver &&\n                    (<>\n                        <dt>Available<br/>\n                            <sup className=\"text-xs text-gray-300 align-top\">for withdrawal</sup></dt>\n                        <dd className=\"col-span-2\">◎{available.toFixed(2)}</dd>\n                        {showWithdraw && (<button onClick={onWithdraw}\n                                                className=\"rounded-md text-sm bg-green-500 hover:bg-green-700 active:bg-green text-white py-1 px-2\">\n                            Withdraw\n                        </button>)}\n                    </>)}\n                    { showCancel && (<button onClick={onCancel}\n                                                                    className=\"rounded-md text-sm bg-red-400 hover:bg-red-600 active:bg-red text-white py-1 px-2\">\n                        Cancel</button>)}\n                </>)}\n        </dl>\n    )\n}\n\nexport function getStreamed(start: number, end: number, amount: number, timestamp?: number) {\n    timestamp = timestamp || getUnixTime(new Date());\n\n    if (timestamp < start) return 0\n    if (timestamp > end) return amount;\n\n    return (timestamp - start) / (end - start) * amount;\n}\n\nfunction updateStatus(status: string, start: number, end: number) {\n    const now = getUnixTime(new Date());\n    if (status === STREAM_STATUS_SCHEDULED && now >= start) {\n        return STREAM_STATUS_STREAMING;\n    } else if (status === STREAM_STATUS_STREAMING && now >= end) {\n        return STREAM_STATUS_COMPLETE;\n    } else {\n        return status;\n    }\n}","export default function Footer() {\n    return (<footer className=\"mt-40 text-center text-sm font-mono text-gray-400\">\n        <img src=\"https://solana.com/branding/horizontal/logo-horizontal-gradient-dark.png\"\n             className=\"w-40 mx-auto my-2\" alt=\"Solana logo\"/>\n        <small>\n            <code>BUIDLed by <a href=\"https://streamflow.finance\" className=\"text-gray-300\" rel=\"noopener noreferrer\"\n                                target=\"_blank\">StreamFlow</a><br/>\n                during <a href=\"https://solana.com/solanaszn\" target=\"_blank\" className=\"text-gray-300\"\n                   rel=\"noopener noreferrer\">SOLANASZN</a></code></small>\n    </footer>)\n}","export default function Logo(props: {src: string}){\n    return (\n        <div className=\"mb-8 text-white\">\n            <img src={props.src} alt=\"StreamFlow Finance logo\" className=\"w-24 mx-auto\"/>\n            <h1 className=\"text-6xl text-center\">Stream<strong>Flow</strong></h1>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/logo.c4294b7c.png\";","import {useEffect, useMemo, useState} from \"react\";\nimport {clusterApiUrl, Connection, Keypair, LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport {add, format, getUnixTime} from \"date-fns\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {ExternalLinkIcon} from \"@heroicons/react/outline\";\nimport NotConnected from \"./Pages/NotConnected\";\nimport {\n    Amount,\n    Banner,\n    Curtain,\n    DateTime,\n    getStreamed,\n    Recipient,\n    SelectToken,\n    Stream,\n    Logo,\n    Footer,\n    ButtonPrimary\n} from \"./Components\";\nimport {\n    _swal,\n    getDecodedAccountData,\n    getExplorerLink,\n    streamCreated,\n    StreamData\n} from \"./utils/helpers\";\n\nimport {\n    AIRDROP_AMOUNT,\n    SOLLET_URL,\n    STREAM_STATUS_CANCELED, TX_FINALITY_CONFIRMED,\n} from \"./constants/constants\";\nimport {_createStream, _cancelStream, _withdrawStream} from './Actions'\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport logo from './logo.png'\n\nfunction App() {\n    const network = clusterApiUrl('devnet');\n    const now = new Date();\n    const pda = Keypair.generate();\n\n    const [providerUrl,] = useState(SOLLET_URL);\n    const [selectedWallet, setSelectedWallet] = useState(undefined);\n    const [connected, setConnected] = useState(false);\n    const [balance, setBalance] = useState(undefined);\n    const [amount, setAmount] = useState(undefined);\n    const [receiver, setReceiver] = useState(undefined);\n    const [startDate, setStartDate] = useState(format(now, \"yyyy-MM-dd\"));\n    const [startTime, setStartTime] = useState(format(add(now, {minutes: 1}), \"HH:mm\"));\n    const [endDate, setEndDate] = useState(startDate);\n    const [endTime, setEndTime] = useState(startTime);\n    const [loading, setLoading] = useState(false);\n    const [airdropTxSignature, setAirdropTxSignature] = useState(undefined)\n    const [streams, setStreams] = useState(localStorage.streams ? JSON.parse(localStorage.streams) : {})\n\n    const connection = useMemo(() => new Connection(network), [network]);\n    const urlWallet = useMemo(() => new Wallet(providerUrl, network), [providerUrl, network]);\n\n    useEffect(() => {\n        if (selectedWallet) {\n            selectedWallet.on('connect', () => {\n                setConnected(true);\n                connection.getBalance(selectedWallet.publicKey)\n                    .then(result => setBalance(result / LAMPORTS_PER_SOL));\n                toast.success('Connected to wallet!');\n            });\n            selectedWallet.on('disconnect', () => {\n                setConnected(false);\n                setSelectedWallet(undefined);\n                toast.info('Disconnected from wallet');\n            });\n            selectedWallet.connect();\n            return () => {\n                selectedWallet.disconnect();\n            };\n        }\n    }, [connection, selectedWallet]);\n\n    useEffect(() => {\n        const newStreams = {...streams}\n        const streamID = window.location.hash.substring(1);\n\n        if (streamID) {\n            try {\n                new PublicKey(streamID);\n                newStreams[streamID] = undefined; // We're setting the data few lines below\n            } catch (e) {\n                toast.error(\"Stream URL not valid. Please double check with the sender.\")\n            }\n        }\n\n        for (const id in newStreams) {\n            if (newStreams.hasOwnProperty(id)) {\n                //first, the cleanup\n                let pk = undefined\n                try {\n                    pk = new PublicKey(id);\n                } catch (e) {\n                    toast.error(e.message + id)\n                    removeStream(id, true);\n                }\n\n                if (pk) {\n                    connection.getAccountInfo(new PublicKey(id)).then(result => {\n                        const temp = {...streams}\n                        if (result?.data) {\n                            temp[id] = getDecodedAccountData(result.data);\n                        } else {\n                            if (id === streamID) {\n                                toast.error(\"Stream URL not valid. Please double check with the sender.\")\n                            }\n                            delete temp[id]\n                        }\n                        setStreams(temp)\n                    })\n                }\n            }\n        }\n        // this is on purpose, as we want it executed only once (during initialization)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        localStorage.streams = JSON.stringify(streams);\n    }, [streams])\n\n    useEffect(() => {\n        if (airdropTxSignature) {\n            connection.confirmTransaction(airdropTxSignature, TX_FINALITY_CONFIRMED).then(\n                result => {\n                    if (result.value.err) {\n                        toast.error('Airdrop failed!')\n                    } else {\n                        setBalance(balance + AIRDROP_AMOUNT)\n                        toast.success(\"Airdrop confirmed. Balance updated!\")\n                    }\n                }\n            )\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [airdropTxSignature])\n\n    async function requestAirdrop() {\n        setLoading(true);\n        const signature = await connection.requestAirdrop(selectedWallet.publicKey, AIRDROP_AMOUNT * LAMPORTS_PER_SOL);\n        setAirdropTxSignature(signature);\n        setLoading(false);\n        toast.success(\"Airdrop requested! Balance will update soon.\")\n    }\n\n    function validate(element) {\n        const {name, value} = element;\n        let start;\n        let msg = \"\";\n        switch (name) {\n            case \"start\":\n                start = new Date(value + \"T\" + startTime);\n                msg = start < new Date() ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"start_time\":\n                start = new Date(startDate + \"T\" + value);\n                msg = start < new Date() ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"end\":\n                msg = new Date(value) < new Date(startDate) ? \"Umm... end date before the start date?\" : \"\";\n                break;\n            case \"end_time\":\n                start = new Date(startDate + \"T\" + startTime);\n                const end = new Date(endDate + \"T\" + value);\n                msg = end < start ? \"Err... end time before the start time?\" : \"\";\n                break;\n            default:\n        }\n        element.setCustomValidity(msg);\n    }\n\n    async function createStream() {\n        const form = document.getElementById('form');\n        for (const elem of form.elements) {\n            validate(elem);\n        }\n\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return false;\n        }\n\n        const start = getUnixTime(new Date(startDate + \"T\" + startTime));\n        let end = getUnixTime(new Date(endDate + \"T\" + endTime));\n\n        // Make sure that end time is always AFTER start time\n        if (end === start) {\n            end = start + 1;\n        }\n\n        setLoading(true);\n        const data = new StreamData(selectedWallet.publicKey.toBase58(), receiver, amount, start, end);\n        const success = await _createStream(data, connection, selectedWallet, network, pda)\n        setLoading(false);\n        if (success) {\n            streamCreated(pda.publicKey.toBase58())\n            // const newBalance = await connection.getBalance(selectedWallet.publicKey);\n            setBalance(balance - amount)\n            setStreams({...streams, [pda.publicKey.toBase58()]: data})\n        }\n    }\n\n    async function withdrawStream(id: string) {\n        const {start, end, amount} = streams[id];\n        const success = await _withdrawStream(id, streams[id], connection, selectedWallet, network)\n        if (success) {\n            const withdrawn = getStreamed(start, end, amount)\n            setBalance(balance - withdrawn)\n            setStreams({...streams, [id]: {...streams[id], withdrawn}})\n        }\n    }\n\n    async function cancelStream(id: string) {\n        const {start, end, amount} = streams[id];\n        const now = new Date();\n        const withdrawn = getStreamed(start, end, amount);\n        const success = await _cancelStream(id, streams[id], connection, selectedWallet, network)\n        if (success) {\n            setBalance(balance + amount - withdrawn)\n            setStreams({\n                ...streams,\n                [id]: {...streams[id], withdrawn, canceled_at: getUnixTime(now), status: STREAM_STATUS_CANCELED}\n            })\n        }\n    }\n\n    async function removeStream(id: string, skipPrompt?: boolean) {\n        if (!skipPrompt && await _swal()) {\n            const newStreams = {...streams}\n            delete newStreams[id];\n            setStreams(newStreams)\n        }\n    }\n\n    return (\n        <div>\n            <Banner/>\n            <div className={\"mx-auto bg-blend-darken px-4 my-4\"}>\n                <Logo src={logo}/>\n                {connected ? (\n                    <div className=\"mx-auto grid grid-cols-1 gap-16 max-w-lg xl:grid-cols-2 xl:max-w-5xl\">\n                        <div className=\"mb-8\">\n                            <Curtain visible={loading}/>\n                            <div className=\"mb-4 text-white\">\n                                <strong className=\"text-gray-400 hover:text-white\">\n                                    <a href={getExplorerLink('address', selectedWallet.publicKey.toBase58(), network)}\n                                       target=\"_blank\" rel=\"noopener noreferrer\">\n                                        My Wallet Account <ExternalLinkIcon className=\"ml-1 w-4 h-4 inline\"/>:\n                                    </a></strong>\n                                <span className=\"block truncate\">{selectedWallet.publicKey.toBase58()}</span>\n                            </div>\n                            <div className=\"mb-4 clearfix text-white\">\n                                <strong className=\"block\">Balance:</strong>\n                                <span>◎{Number(balance).toFixed(4)}</span>\n                                <button type=\"button\" onClick={() => selectedWallet.disconnect()}\n                                        className=\"float-right items-center px-2.5 py-1.5 shadow-sm text-xs  font-medium rounded bg-gray-500 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\">\n                                    Disconnect\n                                </button>\n                                <ButtonPrimary text=\"Airdrop\" action={requestAirdrop}\n                                               className=\"float-right mr-2 px-2.5 py-1.5 text-xs my-0 rounded active:bg-white\"\n                                               disabled={loading}/>\n                            </div>\n                            <hr/>\n                            <form onSubmit={createStream} id=\"form\">\n                                <div className=\"my-4 grid gap-4 grid-cols-5 sm:grid-cols-2\">\n                                    <Amount onChange={setAmount} value={amount} max={balance}/>\n                                    <SelectToken/>\n                                    <Recipient onChange={setReceiver} value={receiver}/>\n                                    <DateTime\n                                        title=\"start\"\n                                        date={startDate}\n                                        updateDate={e => setStartDate(e.target.value)}\n                                        time={startTime}\n                                        updateTime={e => setStartTime(e.target.value)}\n                                    />\n                                    <DateTime\n                                        title=\"end\"\n                                        date={endDate}\n                                        updateDate={e => setEndDate(e.target.value)}\n                                        time={endTime}\n                                        updateTime={e => setEndTime(e.target.value)}/>\n                                </div>\n                                <ButtonPrimary text=\"Stream!\" className=\"font-bold text-2xl my-5\"\n                                               action={() => createStream()}/>\n                            </form>\n                        </div>\n                        {/*move to different file StreamsContainer */}\n                        <div>\n                            <strong className=\"text-white text-center text-2xl block\">My Streams</strong>\n                            {Object.keys(streams).length > 0 ? (\n                                Object.entries(streams)\n                                    .sort(([, stream1], [, stream2]) => stream2.start - stream1.start)\n                                    .map(([id, data]) => (\n                                        <Stream\n                                            onStatusUpdate={(status) => setStreams({\n                                                ...streams,\n                                                [id]: {...streams[id], status}\n                                            })}\n                                            onWithdraw={() => withdrawStream(id)}\n                                            onCancel={() => cancelStream(id)}\n                                            key={id}\n                                            id={id}\n                                            data={data}\n                                            myAddress={selectedWallet.publicKey.toBase58()}\n                                            removeStream={() => removeStream(id)}/>\n                                    ))\n                            ) : (\n                                //move to EmptyStreams\n                                <div className=\"mx-auto my-10 text-white text-center\">\n                                    <span>Your streams will appear here.</span>\n                                    <br/>\n                                    <span>Start streaming!</span>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                ) : (\n                    <NotConnected action={() => setSelectedWallet(urlWallet)}/>\n                )}\n            </div>\n            <ToastContainer hideProgressBar position=\"bottom-left\" limit={4}/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants/constants\";\nimport BufferLayout from \"buffer-layout\";\nimport {clusterApiUrl, LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport {u64} from \"@solana/spl-token\";\nimport {getUnixTime} from \"date-fns\";\nimport swal from \"sweetalert\";\nimport {Buffer} from 'buffer/';\n\nexport const publicKey = (property = \"publicKey\"): BufferLayout.Layout => {\n    return BufferLayout.blob(32, property);\n};\n\nexport const uint64 = (property = \"uint64\"): BufferLayout.Layout => {\n    return BufferLayout.blob(8, property);\n};\n\nconst DataLayout = BufferLayout.struct([\n    uint64(\"starttime\"),\n    uint64(\"endtime\"),\n    uint64(\"amount\"),\n    uint64(\"withdrawn\"),\n    publicKey(\"sender\"),\n    publicKey(\"recipient\"),\n]);\n\nexport function getDecodedAccountData(buffer: Buffer) {\n    const accountData = DataLayout.decode(buffer);\n\n    const start = Number(u64.fromBuffer(accountData.starttime));\n    const end = Number(u64.fromBuffer(accountData.endtime));\n    const amount = Number(u64.fromBuffer(accountData.amount)) / LAMPORTS_PER_SOL;\n    const withdrawn = Number(u64.fromBuffer(accountData.withdrawn)) / LAMPORTS_PER_SOL;\n    const sender = (new PublicKey(accountData.sender)).toBase58();\n    const recipient = (new PublicKey(accountData.recipient)).toBase58();\n\n    /*\n    const start = Number(buffer.readBigUInt64LE(0));\n    const start = u64.fromBuff\n    const end = Number(buffer.readBigUInt64LE(8));\n    const amount = Number(buffer.readBigUInt64LE(16)) / LAMPORTS_PER_SOL;\n    const withdrawn = Number(buffer.readBigUInt64LE(24)) / LAMPORTS_PER_SOL;\n    const sender = (new PublicKey(buffer.slice(32, 64))).toBase58();\n    const recipient = (new PublicKey(buffer.slice(64, 96))).toBase58();\n    */\n\n    const status = getStreamStatus(Number(start), Number(end), getUnixTime(new Date())) //in milliseconds\n\n    return new StreamData(sender, recipient, amount, start, end, withdrawn, status);\n}\n\nexport function getExplorerLink(type: string, id: string, network?: string): string {\n    network = network || clusterApiUrl('mainnet-beta');\n    const cluster = getClusterName(network) || `custom&customUrl=${network}`\n    return `https://explorer.solana.com/${type}/${id}?cluster=${cluster}`;\n\n}\n\nexport function getStreamStatus(start: number, end: number, now: number) {\n    if (now < start) {\n        return STREAM_STATUS_SCHEDULED\n    } else if (now < end) {\n        return STREAM_STATUS_STREAMING\n    } else {\n        return STREAM_STATUS_COMPLETE\n    }\n}\n\nexport function StreamData(sender: string, receiver: string, amount: number, start: number, end: number, withdrawn?: number, status?: string, canceled_at: number) {\n    this.sender = sender;\n    this.receiver = receiver;\n    this.amount = amount;\n    this.start = start;\n    this.end = end;\n    this.withdrawn = withdrawn || 0;\n    this.status = canceled_at ? STREAM_STATUS_CANCELED : (status || STREAM_STATUS_SCHEDULED);\n    this.canceled_at = canceled_at;\n}\n\nexport function _swal(): Promise {\n    return swal({text: \"Are you sure?\", icon: \"warning\", buttons: true})\n}\n\nexport function copyToClipboard(value): void {\n    const el = document.createElement('textarea');\n    el.value = value;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport function streamCreated(id: string) {\n    const url = window.location.origin + \"#\" + id;\n    swal({\n        button: \"Copy Stream URL\",\n        icon: 'success',\n        title: \"Stream created!\",\n        //sweet alert accepts pure HTML Node, so some wrapping must be done https://sweetalert.js.org/guides/#using-dom-nodes-as-content\n        content:\n            {\n                element: \"a\",\n                attributes: {\n                    className: \"text-primary block truncate max-w-full\",\n                    href: url,\n                    target: \"_blank\",\n                    innerHTML: url\n                }\n            }\n    }).then((clicked) => {\n        if (clicked) {\n            copyToClipboard(url);\n            swal(\"Link copied to clipboard!\", \"Send it to the recipient!\", \"success\")\n        }\n    })\n}\n\nfunction getClusterName(url: string) {\n    const hasMatch = url.match(/https:\\/\\/api.(.*).solana.com/)\n    return hasMatch ? hasMatch[1] : null\n}","export const PROGRAM_ID = \"2DvvSEde36Ch3B52g9hKWDYbfmJimLpJwVBV9Cknypi4\";\nexport const STREAMFLOW_ACCOUNT_ID = \"DrFtxPb9F6SxpHHHFiEtSNXE3SZCUNLXMaHS6r8pkoz2\";","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function ToastrLink(props: { url: string, urlText: string, nonUrlText: string }) {\n    const {url, urlText, nonUrlText} = props;\n    return <span>{nonUrlText}<br/>\n        <a className=\"font-bold\"\n           href={url} rel=\"noopener noreferrer\"\n           target=\"_blank\">{urlText}<ExternalLinkIcon className=\"ml-1 w-4 h-4 inline\"/>\n        </a>\n    </span>\n}","import {toast} from \"react-toastify\";\nimport {Connection, Keypair, Transaction} from \"@solana/web3.js\";\nimport ToastrLink from \"../Components/ToastrLink\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {INSTRUCTION_CREATE_STREAM, TX_FINALITY_CONFIRMED} from \"../constants/constants\";\nimport {getExplorerLink} from \"../utils/helpers\";\n\nexport default async function sendTransaction(type: number, transaction: Transaction, connection: Connection, wallet: Wallet, network?: string, pda?: Keypair) {\n    try {\n        transaction.recentBlockhash = (await connection.getRecentBlockhash()).blockhash;\n        toast.info('Sending request to wallet...');\n        transaction.feePayer = wallet.publicKey;\n\n        if (type === INSTRUCTION_CREATE_STREAM) {\n            transaction.partialSign(pda);\n        }\n\n        const signed = await wallet.signTransaction(transaction);\n        const signature = await connection.sendRawTransaction(signed.serialize());\n        toast.info('Submitted transaction. Awaiting confirmation...', {autoClose:15000});\n\n        // can use 'finalized' which gives 100% certainty, but requires much longer waiting.\n        const finality = TX_FINALITY_CONFIRMED\n        await connection.confirmTransaction(signature, finality)\n        const transactionUrl = getExplorerLink('tx', signature, network);\n        toast.success(<ToastrLink\n            url={transactionUrl}\n            urlText=\"View on explorer\"\n            nonUrlText={`Transaction ${finality}!` + (finality === TX_FINALITY_CONFIRMED ? \" Please allow it some time to finalize.\" : \"\")}\n        />, {autoClose: 20000, closeOnClick: false});\n        return true;\n    } catch (e) {\n        console.warn(e);\n        //todo log the error somewhere for our reference\n        toast.error('Error: ' + e.message);\n        return false;\n    }\n}","import {\n    Connection,\n    Keypair,\n    LAMPORTS_PER_SOL,\n    PublicKey,\n    SystemProgram,\n    Transaction,\n    TransactionInstruction\n} from \"@solana/web3.js\";\nimport {PROGRAM_ID} from \"../constants/ids\";\nimport BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CREATE_STREAM} from \"../constants/constants\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\n\nexport default async function _createStream(data: StreamData, connection: Connection, wallet: Wallet, network?: string, pda: Keypair) {\n    const instruction = getCreateStreamInstruction(data, pda.publicKey)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_CREATE_STREAM, tx, connection, wallet, network, pda);\n}\n\nfunction getCreateStreamInstruction(data: StreamData, pdaPub: PublicKey): TransactionInstruction {\n    const {sender, receiver} = data;\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver), //recipient\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: pdaPub, //PDA used for data\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId, //system program required to make a transfer\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(PROGRAM_ID),\n        data: encodeInstructionData(data),\n    });\n}\n\n\nfunction encodeInstructionData(data: StreamData) {\n    const {amount, start, end} = data;\n    // Packed as little endian\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.u32(\"start\"),\n        BufferLayout.u32(\"end\"),\n        // N.B. JS Number has 53 significant bits, so numbers larger than\n        // 2^53 can be misrepresented\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const encoded = Buffer.alloc(layout.span);\n    layout.encode({\n            instruction: INSTRUCTION_CREATE_STREAM,\n            start: start,\n            end: end,\n            // amount: Number.MAX_SAFE_INTEGER // limited to 2^53 - 1 = 9007199254740991\n            amount: Math.trunc(amount * LAMPORTS_PER_SOL),\n        },\n        encoded\n    );\n\n    // UInt64 alternative is to remove the \"amount\" from layout encoding and\n    // use the following code:\n    // //encoded.writeBigUInt64LE(BigInt(\"18446744073709551615\"), 9)\n\n    return encoded;\n}","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_WITHDRAW_STREAM} from \"../constants/constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport {PROGRAM_ID, STREAMFLOW_ACCOUNT_ID} from \"../constants/ids\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\n\nexport default async function _withdrawStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {receiver} = data;\n    const instruction = getWithdrawStreamInstruction(account_id, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_WITHDRAW_STREAM, tx, connection, wallet, network)\n}\n\nfunction getWithdrawStreamInstruction(account_id, receiver) {\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(receiver),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            //needed to transfer the rent only during the final withdrawal transaction\n            pubkey: new PublicKey(STREAMFLOW_ACCOUNT_ID),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(PROGRAM_ID),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const data = Buffer.alloc(layout.span);\n    //TODO - allow withdrawal of arbitrary (allowed) amount\n    layout.encode({\n            instruction: INSTRUCTION_WITHDRAW_STREAM,\n            amount: 0,// 0 = whole available amount is withdrawn.\n        },\n        data\n    );\n    return data;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CANCEL_STREAM} from \"../constants/constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport {PROGRAM_ID} from \"../constants/ids\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\n\nexport default async function _cancelStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {sender, receiver} = data;\n    const instruction = getCancelStreamInstruction(account_id, sender, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_CANCEL_STREAM, tx, connection, wallet, network)\n}\n\nfunction getCancelStreamInstruction(account_id, sender, receiver) {\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(PROGRAM_ID),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([BufferLayout.u8(\"instruction\")]);\n    const data = Buffer.alloc(layout.span);\n\n    layout.encode({instruction: INSTRUCTION_CANCEL_STREAM}, data);\n\n    return data;\n}\n"],"sourceRoot":""}
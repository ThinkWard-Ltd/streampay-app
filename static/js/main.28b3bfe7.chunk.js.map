{"version":3,"sources":["constants/ids.js","constants/index.js","Components/ButtonPrimary.js","Pages/NotConnected.js","Components/Recipient.js","Components/SelectToken.js","Components/Banner.js","Components/DateTime.js","Components/Amount.js","Components/Curtain.js","Components/Stream/Badge.js","Components/Stream/ActionButton.js","Components/Stream/Duration.js","Components/Stream/Progress.js","Components/Stream.js","Components/Footer.js","Components/Logo.js","Components/Link.js","Components/Address.js","Contexts/FormContext.js","Stores/BalanceStore.js","Contexts/NetworkContext.js","Stores/StreamsStore.js","Components/CreateStreamForm.js","Components/Account.js","Components/EmptyStreams.js","Containers/StreamsContainer.js","Pages/Main.js","logo.png","App.js","reportWebVitals.js","index.js","Stores/NetworkStore.js","utils/helpers.js","Components/ToastrLink.js","Actions/sendTransaction.js","Actions/createStream.js","Actions/withdrawStream.js","Actions/cancelStream.js"],"names":["PROGRAM_ID","STREAMFLOW_ACCOUNT_ID","SOLLET_URL","AIRDROP_AMOUNT","TX_FINALITY_CONFIRMED","INSTRUCTION_CREATE_STREAM","INSTRUCTION_WITHDRAW_STREAM","INSTRUCTION_CANCEL_STREAM","EXPLORER_TYPE_ADDR","STREAM_STATUS_SCHEDULED","STREAM_STATUS_STREAMING","STREAM_STATUS_COMPLETE","STREAM_STATUS_CANCELED","STREAM_STATUS_COLOR","ButtonPrimary","children","className","rest","NotConnected","props","width","height","src","title","frameBorder","allowFullScreen","type","onClick","action","Recipient","htmlFor","name","id","defaultValue","value","onChange","e","target","pattern","placeholder","aria-describedby","required","SelectToken","disabled","Banner","state","hidden","this","setState","Component","DateTime","date","min","format","Date","max","add","years","updateDate","time","updateTime","Amount","step","autoFocus","Number","MAX_SAFE_INTEGER","Curtain","visible","Badge","color","fill","viewBox","cx","cy","r","ActionButton","Duration","fromUnixTime","start","end","memo","Progress","rtl","toFixed","style","Stream","data","withdrawn","amount","receiver","sender","status","myAddress","removeStream","onStatusUpdate","onCancel","onWithdraw","useState","getStreamed","streamed","setStreamed","available","setAvailable","showWithdraw","showCancel","useEffect","interval","setInterval","tmpStatus","now","getUnixTime","updateStatus","clearInterval","Link","url","getExplorerLink","Address","address","timestamp","Footer","alt","href","rel","Logo","iconClassName","copied","setCopied","copyToClipboard","setTimeout","FormContext","createContext","undefined","FormProvider","setAmount","setReceiver","startDate","setStartDate","minutes","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","Provider","useBalanceStore","create","set","balance","setBalance","NetworkContext","NetworkProvider","clusterApiUrl","network","providerUrl","selectedWallet","setSelectedWallet","connected","setConnected","connection","useMemo","Connection","urlWallet","Wallet","useNetworkContext","useContext","useStreamStore","streams","localStorage","JSON","parse","setStreams","CreateStreamForm","loading","setLoading","pda","Keypair","generate","validate","element","msg","setCustomValidity","createStream","a","form","document","getElementById","elements","checkValidity","reportValidity","StreamData","publicKey","toBase58","_createStream","success","streamCreated","onSubmit","Account","wallet","airdropTxSignature","setAirdropTxSignature","requestAirdrop","LAMPORTS_PER_SOL","signature","toast","confirmTransaction","then","result","err","error","disconnect","EmptyStreams","StreamsContainer","_withdrawStream","_cancelStream","canceled_at","skipPrompt","_swal","newStreams","streamID","window","location","hash","substring","PublicKey","hasOwnProperty","pk","message","getAccountInfo","temp","getDecodedAccountData","stringify","Object","keys","length","entries","sort","stream1","map","withdrawStream","cancelStream","Main","App","on","getBalance","info","logo","connect","hideProgressBar","position","limit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","networkStore","createStore","setNetwork","property","BufferLayout","blob","uint64","DataLayout","struct","buffer","accountData","decode","u64","fromBuffer","starttime","endtime","recipient","getStreamStatus","useNetworkStore","getState","cluster","hasMatch","match","getClusterName","swal","text","icon","buttons","el","createElement","setAttribute","left","body","appendChild","select","execCommand","removeChild","origin","button","content","attributes","innerHTML","clicked","ToastrLink","urlText","nonUrlText","sendTransaction","transaction","getRecentBlockhash","recentBlockhash","blockhash","autoClose","feePayer","partialSign","signTransaction","signed","sendRawTransaction","serialize","dismiss","finality","transactionUrl","closeOnClick","console","warn","instruction","getCreateStreamInstruction","tx","Transaction","pdaPub","TransactionInstruction","pubkey","isSigner","isWritable","SystemProgram","programId","encodeInstructionData","layout","u8","u32","nu64","encoded","Buffer","alloc","span","encode","Math","trunc","account_id","getWithdrawStreamInstruction","getCancelStreamInstruction"],"mappings":"imBAAaA,EAAa,+CACbC,EAAwB,+CCCxBC,EAAa,wBACbC,EAAiB,GAEjBC,EAAwB,YAGxBC,EAA4B,EAC5BC,EAA8B,EAC9BC,EAA4B,EAG5BC,EAAqB,UAIrBC,EAA0B,YAC1BC,EAA0B,YAC1BC,EAAyB,WACzBC,EAAyB,WAEzBC,GAAmB,mBAC3BJ,EAA0B,QADC,cAE3BC,EAA0B,SAFC,cAG3BC,EAAyB,QAHE,cAI3BC,EAAyB,OAJE,I,yQCtBjB,SAASE,EAAT,GAAwD,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,UAAcC,EAAO,wCAElE,OACI,gDAAQD,UAFQ,uOAEiBA,GAAeC,GAAhD,aACKF,KCFE,SAASG,EAAaC,GACjC,OAAO,sBAAKH,UAAU,mBAAf,UACH,wBAAQI,MAAM,OAAOC,OAAQ,IAAKC,IAAI,qDAC9BC,MAAM,0BAA0BC,YAAY,IAC5CC,iBAAe,EAFvB,kBAGA,cAACX,EAAD,CAAeE,UAAU,0BACVU,KAAK,SACLC,QAASR,EAAMS,OAF9B,wB,YCPO,SAASC,EAAUV,GAC9B,OACI,sBAAKH,UAAU,gBAAf,UACI,uBAAOc,QAAQ,UAAUd,UAAU,kCAAnC,+BAGA,qBAAKA,UAAU,OAAf,SACI,uBACIU,KAAK,OACLK,KAAK,UACLC,GAAG,UACHC,aAAcd,EAAMe,MACpBC,SAAU,SAAAC,GAAC,OAAIjB,EAAMgB,SAASC,EAAEC,OAAOH,QACvCI,QAAQ,sEACRtB,UAAU,yHACVuB,YAAY,kCACZC,mBAAiB,sBACjBC,UAAQ,SCjBb,SAASC,IACpB,OACI,sBAAK1B,UAAU,2BAAf,UACI,uBAAOc,QAAQ,QAAQd,UAAU,kCAAjC,mBAGA,yBACIgB,GAAG,QACHD,KAAK,QACLf,UAAU,8HAA6IiB,aAAa,MAHxK,UAKI,yCACA,wBAAQU,UAAQ,EAAhB,2CACA,wBAAQA,UAAQ,EAAhB,qCACA,wBAAQA,UAAQ,EAAhB,sCACA,wBAAQA,UAAQ,EAAhB,mC,4CCXKC,E,4MACjBC,MAAQ,CACJC,QAAQ,G,4CAGZ,WAAU,IAAD,OACL,OACI,qBAAK9B,UAAS,8BAAyB+B,KAAKF,MAAMC,QAAU,UAA5D,SACI,sBAAK9B,UAAU,8CAAf,UACI,qBAAKA,UAAU,gCAAf,SACI,oBAAGA,UAAU,wBAAb,UACI,8DACA,sBAAMA,UAAU,mBAAhB,wCAGR,qBACIA,UAAU,uFADd,SAEI,yBAAQU,KAAK,SAASC,QAAS,kBAAM,EAAKqB,SAAS,CAACF,QAAQ,KACpD9B,UAAU,wFADlB,UAGI,sBAAMA,UAAU,UAAhB,qBACA,cAAC,IAAD,CAAOA,UAAU,qC,GArBTiC,a,kBCFrB,SAASC,EAAS/B,GAC7B,OACI,qCACI,sBAAKH,UAAU,2BAAf,UACI,wBAAOc,QAASX,EAAMI,MACfP,UAAU,6CADjB,UAC+DG,EAAMI,MADrE,WAEA,qBAAKP,UAAU,OAAf,SACI,uBAAOU,KAAK,OAAOK,KAAMZ,EAAMI,MAAOS,GAAIb,EAAMI,MACzCW,MAAOf,EAAMgC,KACbC,IAAKC,YAAO,IAAIC,KAAQ,cACxBC,IAAKF,YAAOG,YAAI,IAAIF,KAAQ,CAACG,MAAO,IAAK,cACzCtB,SAAUhB,EAAMuC,WAChB1C,UAAU,yHACVuB,YAAY,GAAGC,mBAAkBrB,EAAMI,MAAN,eAA8BkB,UAAQ,SAGtF,sBAAKzB,UAAU,2BAAf,UACI,wBAAOc,QAASX,EAAMI,MAAN,QACTP,UAAU,6CADjB,UAC+DG,EAAMI,MADrE,WAEA,qBAAKP,UAAU,OAAf,SACI,uBAAOU,KAAK,OAAOK,KAAMZ,EAAMI,MAAN,QAAuBS,GAAIb,EAAMI,MAAN,QAC7CW,MAAOf,EAAMwC,KACbxB,SAAUhB,EAAMyC,WAChB5C,UAAU,yHACVuB,YAAY,GAAGC,mBAAkBrB,EAAMI,MAAN,oBAAmCkB,UAAQ,YC1BxF,SAASoB,EAAO1C,GAC3B,OACI,sBAAKH,UAAU,2BAAf,UACI,uBAAOc,QAAQ,SAASd,UAAU,kCAAlC,oBAGA,qBAAKA,UAAU,OAAf,SACI,uBACI8C,KAAK,MACLC,WAAW,EACXrC,KAAK,SACLK,KAAK,SACLC,GAAG,SACHC,aAAcd,EAAMe,MACpBC,SAAU,SAAAC,GAAC,OAAIjB,EAAMgB,SAASC,EAAEC,OAAOH,QACvClB,UAAU,yHACVoC,IAAK,EACLG,IAAKpC,EAAMoC,KAAOS,OAAOC,iBACzB1B,YAAY,OACZC,mBAAiB,qBACjBC,UAAU,SCpBf,SAASyB,EAAQ/C,GAC5B,OACI,qBAAKH,UAAS,0EAAqEG,EAAMgD,QAAU,QAAU,UAA7G,SACI,qBAAKnD,UAAU,SAAf,iBCHG,SAASoD,EAAMjD,GAAyC,IAC5DO,EAAgBP,EAAhBO,KAAM2C,EAAUlD,EAAVkD,MACb,OAAO,qBAAKrD,UAAU,SAAf,SACH,uBACIA,UAAS,sEAAiEqD,EAAjE,qBAAmFA,EAAnF,mBADb,UAEI,qBAAKrD,UAAS,wDAAmDqD,EAAnD,QAAgEC,KAAK,eAAeC,QAAQ,UAA1G,SACE,wBAAQC,GAAI,EAAGC,GAAI,EAAGC,EAAG,MAE1BhD,OCRE,SAASiD,EAAaxD,GAAwD,IAClFI,EAAwBJ,EAAxBI,MAAOK,EAAiBT,EAAjBS,OAAQyC,EAASlD,EAATkD,MAEtB,OACI,wBAAQ1C,QAASC,EACTZ,UAAS,gCAA2BqD,EAA3B,yBAAiDA,EAAjD,0BAAwEA,EAAxE,yBADjB,SAEK9C,I,sBCHb,SAASqD,EAASzD,GACd,OACI,qBAAIH,UAAU,4BAAd,UACMqC,YAAOwB,YAAa1D,EAAM2D,OAAQ,oBADxC,WACwEzB,YAAOwB,YAAa1D,EAAM4D,KAAM,uBAKjGC,qBAAKJ,GCXL,SAASK,EAAS9D,GAAsE,IAC9FI,EAA0BJ,EAA1BI,MAAOW,EAAmBf,EAAnBe,MAAOqB,EAAYpC,EAAZoC,IAAK2B,EAAO/D,EAAP+D,IAGxB,OAFAhD,EAAQ8B,OAAO9B,GAAOiD,QAAQ,GAC9B5B,EAAMS,OAAOT,GAAK4B,QAAQ,GAEtB,qCACI,6BAAK5D,IACL,qBAAKP,UAAU,4CAAf,SACI,qBACIA,UAAW,iEAAmEkE,EAAM,cAAgB,IACpGE,MAAO,CAAChE,MAAOc,EAAQqB,EAAM,IAAM,SAG3C,wBAAOvC,UAAU,2BAAjB,mBAA8CkB,EAAM,wBAAOlB,UAAU,gBAAjB,cAAmCuC,W,oBCKpF,SAAS8B,EAAOlE,GAAyI,IAAD,EACjGA,EAAMmE,KAAjER,EAD4J,EAC5JA,MAAOC,EADqJ,EACrJA,IAAKQ,EADgJ,EAChJA,UAAWC,EADqI,EACrIA,OAAQC,EAD6H,EAC7HA,SAAUC,EADmH,EACnHA,OAAQC,EAD2G,EAC3GA,OACjDC,EAAqEzE,EAArEyE,UAAWC,EAA0D1E,EAA1D0E,aAAcC,EAA4C3E,EAA5C2E,eAAgBC,EAA4B5E,EAA5B4E,SAAUC,EAAkB7E,EAAlB6E,WAAYhE,EAAMb,EAANa,GAEhEqC,EAAQxD,IAAoB8E,GAJiI,EAMnIM,mBAASC,EAAYpB,EAAOC,EAAKS,IANkG,mBAM5JW,EAN4J,KAMlJC,EANkJ,OAOjIH,mBAASE,EAAWZ,GAP6G,mBAO5Jc,EAP4J,KAOjJC,EAPiJ,KAS7JC,GAAiBZ,IAAWjF,KAA4BiF,IAAWhF,KAA0B4E,EAAYC,IAAYI,IAAcH,EACnIe,GAAcb,IAAWjF,KAA2BiF,IAAWlF,MAA4BmF,IAAcF,EAa/G,OAZAe,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzBP,EAAYF,EAAYpB,EAAOC,EAAKS,IACpCc,EAAaH,EAAWZ,GACxB,IAAMqB,EAoDlB,SAAsBjB,EAAgBb,EAAeC,GACjD,IAAM8B,EAAMC,YAAY,IAAIxD,MAC5B,OAAIqC,IAAWlF,KAA2BoG,GAAO/B,EACtCpE,IACAiF,IAAWjF,KAA2BmG,GAAO9B,EAC7CpE,IAEAgF,EA3DeoB,CAAapB,EAAQb,EAAOC,GAC1C6B,IAAcjB,GACdG,EAAec,KAEpB,KACH,OAAO,kBAAMI,cAAcN,OAI3B,qBAAI1F,UAAS,kEAA6DqD,EAA7D,4DAAb,UACI,sBAAKrD,UAAU,gBAAf,UACI,cAACoD,EAAD,CAAOpD,UAAU,SAASU,KAAMiE,EAAQtB,MAAOA,IAC/C,wBAAQ1C,QAASkE,EACT7E,UAAS,kEAA6DqD,EAA7D,wCADjB,SAEI,cAAC,IAAD,CAAOrD,UAAU,6BAGzB,cAAC,EAAD,CAAU8D,MAAOA,EAAOC,IAAKA,IAC7B,cAACkC,EAAD,CAAMC,IAAKC,YAAgB3G,IAAoBwB,GAAKT,MAAO,OAC3D,cAAC6F,EAAD,CAASC,QAASrF,EAAIhB,UAAU,qCAChC,cAACiG,EAAD,CAAMC,IAAKC,YAAgB3G,IAAoBiF,GAAWlE,MAAO,cACjE,cAAC6F,EAAD,CAASC,QAAS5B,EAAUzE,UAAU,qCACtC,cAACiE,EAAD,CAAU1D,MAAM,YAAYW,MAAOqD,EAAWhC,IAAKiC,IAClDG,IAAW/E,KACZ,cAACqE,EAAD,CAAU1D,MAAM,WAAWW,MAAOsD,EAASD,EAAWhC,IAAKiC,EAAQN,KAAK,IACvES,IAAW/E,KACZ,qCACI,cAACqE,EAAD,CAAU1D,MAAM,WAAWW,MAAOiE,EAAU5C,IAAKiC,IAChDe,GACA,qCACG,2CAAa,uBACT,qBAAKvF,UAAU,kCAAf,+BACJ,qBAAIA,UAAU,aAAd,mBAA6BqF,EAAUlB,QAAQ,MAC/C,cAACR,EAAD,CAAcpD,MAAM,WAAWK,OAAQoE,EACzB3B,MAAOxD,IAAoBH,UAE5C8F,GAAc,cAAC7B,EAAD,CAAcpD,MAAO,SAAUK,OAAQmE,EACzB1B,MAAOxD,IAAoBD,aAMjE,SAASsF,EAAYpB,EAAeC,EAAaS,EAAgB8B,GAGpE,OAFAA,EAAYA,GAAaR,YAAY,IAAIxD,OAEzBwB,EAAc,EAC1BwC,EAAYvC,EAAYS,GAEpB8B,EAAYxC,IAAUC,EAAMD,GAASU,EClFlC,SAAS+B,IACpB,OAAQ,yBAAQvG,UAAU,oDAAlB,UACJ,qBAAKM,IAAI,2EACJN,UAAU,oBAAoBwG,IAAI,gBACvC,gCACI,+CAAiB,mBAAGC,KAAK,6BAA6BzG,UAAU,gBAAgB0G,IAAI,sBAChErF,OAAO,SADV,wBACiC,uBADlD,UAEW,mBAAGoF,KAAK,+BAA+BpF,OAAO,SAASrB,UAAU,gBACrE0G,IAAI,sBADA,+BCPR,SAASC,EAAKxG,GACzB,OACI,sBAAKH,UAAU,kBAAf,UACI,qBAAKM,IAAKH,EAAMG,IAAKkG,IAAI,0BAA0BxG,UAAU,iBAC7D,qBAAIA,UAAU,uBAAd,mBAA2C,gDCFxC,SAASiG,EAAK9F,GAA6D,IAC/E+F,EAAyB/F,EAAzB+F,IAAK3F,EAAoBJ,EAApBI,MAAOP,EAAaG,EAAbH,UAEnB,OACI,wBAAQA,UAAW,kCAAoCA,EAAvD,SACI,oBAAGyG,KAAMP,EAAK7E,OAAO,SAASqF,IAAI,sBAAlC,UACKnG,GAAS2F,EADd,IACmB,8BAAK,cAAC,IAAD,CAAkBlG,UAAU,0BCJjD,SAASoG,EAAQjG,GAAgD,IACrEkG,EAAsBlG,EAAtBkG,QAASrG,EAAaG,EAAbH,UACV4G,EAAgB,qEAFqD,EAG/C3B,oBAAS,GAHsC,mBAGpE4B,EAHoE,KAG5DC,EAH4D,KAa3E,OACI,uBAAM9G,UAAW,kBAAoBA,EAArC,UACK6G,EACM,uBAAM7G,UAAU,sBAAhB,UAAsC,cAAC,IAAD,CAAWA,UAAW4G,IAAgB,+CAC7E,cAAC,IAAD,CAAe5G,UAAW4G,EAAejG,QAZvD,WACIoG,YAAgBV,GAChBS,GAAU,GACVE,YAAW,WACPF,GAAU,KACX,QAQET,K,2CCnBPY,EAAcC,6BAAcC,GAE3B,SAASC,EAAajH,GACzB,IAAM0F,EAAM,IAAIvD,KADgB,EAGJ2C,wBAASkC,GAHL,mBAGzB3C,EAHyB,KAGjB6C,EAHiB,OAIApC,wBAASkC,GAJT,mBAIzB1C,EAJyB,KAIf6C,EAJe,OAKErC,mBAAS5C,YAAOwD,EAAK,eALvB,mBAKzB0B,EALyB,KAKdC,EALc,OAMEvC,mBAAS5C,YAAOG,YAAIqD,EAAK,CAAC4B,QAAS,IAAK,UAN1C,mBAMzBC,EANyB,KAMdC,EANc,OAOF1C,mBAASsC,GAPP,mBAOzBK,EAPyB,KAOhBC,EAPgB,OAQF5C,mBAASyC,GARP,mBAQzBI,EARyB,KAQhBC,EARgB,KAUhC,OAAO,cAACd,EAAYe,SAAb,CAAsB9G,MAAO,CAChCsD,SACA6C,YACA5C,WACA6C,cACAC,YACAC,eACAE,YACAC,eACAC,UACAC,aACAC,UACAC,cAZG,SAaH5H,EAAMJ,W,oCCrBCkI,GALSC,aAAO,SAAAC,GAAG,MAAK,CACnCC,QAAS,EACTC,WAAY,SAAAD,GAAO,OAAID,EAAI,CAACC,iB,SCC1BE,GAAiBpB,6BAAcC,GAE9B,SAASoB,GAAgBpI,GAAQ,IAAD,EACf8E,mBAASuD,YAAc,WAApCC,EAD4B,sBAEZxD,mBAAS/F,KAAzBwJ,EAF4B,sBAGSzD,wBAASkC,GAHlB,mBAG5BwB,EAH4B,KAGZC,EAHY,OAID3D,oBAAS,GAJR,mBAI5B4D,EAJ4B,KAIjBC,EAJiB,KAM7BC,EAAaC,mBAAQ,kBAAM,IAAIC,IAAWR,KAAU,CAACA,IACrDS,EAAYF,mBAAQ,kBAAM,IAAIG,KAAOT,EAAaD,KAAU,CAACC,EAAaD,IAEhF,OAAO,cAACH,GAAeN,SAAhB,CAAyB9G,MAAO,CACnCuH,UACAC,cACAC,iBACAC,oBACAC,YACAC,eACAC,aACAG,aARG,SASH/I,EAAMJ,WAIP,SAASqJ,KACZ,OAAOC,qBAAWf,IC5BtB,IAKegB,GALQpB,aAAO,SAAAC,GAAG,MAAK,CAClCoB,QAASC,aAAaD,QAAUE,KAAKC,MAAMF,aAAaD,SAAW,GACnEI,WAAY,SAAAJ,GAAO,OAAIpB,EAAI,CAACoB,iBCcjB,SAASK,GAAT,GAAqH,EAA1FC,QAA2F,IAAlFC,EAAiF,EAAjFA,WACzCC,EAAMC,IAAQC,WAD4G,EJczHZ,qBAAWpC,GIXdzC,EAH4H,EAG5HA,OACA6C,EAJ4H,EAI5HA,UACA5C,EAL4H,EAK5HA,SACA6C,EAN4H,EAM5HA,YACAC,EAP4H,EAO5HA,UACAC,EAR4H,EAQ5HA,aACAE,EAT4H,EAS5HA,UACAC,EAV4H,EAU5HA,aACAC,EAX4H,EAW5HA,QACAC,EAZ4H,EAY5HA,WACAC,EAb4H,EAa5HA,QACAC,EAd4H,EAc5HA,WAd4H,EAmB5HqB,KADAL,EAlB4H,EAkB5HA,WAAYJ,EAlBgH,EAkBhHA,eAAgBF,EAlBgG,EAkBhGA,QAlBgG,EAqBlGR,KAAvBG,EArByH,EAqBzHA,QAASC,EArBgH,EAqBhHA,WArBgH,EAsBlGiB,KAAvBC,EAtByH,EAsBzHA,QAASI,EAtBgH,EAsBhHA,WAEhB,SAASO,EAASC,GAAU,IAEpBrG,EADG/C,EAAeoJ,EAAfpJ,KAAMG,EAASiJ,EAATjJ,MAETkJ,EAAM,GACV,OAAQrJ,GACJ,IAAK,QAGDqJ,GADAtG,EAAQ,IAAIxB,KAAKpB,EAAQ,IAAMwG,IACjB,IAAIpF,KAAS,uCAAyC,GACpE,MACJ,IAAK,aAED8H,GADAtG,EAAQ,IAAIxB,KAAKiF,EAAY,IAAMrG,IACrB,IAAIoB,KAAS,uCAAyC,GACpE,MACJ,IAAK,MACD8H,EAAM,IAAI9H,KAAKpB,GAAS,IAAIoB,KAAKiF,GAAa,yCAA2C,GACzF,MACJ,IAAK,WACDzD,EAAQ,IAAIxB,KAAKiF,EAAY,IAAMG,GAEnC0C,EADY,IAAI9H,KAAKsF,EAAU,IAAM1G,GACzB4C,EAAQ,yCAA2C,GAIvEqG,EAAQE,kBAAkBD,GAhDkG,SAmDjHE,IAnDiH,2EAmDhI,wCAAAC,EAAA,sDACUC,EAAOC,SAASC,eAAe,QADzC,cAEuBF,EAAKG,UAF5B,IAEI,2BACIT,EAD8B,SAFtC,iCAMSM,EAAKI,gBANd,uBAOQJ,EAAKK,iBAPb,mBAQe,GARf,cAWU/G,EAAQgC,YAAY,IAAIxD,KAAKiF,EAAY,IAAMG,KACjD3D,EAAM+B,YAAY,IAAIxD,KAAKsF,EAAU,IAAME,OAGnChE,IACRC,EAAMD,EAAQ,GAGlBgG,GAAW,GACLxF,EAAO,IAAIwG,IAAWnC,EAAeoC,UAAUC,WAAYvG,EAAUD,EAAQV,EAAOC,GApB9F,UAqB0BkH,YAAc3G,EAAMyE,EAAYJ,EAAgBF,EAASsB,GArBnF,QAqBUmB,EArBV,OAsBIpB,GAAW,GACPoB,IACAC,YAAcpB,EAAIgB,UAAUC,YAE5B3C,EAAWD,EAAU5D,GACrBmF,EAAW,2BAAIJ,GAAL,kBAAeQ,EAAIgB,UAAUC,WAAa1G,MA3B5D,6CAnDgI,sBAkFhI,OACI,uBAAM8G,SAAUd,EAActJ,GAAG,OAAjC,UACI,sBAAKhB,UAAU,6CAAf,UACI,cAAC6C,EAAD,CAAQ1B,SAAUkG,EAAWnG,MAAOsD,EAAQjC,IAAK6F,IACjD,cAAC1G,EAAD,IACA,cAACb,EAAD,CAAWM,SAAUmG,EAAapG,MAAOuD,IACzC,cAACvC,EAAD,CACI3B,MAAM,QACN4B,KAAMoF,EACN7E,WAAY,SAACtB,GAAD,OAAOoG,EAAapG,EAAEC,OAAOH,QACzCyB,KAAM+E,EACN9E,WAAY,SAACxB,GAAD,OAAOuG,EAAavG,EAAEC,OAAOH,UAE7C,cAACgB,EAAD,CACI3B,MAAM,MACN4B,KAAMyF,EACNlF,WAAY,SAACtB,GAAD,OAAOyG,EAAWzG,EAAEC,OAAOH,QACvCyB,KAAMmF,EACNlF,WAAY,SAACxB,GAAD,OAAO2G,EAAW3G,EAAEC,OAAOH,aAG/C,cAACpB,EAAD,CACIE,UAAU,0BACVW,QAAS2J,EACT5J,KAAK,SAHT,wBC/GG,SAAS2K,GAAT,GAI0G,IAHrFC,EAGoF,EAHpFA,OACAzB,EAEoF,EAFpFA,QACAC,EACoF,EADpFA,WACoF,EAEhE7E,wBAASkC,GAFuD,mBAE7GoE,EAF6G,KAEzFC,EAFyF,OAGtFvD,KAAvBG,EAH6G,EAG7GA,QAASC,EAHoG,EAGpGA,WAHoG,EAI/Ee,KAA9BL,EAJ6G,EAI7GA,WAAYJ,EAJiG,EAIjGA,eAJiG,4CAsBpH,4BAAA4B,EAAA,6DACIT,GAAW,GADf,SAE4Bf,EAAW0C,eAAe9C,EAAeoC,UAAW5L,IAAiBuM,KAFjG,OAEUC,EAFV,OAGIH,EAAsBG,GACtB7B,GAAW,GACX8B,IAAMV,QAAQ,sBALlB,4CAtBoH,sBA8BpH,OAxBAzF,qBAAU,WACF8F,GACAxC,EAAW8C,mBAAmBN,EAAoBnM,KAAuB0M,MACrE,SAAAC,GACQA,EAAO7K,MAAM8K,IACbJ,IAAMK,MAAM,oBAEZ5D,EAAWD,EAAUjJ,KACrByM,IAAMV,QAAQ,6CAM/B,CAACK,IAWA,qCACI,sBAAKvL,UAAU,kBAAf,UACI,cAACiG,EAAD,CAAMC,IAAKC,YAAgB,UAAWmF,EAAOP,UAAUC,YACjDzK,MAAM,sBACZ,cAAC6F,EAAD,CAASC,QAASiF,EAAOP,UAAUC,WAAYhL,UAAU,sBAE7D,sBAAKA,UAAU,2BAAf,UACI,wBAAQA,UAAU,QAAlB,qBACA,0CAAQgD,OAAOoF,GAASjE,QAAQ,MAChC,wBAAQzD,KAAK,SAASC,QAAS,kBAAM2K,EAAOY,cACpClM,UAAU,qLADlB,wBAIA,cAACF,EAAD,CAAeY,KAAK,SAASC,QA5C2E,2CA6CzFX,UAAU,sEACV2B,SAAUkI,EAFzB,2BC1DD,SAASsC,KACpB,OAAQ,sBAAKnM,UAAU,uCAAf,UACJ,kEACA,uBACA,uDCSO,SAASoM,KAAoB,IAAD,EAMnChD,KAHAX,EAHmC,EAGnCA,QACAE,EAJmC,EAInCA,eACAI,EALmC,EAKnCA,WALmC,EAQTd,KAAvBG,EARgC,EAQhCA,QAASC,EARuB,EAQvBA,WARuB,EASTiB,IAAe,SAAAzH,GAAK,MAAI,CAACA,EAAM0H,QAAS1H,EAAM8H,eATrC,mBAShCJ,EATgC,KASvBI,EATuB,iDA2DvC,WAA8B3I,GAA9B,uBAAAuJ,EAAA,+DACiChB,EAAQvI,GAA9B8C,EADX,EACWA,MAAOC,EADlB,EACkBA,IAAKS,EADvB,EACuBA,OADvB,SAE0B6H,YAAgBrL,EAAIuI,EAAQvI,GAAK+H,EAAYJ,EAAgBF,GAFvF,gBAIclE,EAAYW,EAAYpB,EAAOC,EAAKS,GAC1C6D,EAAWD,EAAU7D,GACrBoF,EAAW,2BAAIJ,GAAL,kBAAevI,EAAf,YAAC,eAAuBuI,EAAQvI,IAAhC,IAAqCuD,kBANvD,4CA3DuC,kEAqEvC,WAA4BvD,GAA5B,yBAAAuJ,EAAA,+DACiChB,EAAQvI,GAA9B8C,EADX,EACWA,MAAOC,EADlB,EACkBA,IAAKS,EADvB,EACuBA,OACbqB,EAAM,IAAIvD,KACViC,EAAYW,EAAYpB,EAAOC,EAAKS,GAH9C,SAI0B8H,YAActL,EAAIuI,EAAQvI,GAAK+H,EAAYJ,EAAgBF,GAJrF,gBAMQJ,EAAWD,EAAU5D,EAASD,GAC9BoF,EAAW,2BACJJ,GADG,kBAELvI,EAFK,YAAC,eAEGuI,EAAQvI,IAFZ,IAEiBuD,YAAWgI,YAAazG,YAAYD,GAAMlB,OAAQ/E,UATrF,4CArEuC,kEAmFvC,WAA4BoB,EAAYwL,GAAxC,eAAAjC,EAAA,+DACSiC,GADT,qCAC6BC,cAD7B,0DAEcC,EAFd,eAE+BnD,IACLvI,GAClB2I,EAAW+C,GAJnB,4CAnFuC,sBA2FvC,OA/EAjH,qBAAU,WACN,IAAMiH,EAAU,eAAOnD,GACjBoD,EAAWC,OAAOC,SAASC,KAAKC,UAAU,GAEhD,GAAIJ,EACA,IACI,IAAIK,IAAUL,GACdD,EAAWC,QAAYxF,EACzB,MAAO/F,GACLwK,IAAMK,MAAM,8DATR,eAaDjL,GACP,GAAI0L,EAAWO,eAAejM,GAAK,CAE/B,IAAIkM,OAAK/F,EACT,IACI+F,EAAK,IAAIF,IAAUhM,GACrB,MAAOI,GACLwK,IAAMK,MAAM7K,EAAE+L,QAAUnM,GAIxBkM,GACAnE,EAAWqE,eAAe,IAAIJ,IAAUhM,IAAK8K,MAAK,SAAAC,GAC9C,IAAMsB,EAAI,eAAO9D,IACjB,OAAIwC,QAAJ,IAAIA,OAAJ,EAAIA,EAAQzH,MACR+I,EAAKrM,GAAMsM,YAAsBvB,EAAOzH,OAEpCtD,IAAO2L,GACPf,IAAMK,MAAM,qEAEToB,EAAKrM,IAEhB2I,EAAW0D,QAtB3B,IAAK,IAAMrM,KAAM0L,EAAa,EAAnB1L,KA4BZ,IAEHyE,qBAAU,WACN+D,aAAaD,QAAUE,KAAK8D,UAAUhE,KACvC,CAACA,IAkCG,gCACH,wBAAQvJ,UAAU,wCAAlB,wBACCwN,OAAOC,KAAKlE,GAASmE,OAAS,EAC3BF,OAAOG,QAAQpE,GACVqE,MAAK,kBAAIC,EAAJ,+CAAsC/J,MAAQ+J,EAAQ/J,SAC3DgK,KAAI,mCAAE9M,EAAF,KAAMsD,EAAN,YACD,cAACD,EAAD,CAAiBS,eAAgB,SAACH,GAAD,OAAYgF,EAAW,2BACjDJ,GADgD,kBAElDvI,EAFkD,YAAC,eAE1CuI,EAAQvI,IAFiC,IAE5B2D,eAEnBK,WAAY,kBArGG,2CAqGG+I,CAAe/M,IAAK+D,SAAU,kBArGjC,2CAqGuCiJ,CAAahN,IACnEA,GAAIA,EAAIsD,KAAMA,EAAMM,UAAW+D,EAAeoC,UAAUC,WACxDnG,aAAc,kBAvGC,6CAuGKA,CAAa7D,KAN5BA,MAQrB,cAACmL,GAAD,OCjHG,SAAS8B,KAAQ,IAAD,EACGhJ,oBAAS,GADZ,mBACpB4E,EADoB,KACXC,EADW,KAEpBnB,EAAkBS,KAAlBT,eAEP,OACI,sBAAK3I,UAAU,uEAAf,UACI,sBAAKA,UAAU,OAAf,UACI,cAACkD,EAAD,CAASC,QAAS0G,IAClB,cAACwB,GAAD,CAASC,OAAQ3C,EAAgBkB,QAASA,EAASC,WAAYA,IAC/D,uBACA,cAACF,GAAD,CAAkBC,QAASA,EAASC,WAAYA,OAEpD,cAACsC,GAAD,O,WCjBG,OAA0B,iCCgE1B8B,OApDf,WAAgB,IAAD,EAQP9E,KANAT,EAFO,EAEPA,eACAC,EAHO,EAGPA,kBACAM,EAJO,EAIPA,UACAL,EALO,EAKPA,UACAC,EANO,EAMPA,aACAC,EAPO,EAOPA,WAGGV,EAAcJ,KAAdI,WA2BP,OAzBA5C,qBAAU,WACN,GAAIkD,EAaA,OAZAA,EAAewF,GAAG,WAAW,WACzBrF,GAAa,GACbC,EAAWqF,WAAWzF,EAAeoC,WAChCe,MAAK,SAAAC,GAAM,OAAI1D,EAAW0D,EAASL,QACxCE,IAAMV,QAAQ,2BAElBvC,EAAewF,GAAG,cAAc,WAC5BrF,GAAa,GAEb8C,IAAMyC,KAAK,+BAGR,WACH1F,EAAeuD,gBAGxB,CAACnD,EAAYJ,EAAgBN,EAAYS,IAE5CrD,qBAAU,WACNmD,EAAkBM,KAEnB,IAGC,gCACI,cAAC,EAAD,IACA,sBAAKlJ,UAAW,oCAAhB,UACI,cAAC2G,EAAD,CAAMrG,IAAKgO,KACVzF,EACG,cAACoF,GAAD,IACA,cAAC/N,EAAD,CAAcU,OAAQ,kBAAM+H,EAAe4F,gBAEnD,cAAC,IAAD,CAAgBC,iBAAe,EAACC,SAAS,cAAcC,MAAO,IAC9D,cAACnI,EAAD,QC/CGoI,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC9G,GAAD,UACI,cAACnB,EAAD,UACI,cAAC,GAAD,UAIZqD,SAASC,eAAe,SAM5BiE,M,gUCdeW,EALMC,aAAY,SAAApH,GAAG,MAAK,CACrCM,QAASD,YAAc,UACvBgH,WAAY,SAAA/G,GAAO,OAAIN,EAAI,CAACM,iBCSnBsC,EAAY,WAAkD,IAAjD0E,EAAgD,uDAArC,YACjC,OAAOC,IAAaC,KAAK,GAAIF,IAGpBG,EAAS,WAA+C,IAA9CH,EAA6C,uDAAlC,SAC9B,OAAOC,IAAaC,KAAK,EAAGF,IAG1BI,EAAaH,IAAaI,OAAO,CACnCF,EAAO,aACPA,EAAO,WACPA,EAAO,UACPA,EAAO,aACP7E,EAAU,UACVA,EAAU,eAGP,SAASuC,EAAsByC,GAClC,IAAMC,EAAcH,EAAWI,OAAOF,GAEhCjM,EAAQd,OAAOkN,IAAIC,WAAWH,EAAYI,YAC1CrM,EAAMf,OAAOkN,IAAIC,WAAWH,EAAYK,UACxC7L,EAASxB,OAAOkN,IAAIC,WAAWH,EAAYxL,SAAWkH,IACtDnH,EAAYvB,OAAOkN,IAAIC,WAAWH,EAAYzL,YAAcmH,IAMlE,OAAO,IAAIZ,EALK,IAAIkC,IAAUgD,EAAYtL,QAASsG,WAChC,IAAIgC,IAAUgD,EAAYM,WAAYtF,WAIhBxG,EAAQV,EAAOC,EAAKQ,EAS1D,SAAyBT,EAAeC,EAAa8B,GACxD,OAAIA,EAAM/B,EACCrE,IACAoG,EAAM9B,EACNrE,IAEAC,IAjBI4Q,CAAgBvN,OAAOc,GAAQd,OAAOe,GAAM+B,YAAY,IAAIxD,QAKxE,SAAS6D,EAAgBzF,EAAcM,GAC1C,IAAMyH,EAAU+H,EAAgBC,WAAWhI,QACrCiI,EAkEV,SAAwBxK,GACpB,IAAMyK,EAAWzK,EAAI0K,MAAM,oCAC3B,OAAOD,EAAWA,EAAS,GAAK,KApEhBE,CAAepI,IAAf,2BAA+CA,GAC/D,MAAM,+BAAN,OAAsC/H,EAAtC,YAA8CM,EAA9C,oBAA4D0P,GAazD,SAAS5F,EAAWpG,EAAgBD,EAAkBD,EAAgBV,EAAeC,EAAaQ,EAAoBI,EAAiB4H,GAC1IxK,KAAK2C,OAASA,EACd3C,KAAK0C,SAAWA,EAChB1C,KAAKyC,OAASA,EACdzC,KAAK+B,MAAQA,EACb/B,KAAKgC,IAAMA,EACXhC,KAAKwC,UAAYA,GAAa,EAC9BxC,KAAK4C,OAAS4H,EAAc3M,IAA0B+E,GAAUlF,IAChEsC,KAAKwK,YAAcA,EAGhB,SAASE,IACZ,OAAOqE,IAAK,CAACC,KAAM,gBAAiBC,KAAM,UAAWC,SAAS,IAG3D,SAASlK,EAAgB7F,GAC5B,IAAMgQ,EAAKzG,SAAS0G,cAAc,YAClCD,EAAGhQ,MAAQA,EACXgQ,EAAGE,aAAa,WAAY,IAC5BF,EAAG9M,MAAMqK,SAAW,WACpByC,EAAG9M,MAAMiN,KAAO,UAChB5G,SAAS6G,KAAKC,YAAYL,GAC1BA,EAAGM,SACH/G,SAASgH,YAAY,QACrBhH,SAAS6G,KAAKI,YAAYR,GAGvB,SAAS/F,EAAcnK,GAC1B,IAAMkF,EAAM0G,OAAOC,SAAS8E,OAAS,IAAM3Q,EAC3C8P,IAAK,CACDc,OAAQ,kBACRZ,KAAM,UACNzQ,MAAO,kBAEPsR,QACI,CACI1H,QAAS,IACT2H,WAAY,CACR9R,UAAW,yCACXyG,KAAMP,EACN7E,OAAQ,SACR0Q,UAAW7L,MAGxB4F,MAAK,SAACkG,GACDA,IACAjL,EAAgBb,GAChB4K,IAAK,4BAA6B,4BAA6B,iB,2HC3G5D,SAASmB,EAAW9R,GAA8D,IACtF+F,EAA4B/F,EAA5B+F,IAAKgM,EAAuB/R,EAAvB+R,QAASC,EAAchS,EAAdgS,WACrB,OAAO,iCAAOA,EAAW,uBACrB,oBAAGnS,UAAU,YACVyG,KAAMP,EAAKQ,IAAI,sBACfrF,OAAO,SAFV,UAEoB6Q,EAAQ,cAAC,IAAD,CAAkBlS,UAAU,8B,0BCAjD,SAAeoS,EAA9B,4C,4CAAe,WAA+B1R,EAAc2R,EAA0BtJ,EAAwBuC,EAAgB7C,EAAkBsB,GAAjI,qBAAAQ,EAAA,+EAE8BxB,EAAWuJ,qBAFzC,cAEPD,EAAYE,gBAFL,OAE+DC,UACtE5G,IAAMyC,KAAK,6CAA8C,CAACoE,UAAW,OACrEJ,EAAYK,SAAWpH,EAAOP,UAE1BrK,IAASrB,KACTgT,EAAYM,YAAY5I,GAPrB,SAUcuB,EAAOsH,gBAAgBP,GAVrC,cAUDQ,EAVC,iBAWiB9J,EAAW+J,mBAAmBD,EAAOE,aAXtD,eAWDpH,EAXC,OAYPC,IAAMoH,UACNpH,IAAMyC,KAAK,kDAAmD,CAACoE,UAAU,OAGnEQ,EAAW7T,IAhBV,UAiBD2J,EAAW8C,mBAAmBF,EAAWsH,GAjBxC,eAkBDC,EAAiB/M,YAAgB,KAAMwF,GAC7CC,IAAMoH,UACNpH,IAAMV,QAAQ,cAAC+G,EAAD,CACV/L,IAAKgN,EACLhB,QAAQ,mBACRC,WAAY,sBAAec,EAAf,MAA8BA,IAAa7T,IAAwB,0CAA4C,MAC3H,CAACqT,UAAW,IAAOU,cAAc,IAxB9B,mBAyBA,GAzBA,yCA2BPC,QAAQC,KAAR,MAEAzH,IAAMK,MAAM,UAAY,KAAEkB,SA7BnB,mBA8BA,GA9BA,2D,uLCQA,SAAelC,EAA9B,0C,4CAAe,WAA6B3G,EAAkByE,EAAwBuC,EAAgB7C,EAAkBsB,GAAzG,iBAAAQ,EAAA,6DACL+I,EAAcC,EAA2BjP,EAAMyF,EAAIgB,WACnDyI,GAAK,IAAIC,KAAcjR,IAAI8Q,GAFtB,SAGElB,YAAgB/S,IAA2BmU,EAAIzK,EAAYuC,EAAQ7C,EAASsB,GAH9E,oF,sBAMf,SAASwJ,EAA2BjP,EAAkBoP,GAA4C,IACvFhP,EAAoBJ,EAApBI,OAAQD,EAAYH,EAAZG,SAEf,OAAO,IAAIkP,IAAuB,CAC9BlG,KAAM,CAAC,CACHmG,OAAQ,IAAI5G,IAAUtI,GACtBmP,UAAU,EACVC,YAAY,GACb,CACCF,OAAQ,IAAI5G,IAAUvI,GACtBoP,UAAU,EACVC,YAAY,GACb,CACCF,OAAQF,EACRG,UAAU,EACVC,YAAY,GACb,CACCF,OAAQG,IAAcC,UACtBH,UAAU,EACVC,YAAY,IAEhBE,UAAW,IAAIhH,IAAUhO,KACzBsF,KAAM2P,EAAsB3P,KAKpC,SAAS2P,EAAsB3P,GAAmB,IACvCE,EAAsBF,EAAtBE,OAAQV,EAAcQ,EAAdR,MAAOC,EAAOO,EAAPP,IAEhBmQ,EAASxE,IAAaI,OAAO,CAC/BJ,IAAayE,GAAG,eAChBzE,IAAa0E,IAAI,SACjB1E,IAAa0E,IAAI,OAGjB1E,IAAa2E,KAAK,YAGhBC,EAAUC,EAAOC,MAAMN,EAAOO,MAepC,OAdAP,EAAOQ,OAAO,CACNpB,YAAajU,IACbyE,MAAOA,EACPC,IAAKA,EAELS,OAAQmQ,KAAKC,MAAMpQ,EAASkH,MAEhC4I,GAOGA,K,uLCpEI,SAAejI,EAA9B,0C,4CAAe,WAA+BwI,EAAoBvQ,EAAkByE,EAAwBuC,EAAgB7C,GAA7G,mBAAA8B,EAAA,6DACJ9F,EAAYH,EAAZG,SACD6O,EAAcwB,EAA6BD,EAAYpQ,GACvD+O,GAAK,IAAIC,KAAcjR,IAAI8Q,GAHtB,SAIElB,YAAgB9S,IAA6BkU,EAAIzK,EAAYuC,EAAQ7C,GAJvE,oF,sBAOf,SAASqM,EAA6BD,EAAYpQ,GAE9C,OAAO,IAAIkP,IAAuB,CAC9BlG,KAAM,CAAC,CACHmG,OAAQ,IAAI5G,IAAUvI,GACtBoP,UAAU,EACVC,YAAY,GACb,CACCF,OAAQ,IAAI5G,IAAU6H,GACtBhB,UAAU,EACVC,YAAY,GACb,CAECF,OAAQ,IAAI5G,IAAU/N,KACtB4U,UAAU,EACVC,YAAY,GACb,CACCF,OAAQG,IAAcC,UACtBH,UAAU,EACVC,YAAY,IAEhBE,UAAW,IAAIhH,IAAUhO,KACzBsF,KAAM2P,MAKd,SAASA,IACL,IAAMC,EAASxE,IAAaI,OAAO,CAC/BJ,IAAayE,GAAG,eAChBzE,IAAa2E,KAAK,YAGhB/P,EAAOiQ,EAAOC,MAAMN,EAAOO,MAQjC,OANAP,EAAOQ,OAAO,CACNpB,YAAahU,IACbkF,OAAQ,GAEZF,GAEGA,K,uLChDI,SAAegI,EAA9B,0C,4CAAe,WAA6BuI,EAAoBvQ,EAAkByE,EAAwBuC,EAAgB7C,GAA3G,qBAAA8B,EAAA,6DACJ7F,EAAoBJ,EAApBI,OAAQD,EAAYH,EAAZG,SACT6O,EAAcyB,EAA2BF,EAAYnQ,EAAQD,GAC7D+O,GAAK,IAAIC,KAAcjR,IAAI8Q,GAHtB,SAIElB,YAAgB7S,IAA2BiU,EAAIzK,EAAYuC,EAAQ7C,GAJrE,oF,sBAOf,SAASsM,EAA2BF,EAAYnQ,EAAQD,GACpD,OAAO,IAAIkP,IAAuB,CAC9BlG,KAAM,CAAC,CACHmG,OAAQ,IAAI5G,IAAUtI,GACtBmP,UAAU,EACVC,YAAY,GACb,CACCF,OAAQ,IAAI5G,IAAUvI,GACtBoP,UAAU,EACVC,YAAY,GACb,CACCF,OAAQ,IAAI5G,IAAU6H,GACtBhB,UAAU,EACVC,YAAY,GACb,CACCF,OAAQG,IAAcC,UACtBH,UAAU,EACVC,YAAY,IAEhBE,UAAW,IAAIhH,IAAUhO,KACzBsF,KAAM2P,MAKd,SAASA,IACL,IAAMC,EAASxE,IAAaI,OAAO,CAACJ,IAAayE,GAAG,iBAC9C7P,EAAOiQ,EAAOC,MAAMN,EAAOO,MAIjC,OAFAP,EAAOQ,OAAO,CAACpB,YAAa/T,KAA4B+E,GAEjDA,K","file":"static/js/main.28b3bfe7.chunk.js","sourcesContent":["export const PROGRAM_ID = \"2DvvSEde36Ch3B52g9hKWDYbfmJimLpJwVBV9Cknypi4\";\nexport const STREAMFLOW_ACCOUNT_ID = \"DrFtxPb9F6SxpHHHFiEtSNXE3SZCUNLXMaHS6r8pkoz2\";","export * from './ids';\n\nexport const SOLLET_URL = 'https://www.sollet.io';\nexport const AIRDROP_AMOUNT = 10; //10 is the cap on the devnet\n\nexport const TX_FINALITY_CONFIRMED = \"confirmed\";\nexport const TX_FINALITY_FINALIZED = \"finalized\";\n\nexport const INSTRUCTION_CREATE_STREAM = 0;\nexport const INSTRUCTION_WITHDRAW_STREAM = 1;\nexport const INSTRUCTION_CANCEL_STREAM = 2;\n\nexport const EXPLORER_TYPE_TX = \"tx\";\nexport const EXPLORER_TYPE_ADDR = \"address\";\n\nexport const ACC_DATA_OFFSET_WITHDRAWN = 25;\n\nexport const STREAM_STATUS_SCHEDULED = \"scheduled\";\nexport const STREAM_STATUS_STREAMING = \"streaming\";\nexport const STREAM_STATUS_COMPLETE = \"complete\";\nexport const STREAM_STATUS_CANCELED = \"canceled\";\n\nexport const STREAM_STATUS_COLOR = {\n    [STREAM_STATUS_SCHEDULED]: 'gray', // now < start\n    [STREAM_STATUS_STREAMING]: 'green', // start <= now < end\n    [STREAM_STATUS_COMPLETE]: 'blue', //now >= end;\n    [STREAM_STATUS_CANCELED]: 'red',\n}\n","export default function ButtonPrimary({children, className, ...rest}) {\n    const baseClasses = \"block mx-auto px-8 py-4 bg-gradient-to-br from-primary via-primary to-secondary border-transparent font-medium rounded shadow-sm text-white hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary \"\n    return (\n        <button className={baseClasses + className} {...rest}>\n            {children}\n        </button>\n    )\n}\n","import ButtonPrimary from \"../Components/ButtonPrimary\";\n\nexport default function NotConnected(props: { action: () => * }) {\n    return <div className=\"max-w-md mx-auto\">\n        <iframe width=\"100%\" height={270} src=\"https://www.youtube-nocookie.com/embed/7HWzcxu-De0\"\n                title=\"StreamFlow Finance Demo\" frameBorder=\"0\"\n                allowFullScreen>&nbsp;</iframe>\n        <ButtonPrimary className=\"font-bold text-2xl my-5\"\n                       type=\"button\"\n                       onClick={props.action}>\n            Connect\n        </ButtonPrimary>\n    </div>;\n}\n","export default function Recipient(props: { onChange: void, value: string }) {\n    return (\n        <div className=\"col-span-full\">\n            <label htmlFor=\"account\" className=\"block font-medium text-gray-100\">\n                Recipient Account\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"account\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    pattern=\"[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}\"\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    placeholder=\"Please double check the address\"\n                    aria-describedby=\"account-description\"\n                    required\n                />\n            </div>\n        </div>\n    )\n}","export default function SelectToken() {\n    return (\n        <div className=\"col-span-2 sm:col-span-1\">\n            <label htmlFor=\"token\" className=\"block font-medium text-gray-100\">\n                Token\n            </label>\n            <select\n                id=\"token\"\n                name=\"token\"\n                className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"                defaultValue=\"SOL\"\n            >\n                <option>SOL</option>\n                <option disabled>ETH - Coming soon️™</option>\n                <option disabled>BTC - Coming soon™</option>\n                <option disabled>USDC - Coming soon™</option>\n                <option disabled>Other tokens...</option>\n            </select>\n        </div>\n    )\n}\n","import {XIcon} from '@heroicons/react/outline'\nimport {Component} from \"react\";\n\n//could be functional component, but we decided to let it manage its own state (open/close)\nexport default class Banner extends Component {\n    state = {\n        hidden: false\n    }\n\n    render() {\n        return (\n            <div className={`relative bg-primary ${this.state.hidden && \"hidden\"}`}>\n                <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n                    <div className=\"pr-16 sm:text-center sm:px-16\">\n                        <p className=\"font-small text-white\">\n                            <b>Devnet version. Test freely! </b>\n                            <span className=\"hidden lg:inline\">Mainnet version soon.</span>\n                        </p>\n                    </div>\n                    <div\n                        className=\"absolute inset-y-0 right-0 pt-1 pr-1 flex items-start sm:pt-1 sm:pr-2 sm:items-start\">\n                        <button type=\"button\" onClick={() => this.setState({hidden: true})}\n                                className=\"flex p-2 rounded-md hover:bg-primary focus:outline-none focus:ring-2 focus:ring-white\"\n                        >\n                            <span className=\"sr-only\">Dismiss</span>\n                            <XIcon className=\"h-6 w-6 text-white\"/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import {add, format} from \"date-fns\";\n\nexport default function DateTime(props: { title: string, date: string, updateDate: void, time: string, updateTime: void }) {\n    return (\n        <>\n            <div className=\"col-span-3 sm:col-span-1\">\n                <label htmlFor={props.title}\n                       className=\"block font-medium text-gray-100 capitalize\">{props.title} Date</label>\n                <div className=\"mt-1\">\n                    <input type=\"date\" name={props.title} id={props.title}\n                           value={props.date}\n                           min={format(new Date(), \"yyyy-MM-dd\")}\n                           max={format(add(new Date(), {years: 1}), \"yyyy-MM-dd\")}\n                           onChange={props.updateDate}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={props.title + `-description`} required/>\n                </div>\n            </div>\n            <div className=\"col-span-2 sm:col-span-1\">\n                <label htmlFor={props.title + `_time`}\n                       className=\"block font-medium text-gray-100 capitalize\">{props.title} time</label>\n                <div className=\"mt-1\">\n                    <input type=\"time\" name={props.title + `_time`} id={props.title + `_time`}\n                           value={props.time}\n                           onChange={props.updateTime}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={props.title + `_time-description`} required/>\n                </div>\n            </div>\n        </>\n    )\n}","export default function Amount(props: { onChange: void, max: number, value: number }) {\n    return (\n        <div className=\"col-span-3 sm:col-span-1\">\n            <label htmlFor=\"amount\" className=\"block font-medium text-gray-100\">\n                Amount\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    step=\"any\"\n                    autoFocus={true}\n                    type=\"number\"\n                    name=\"amount\"\n                    id=\"amount\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    min={0}\n                    max={props.max || Number.MAX_SAFE_INTEGER}\n                    placeholder=\"0.00\"\n                    aria-describedby=\"amount-description\"\n                    required={true}\n                />\n            </div>\n        </div>\n    )\n}\n","export default function Curtain(props: { visible: boolean }) {\n    return (\n        <div className={`fixed top-0 bottom-0 left-0 right-0 bg-gray-900 opacity-90 z-10 ${props.visible ? \"block\" : \"hidden\"}`}>\n            <div className=\"loader\"> </div>\n        </div>\n    )\n}","export default function Badge(props: { type: string, color: string }) {\n    const {type, color } = props;\n    return <div className=\"inline\">\n        <span\n            className={`align-top px-2.5 py-0.5 rounded-full text-xs font-medium bg-${color}-100 text-${color}-800 capitalize`}>\n            <svg className={`mr-1 -ml-1 inline align-baseline h-2 w-2 text-${color}-400`} fill=\"currentColor\" viewBox=\"0 0 8 8\">\n              <circle cx={4} cy={4} r={3}/>\n            </svg>\n            {type}\n      </span></div>\n}","export default function ActionButton(props: { title: string, action: void, color: string }) {\n    const {title, action, color} = props;\n\n    return (\n        <button onClick={action}\n                className={`rounded-md text-sm bg-${color}-500 hover:bg-${color}-700 active:bg-${color} text-white py-1 px-2`}>\n            {title}\n        </button>\n    )\n}","import {memo} from 'react'\nimport {format, fromUnixTime} from \"date-fns\";\n\nfunction Duration(props: { start: number, end: number }) {\n    return (\n        <dt className=\"col-span-full text-center\">\n            {(format(fromUnixTime(props.start), \"yyyy-MM-dd HH:mm\"))} &ndash; {(format(fromUnixTime(props.end), \"yyyy-MM-dd HH:mm\"))}\n        </dt>\n    )\n}\n\nexport default memo(Duration);","export default function Progress(props: { title: string, value: number, max: number, rtl?: boolean }) {\n    let {title, value, max, rtl} = props;\n    value = Number(value).toFixed(2);\n    max = Number(max).toFixed(2);\n    return (\n        <>\n            <dt>{title}</dt>\n            <div className=\"rounded-sm h-3 bg-gray-900 w-full my-auto\">\n                <div\n                    className={\"bg-gradient-to-r from-primary to-secondary rounded-sm h-full \" + (rtl ? \"float-right\" : \"\")}\n                    style={{width: value / max * 100 + \"%\"}}>\n                </div>\n            </div>\n            <label className=\"ml-2 text-right truncate\">◎{value}<small className=\"text-gray-400\">/{max}</small></label>\n        </>\n    )\n}","import Badge from \"./Stream/Badge\";\nimport ActionButton from \"./Stream/ActionButton\";\nimport {getUnixTime} from \"date-fns\";\nimport Duration from \"./Stream/Duration\";\nimport Progress from \"./Stream/Progress\";\nimport {useEffect, useState} from \"react\";\nimport {StreamData, getExplorerLink} from \"../utils/helpers\";\nimport {XIcon} from \"@heroicons/react/outline\";\nimport {\n    EXPLORER_TYPE_ADDR,\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COLOR,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants\";\nimport {Address, Link} from \"./index\";\n\nexport default function Stream(props: { data: StreamData, myAddress: string, id: string, removeStream: void, onStatusUpdate: void, onCancel: void, onWithdraw: void }) {\n    const {start, end, withdrawn, amount, receiver, sender, status} = props.data;\n    const {myAddress, removeStream, onStatusUpdate, onCancel, onWithdraw, id} = props;\n\n    const color = STREAM_STATUS_COLOR[status];\n\n    const [streamed, setStreamed] = useState(getStreamed(start, end, amount))\n    const [available, setAvailable] = useState(streamed - withdrawn);\n\n    const showWithdraw = ((status === STREAM_STATUS_STREAMING || (status === STREAM_STATUS_COMPLETE && withdrawn < amount)) && myAddress === receiver);\n    const showCancel = (status === STREAM_STATUS_STREAMING || status === STREAM_STATUS_SCHEDULED) && myAddress === sender\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setStreamed(getStreamed(start, end, amount));\n            setAvailable(streamed - withdrawn);\n            const tmpStatus = updateStatus(status, start, end);\n            if (tmpStatus !== status) {\n                onStatusUpdate(tmpStatus)\n            }\n        }, 1000)\n        return () => clearInterval(interval);\n    });\n\n    return (\n        <dl className={`text-white my-4 grid gap-y-4 gap-x-2 grid-cols-3 p-4 bg-${color}-300 bg-opacity-10 hover:bg-opacity-20 shadow rounded-lg`}>\n            <div className=\"col-span-full\">\n                <Badge className=\"inline\" type={status} color={color}/>\n                <button onClick={removeStream}\n                        className={`p-1.5 h-6 w-6 float-right align-top rounded-sm hover:bg-${color}-100 focus:outline-none focus:ring-1`}>\n                    <XIcon className=\"float-right w-3 h-3\"/>\n                </button>\n            </div>\n            <Duration start={start} end={end}/>\n            <Link url={getExplorerLink(EXPLORER_TYPE_ADDR, id)} title={\"ID\"}/>\n            <Address address={id} className=\"col-span-2 text-sm text-gray-400\"/>\n            <Link url={getExplorerLink(EXPLORER_TYPE_ADDR, receiver)} title={\"Recipient\"}/>\n            <Address address={receiver} className=\"col-span-2 text-sm text-gray-400\"/>\n            <Progress title=\"Withdrawn\" value={withdrawn} max={amount}/>\n            {status === STREAM_STATUS_CANCELED &&\n            <Progress title=\"Returned\" value={amount - withdrawn} max={amount} rtl={true}/>}\n            {status !== STREAM_STATUS_CANCELED &&\n            <>\n                <Progress title=\"Streamed\" value={streamed} max={amount}/>\n                {showWithdraw &&\n                (<>\n                    <dt>Available<br/>\n                        <sup className=\"text-xs text-gray-300 align-top\">for withdrawal</sup></dt>\n                    <dd className=\"col-span-2\">◎{available.toFixed(2)}</dd>\n                    <ActionButton title=\"Withdraw\" action={onWithdraw}\n                                  color={STREAM_STATUS_COLOR[STREAM_STATUS_STREAMING]}/>\n                </>)}\n                {showCancel && <ActionButton title={\"Cancel\"} action={onCancel}\n                                             color={STREAM_STATUS_COLOR[STREAM_STATUS_CANCELED]}/>}\n            </>}\n        </dl>\n    )\n}\n\nexport function getStreamed(start: number, end: number, amount: number, timestamp?: number) {\n    timestamp = timestamp || getUnixTime(new Date());\n\n    if (timestamp < start) return 0\n    if (timestamp > end) return amount;\n\n    return (timestamp - start) / (end - start) * amount;\n}\n\nfunction updateStatus(status: string, start: number, end: number) {\n    const now = getUnixTime(new Date());\n    if (status === STREAM_STATUS_SCHEDULED && now >= start) {\n        return STREAM_STATUS_STREAMING;\n    } else if (status === STREAM_STATUS_STREAMING && now >= end) {\n        return STREAM_STATUS_COMPLETE;\n    } else {\n        return status;\n    }\n}\n","export default function Footer() {\n    return (<footer className=\"mt-40 text-center text-sm font-mono text-gray-400\">\n        <img src=\"https://solana.com/branding/horizontal/logo-horizontal-gradient-dark.png\"\n             className=\"w-40 mx-auto my-2\" alt=\"Solana logo\"/>\n        <small>\n            <code>BUIDLed by <a href=\"https://streamflow.finance\" className=\"text-gray-300\" rel=\"noopener noreferrer\"\n                                target=\"_blank\">StreamFlow</a><br/>\n                during <a href=\"https://solana.com/solanaszn\" target=\"_blank\" className=\"text-gray-300\"\n                   rel=\"noopener noreferrer\">SOLANASZN</a></code></small>\n    </footer>)\n}","export default function Logo(props: {src: string}){\n    return (\n        <div className=\"mb-8 text-white\">\n            <img src={props.src} alt=\"StreamFlow Finance logo\" className=\"w-24 mx-auto\"/>\n            <h1 className=\"text-6xl text-center\">Stream<strong>Flow</strong></h1>\n        </div>\n    )\n}","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function Link(props: { url: string, title?: string, className?: string }) {\n    const {url, title, className} = props;\n\n    return (\n        <strong className={\"text-gray-300 hover:text-white \" + className}>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {title || url} <sup><ExternalLinkIcon className=\"w-3 h-3 inline\"/></sup>\n            </a>\n        </strong>\n    )\n}","import {copyToClipboard} from \"../utils/helpers\";\nimport {DuplicateIcon, CheckIcon} from \"@heroicons/react/outline\";\nimport {useState} from \"react\";\n\nexport default function Address(props: { address: string, className: string }) {\n    const {address, className} = props;\n    const iconClassName = \"h-4 inline mr-1 cursor-pointer hover:opacity-80 align-text-bottom \";\n    const [copied, setCopied] = useState(false)\n\n    function copy() {\n        copyToClipboard(address);\n        setCopied(true);\n        setTimeout(() => {\n            setCopied(false)\n        }, 1000)\n    }\n\n    return (\n        <span className={\"block truncate \" + className}>\n            {copied\n                ? (<span className=\"text-green-300 mr-1\"><CheckIcon className={iconClassName}/><small>Copied!</small></span>)\n                : <DuplicateIcon className={iconClassName} onClick={copy}/>}\n            {address}</span>\n    )\n}\n\n\n","import {add, format} from \"date-fns\";\nimport {createContext, useContext, useState} from \"react\";\n\nconst FormContext = createContext(undefined)\n\nexport function FormProvider(props) {\n    const now = new Date();\n\n    const [amount, setAmount] = useState(undefined);\n    const [receiver, setReceiver] = useState(undefined);\n    const [startDate, setStartDate] = useState(format(now, \"yyyy-MM-dd\"));\n    const [startTime, setStartTime] = useState(format(add(now, {minutes: 1}), \"HH:mm\"));\n    const [endDate, setEndDate] = useState(startDate);\n    const [endTime, setEndTime] = useState(startTime);\n\n    return <FormContext.Provider value={{\n        amount,\n        setAmount,\n        receiver,\n        setReceiver,\n        startDate,\n        setStartDate,\n        startTime,\n        setStartTime,\n        endDate,\n        setEndDate,\n        endTime,\n        setEndTime\n    }}>{props.children}</FormContext.Provider>\n}\n\nexport function useFormContext() {\n    return useContext(FormContext)\n}","import create from \"zustand\";\n\nconst useBalanceStore = create(set => ({\n    balance: 0,\n    setBalance: balance => set({balance})\n}))\n\nexport default useBalanceStore","import {createContext, useContext, useMemo, useState} from \"react\";\nimport {SOLLET_URL} from \"../constants\";\nimport {clusterApiUrl, Connection} from \"@solana/web3.js\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\n\nconst NetworkContext = createContext(undefined)\n\nexport function NetworkProvider(props) {\n    const [network, ] = useState(clusterApiUrl('devnet'))\n    const [providerUrl,] = useState(SOLLET_URL);\n    const [selectedWallet, setSelectedWallet] = useState(undefined);\n    const [connected, setConnected] = useState(false);\n\n    const connection = useMemo(() => new Connection(network), [network]);\n    const urlWallet = useMemo(() => new Wallet(providerUrl, network), [providerUrl, network]);\n\n    return <NetworkContext.Provider value={{\n        network,\n        providerUrl,\n        selectedWallet,\n        setSelectedWallet,\n        connected,\n        setConnected,\n        connection,\n        urlWallet\n    }}>{props.children}</NetworkContext.Provider>\n\n}\n\nexport function useNetworkContext(){\n    return useContext(NetworkContext)\n}\n","import create from 'zustand'\n\nconst useStreamStore = create(set => ({\n    streams: localStorage.streams ? JSON.parse(localStorage.streams) : {},\n    setStreams: streams => set({streams})\n}))\n\nexport default useStreamStore","import {\n    Amount,\n    ButtonPrimary,\n    DateTime,\n    Recipient,\n    SelectToken,\n} from \"./index\";\nimport {useFormContext} from \"../Contexts/FormContext\";\nimport {getUnixTime} from \"date-fns\";\nimport {streamCreated, StreamData} from \"../utils/helpers\";\nimport {_createStream} from \"../Actions\";\nimport useBalanceStore from \"../Stores/BalanceStore\";\nimport {Keypair} from \"@solana/web3.js\";\nimport {Dispatch} from \"react\";\nimport {SetStateAction} from \"react\";\nimport {useNetworkContext} from \"../Contexts/NetworkContext\";\nimport useStreamStore from \"../Stores/StreamsStore\";\n\nexport default function CreateStreamForm({loading, setLoading} : {loading: boolean, setLoading: Dispatch<SetStateAction<boolean>>}) {\n    const pda = Keypair.generate();\n    const {\n        amount,\n        setAmount,\n        receiver,\n        setReceiver,\n        startDate,\n        setStartDate,\n        startTime,\n        setStartTime,\n        endDate,\n        setEndDate,\n        endTime,\n        setEndTime\n    } = useFormContext()\n\n    const {\n        connection, selectedWallet, network\n    } = useNetworkContext();\n\n    const {balance, setBalance} = useBalanceStore()\n    const {streams, setStreams} = useStreamStore()\n\n    function validate(element) {\n        const {name, value} = element;\n        let start;\n        let msg = \"\";\n        switch (name) {\n            case \"start\":\n                //todo move to time input if time is the problem\n                start = new Date(value + \"T\" + startTime);\n                msg = start < new Date() ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"start_time\":\n                start = new Date(startDate + \"T\" + value);\n                msg = start < new Date() ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"end\":\n                msg = new Date(value) < new Date(startDate) ? \"Umm... end date before the start date?\" : \"\";\n                break;\n            case \"end_time\":\n                start = new Date(startDate + \"T\" + startTime);\n                const end = new Date(endDate + \"T\" + value);\n                msg = end < start ? \"Err... end time before the start time?\" : \"\";\n                break;\n            default:\n        }\n        element.setCustomValidity(msg);\n    }\n\n    async function createStream() {\n        const form = document.getElementById('form');\n        for (const elem of form.elements) {\n            validate(elem);\n        }\n\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return false;\n        }\n\n        const start = getUnixTime(new Date(startDate + \"T\" + startTime));\n        let end = getUnixTime(new Date(endDate + \"T\" + endTime));\n\n        // Make sure that end time is always AFTER start time\n        if (end === start) {\n            end = start + 1;\n        }\n\n        setLoading(true);\n        const data = new StreamData(selectedWallet.publicKey.toBase58(), receiver, amount, start, end);\n        const success = await _createStream(data, connection, selectedWallet, network, pda)\n        setLoading(false);\n        if (success) {\n            streamCreated(pda.publicKey.toBase58())\n            // const newBalance = await connection.getBalance(selectedWallet.publicKey);\n            setBalance(balance - amount)\n            setStreams({...streams, [pda.publicKey.toBase58()]: data})\n        }\n    }\n\n    return (\n        <form onSubmit={createStream} id=\"form\">\n            <div className=\"my-4 grid gap-4 grid-cols-5 sm:grid-cols-2\">\n                <Amount onChange={setAmount} value={amount} max={balance}/>\n                <SelectToken/>\n                <Recipient onChange={setReceiver} value={receiver}/>\n                <DateTime\n                    title=\"start\"\n                    date={startDate}\n                    updateDate={(e) => setStartDate(e.target.value)}\n                    time={startTime}\n                    updateTime={(e) => setStartTime(e.target.value)}\n                />\n                <DateTime\n                    title=\"end\"\n                    date={endDate}\n                    updateDate={(e) => setEndDate(e.target.value)}\n                    time={endTime}\n                    updateTime={(e) => setEndTime(e.target.value)}\n                />\n            </div>\n            <ButtonPrimary\n                className=\"font-bold text-2xl my-5\"\n                onClick={createStream}\n                type=\"button\"\n            >\n                Stream!\n            </ButtonPrimary>\n        </form>\n    );\n}\n","import {Address, ButtonPrimary, Link} from \"./index\";\nimport {getExplorerLink} from \"../utils/helpers\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {AIRDROP_AMOUNT, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {toast} from \"react-toastify\";\nimport {LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {Dispatch, SetStateAction, useEffect, useState} from \"react\";\nimport {useNetworkContext} from \"../Contexts/NetworkContext\";\nimport useBalanceStore from \"../Stores/BalanceStore\";\n\nexport default function Account({\n                                    wallet,\n                                    loading,\n                                    setLoading\n                                }: { wallet: Wallet, loading: boolean, setLoading: Dispatch<SetStateAction<boolean>> }) {\n\n    const [airdropTxSignature, setAirdropTxSignature] = useState(undefined)\n    const {balance, setBalance} = useBalanceStore()\n    const {connection, selectedWallet} = useNetworkContext()\n\n    useEffect(() => {\n        if (airdropTxSignature) {\n            connection.confirmTransaction(airdropTxSignature, TX_FINALITY_CONFIRMED).then(\n                result => {\n                    if (result.value.err) {\n                        toast.error('Airdrop failed!')\n                    } else {\n                        setBalance(balance + AIRDROP_AMOUNT)\n                        toast.success(\"Airdrop confirmed. Balance updated!\")\n                    }\n                }\n            )\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [airdropTxSignature])\n\n    async function requestAirdrop() {\n        setLoading(true);\n        const signature = await connection.requestAirdrop(selectedWallet.publicKey, AIRDROP_AMOUNT * LAMPORTS_PER_SOL);\n        setAirdropTxSignature(signature);\n        setLoading(false);\n        toast.success(\"Airdrop requested!\")\n    }\n\n    return (\n        <>\n            <div className=\"mb-4 text-white\">\n                <Link url={getExplorerLink('address', wallet.publicKey.toBase58())}\n                      title=\"My Wallet Address\"/>\n                <Address address={wallet.publicKey.toBase58()} className=\"block truncate\"/>\n            </div>\n            <div className=\"mb-4 clearfix text-white\">\n                <strong className=\"block\">Balance</strong>\n                <span>◎{Number(balance).toFixed(4)}</span>\n                <button type=\"button\" onClick={() => wallet.disconnect()}\n                        className=\"float-right items-center px-2.5 py-1.5 shadow-sm text-xs  font-medium rounded bg-gray-500 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\">\n                    Disconnect\n                </button>\n                <ButtonPrimary type=\"button\" onClick={requestAirdrop}\n                               className=\"float-right mr-2 px-2.5 py-1.5 text-xs my-0 rounded active:bg-white\"\n                               disabled={loading}>\n                    Airdrop\n                </ButtonPrimary>\n            </div>\n        </>\n    )\n}\n","export default function EmptyStreams() {\n    return (<div className=\"mx-auto my-10 text-white text-center\">\n        <span>Your streams will appear here.</span>\n        <br/>\n        <span>Start streaming!</span>\n    </div>)\n}","import EmptyStreams from \"../Components/EmptyStreams\";\nimport {_swal, getDecodedAccountData} from \"../utils/helpers\";\nimport {getStreamed, Stream} from \"../Components\";\nimport {_cancelStream, _withdrawStream} from \"../Actions\";\nimport {getUnixTime} from \"date-fns\";\nimport {STREAM_STATUS_CANCELED} from \"../constants\";\nimport {useNetworkContext} from \"../Contexts/NetworkContext\";\nimport useBalanceStore from \"../Stores/BalanceStore\";\nimport useStreamStore from \"../Stores/StreamsStore\";\nimport {PublicKey} from \"@solana/web3.js\";\nimport {toast} from \"react-toastify\";\nimport {useEffect} from \"react\";\n\nexport default function StreamsContainer() {\n\n    const {\n        network,\n        selectedWallet,\n        connection,\n    } = useNetworkContext()\n\n    const {balance, setBalance} = useBalanceStore()\n    const [streams, setStreams] = useStreamStore(state => [state.streams, state.setStreams])\n\n    //componentWillMount\n    useEffect(() => {\n        const newStreams = {...streams}\n        const streamID = window.location.hash.substring(1);\n\n        if (streamID) {\n            try {\n                new PublicKey(streamID);\n                newStreams[streamID] = undefined; // We're setting the data few lines below\n            } catch (e) {\n                toast.error(\"Stream URL not valid. Please double check with the sender.\")\n            }\n        }\n\n        for (const id in newStreams) {\n            if (newStreams.hasOwnProperty(id)) {\n                //first, the cleanup\n                let pk = undefined\n                try {\n                    pk = new PublicKey(id);\n                } catch (e) {\n                    toast.error(e.message + id)\n                    //removeStream(id, true);\n                }\n\n                if (pk) {\n                    connection.getAccountInfo(new PublicKey(id)).then(result => {\n                        const temp = {...streams}\n                        if (result?.data) {\n                            temp[id] = getDecodedAccountData(result.data);\n                        } else {\n                            if (id === streamID) {\n                                toast.error(\"Stream URL not valid. Please double check with the sender.\")\n                            }\n                            delete temp[id]\n                        }\n                        setStreams(temp)\n                    })\n                }\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        localStorage.streams = JSON.stringify(streams);\n    }, [streams])\n\n    async function withdrawStream(id: string) {\n        const {start, end, amount} = streams[id];\n        const success = await _withdrawStream(id, streams[id], connection, selectedWallet, network)\n        if (success) {\n            const withdrawn = getStreamed(start, end, amount)\n            setBalance(balance + withdrawn)\n            setStreams({...streams, [id]: {...streams[id], withdrawn}})\n        }\n    }\n\n    async function cancelStream(id: string) {\n        const {start, end, amount} = streams[id];\n        const now = new Date();\n        const withdrawn = getStreamed(start, end, amount);\n        const success = await _cancelStream(id, streams[id], connection, selectedWallet, network)\n        if (success) {\n            setBalance(balance + amount - withdrawn)\n            setStreams({\n                ...streams,\n                [id]: {...streams[id], withdrawn, canceled_at: getUnixTime(now), status: STREAM_STATUS_CANCELED}\n            })\n        }\n    }\n\n    async function removeStream(id: string, skipPrompt?: boolean) {\n        if (!skipPrompt && await _swal()) {\n            const newStreams = {...streams}\n            delete newStreams[id];\n            setStreams(newStreams)\n        }\n    }\n\n    return <div>\n        <strong className=\"text-white text-center text-2xl block\">My Streams</strong>\n        {Object.keys(streams).length > 0 ? (\n            Object.entries(streams)\n                .sort(([, stream1], [, stream2]) => stream2.start - stream1.start)\n                .map(([id, data]) => (\n                    <Stream key={id} onStatusUpdate={(status) => setStreams({\n                        ...streams,\n                        [id]: {...streams[id], status}\n                    })}\n                            onWithdraw={() => withdrawStream(id)} onCancel={() => cancelStream(id)}\n                            id={id} data={data} myAddress={selectedWallet.publicKey.toBase58()}\n                            removeStream={() => removeStream(id)}/>\n                ))\n        ) : <EmptyStreams/>}\n    </div>\n}\n","import {useState} from \"react\";\nimport {Account, CreateStreamForm, Curtain} from \"../Components\";\nimport StreamsContainer from \"../Containers/StreamsContainer\";\nimport {useNetworkContext} from \"../Contexts/NetworkContext\";\n\nexport default function Main() {\n    const [loading, setLoading] = useState(false)\n    const {selectedWallet} = useNetworkContext()\n\n    return (\n        <div className=\"mx-auto grid grid-cols-1 gap-16 max-w-lg xl:grid-cols-2 xl:max-w-5xl\">\n            <div className=\"mb-8\">\n                <Curtain visible={loading}/>\n                <Account wallet={selectedWallet} loading={loading} setLoading={setLoading}/>\n                <hr/>\n                <CreateStreamForm loading={loading} setLoading={setLoading}/>\n            </div>\n            <StreamsContainer/>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/logo.c4294b7c.png\";","import {useEffect} from \"react\";\nimport {LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport NotConnected from \"./Pages/NotConnected\";\nimport Main from \"./Pages/Main\";\nimport {Banner, Footer, Logo} from \"./Components\";\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport logo from './logo.png'\nimport {useNetworkContext} from \"./Contexts/NetworkContext\";\nimport useBalanceStore from \"./Stores/BalanceStore\";\n\nfunction App() {\n    const {\n        selectedWallet,\n        setSelectedWallet,\n        urlWallet,\n        connected,\n        setConnected,\n        connection,\n    } = useNetworkContext()\n\n    const {setBalance} = useBalanceStore()\n\n    useEffect(() => {\n        if (selectedWallet) {\n            selectedWallet.on('connect', () => {\n                setConnected(true);\n                connection.getBalance(selectedWallet.publicKey)\n                    .then(result => setBalance(result / LAMPORTS_PER_SOL));\n                toast.success('Connected to wallet!');\n            });\n            selectedWallet.on('disconnect', () => {\n                setConnected(false);\n                // setSelectedWallet(undefined);\n                toast.info('Disconnected from wallet');\n            });\n            //selectedWallet.connect();\n            return () => {\n                selectedWallet.disconnect();\n            };\n        }\n    }, [connection, selectedWallet, setBalance, setConnected]);\n\n    useEffect(() => {\n        setSelectedWallet(urlWallet)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div>\n            <Banner/>\n            <div className={\"mx-auto bg-blend-darken px-4 my-4\"}>\n                <Logo src={logo}/>\n                {connected ?\n                    <Main/> :\n                    <NotConnected action={() => selectedWallet.connect()}/>}\n            </div>\n            <ToastContainer hideProgressBar position=\"bottom-left\" limit={4}/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {FormProvider} from \"./Contexts/FormContext\";\nimport {NetworkProvider} from \"./Contexts/NetworkContext\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <NetworkProvider>\n            <FormProvider>\n                <App/>\n            </FormProvider>\n        </NetworkProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import createStore from 'zustand'\nimport {clusterApiUrl} from \"@solana/web3.js\";\n\nconst networkStore = createStore(set => ({\n    network: clusterApiUrl('devnet'),\n    setNetwork: network => set({network})\n}))\n\nexport default networkStore","import {\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants\";\nimport BufferLayout from \"buffer-layout\";\nimport {LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport {u64} from \"@solana/spl-token\";\nimport {getUnixTime} from \"date-fns\";\nimport swal from \"sweetalert\";\nimport {Buffer} from 'buffer/';\nimport useNetworkStore from \"../Stores/NetworkStore\";\n\nexport const publicKey = (property = \"publicKey\"): BufferLayout.Layout => {\n    return BufferLayout.blob(32, property);\n};\n\nexport const uint64 = (property = \"uint64\"): BufferLayout.Layout => {\n    return BufferLayout.blob(8, property);\n};\n\nconst DataLayout = BufferLayout.struct([\n    uint64(\"starttime\"),\n    uint64(\"endtime\"),\n    uint64(\"amount\"),\n    uint64(\"withdrawn\"),\n    publicKey(\"sender\"),\n    publicKey(\"recipient\"),\n]);\n\nexport function getDecodedAccountData(buffer: Buffer) {\n    const accountData = DataLayout.decode(buffer);\n\n    const start = Number(u64.fromBuffer(accountData.starttime));\n    const end = Number(u64.fromBuffer(accountData.endtime));\n    const amount = Number(u64.fromBuffer(accountData.amount)) / LAMPORTS_PER_SOL;\n    const withdrawn = Number(u64.fromBuffer(accountData.withdrawn)) / LAMPORTS_PER_SOL;\n    const sender = (new PublicKey(accountData.sender)).toBase58();\n    const recipient = (new PublicKey(accountData.recipient)).toBase58();\n\n    const status = getStreamStatus(Number(start), Number(end), getUnixTime(new Date())) //in milliseconds\n\n    return new StreamData(sender, recipient, amount, start, end, withdrawn, status);\n}\n\nexport function getExplorerLink(type: string, id: string): string {\n    const network = useNetworkStore.getState().network\n    const cluster = getClusterName(network) || `custom&customUrl=${network}`\n    return `https://explorer.solana.com/${type}/${id}?cluster=${cluster}`;\n}\n\nexport function getStreamStatus(start: number, end: number, now: number) {\n    if (now < start) {\n        return STREAM_STATUS_SCHEDULED\n    } else if (now < end) {\n        return STREAM_STATUS_STREAMING\n    } else {\n        return STREAM_STATUS_COMPLETE\n    }\n}\n\nexport function StreamData(sender: string, receiver: string, amount: number, start: number, end: number, withdrawn?: number, status?: string, canceled_at: number) {\n    this.sender = sender;\n    this.receiver = receiver;\n    this.amount = amount;\n    this.start = start;\n    this.end = end;\n    this.withdrawn = withdrawn || 0;\n    this.status = canceled_at ? STREAM_STATUS_CANCELED : (status || STREAM_STATUS_SCHEDULED);\n    this.canceled_at = canceled_at;\n}\n\nexport function _swal(): Promise {\n    return swal({text: \"Are you sure?\", icon: \"warning\", buttons: true})\n}\n\nexport function copyToClipboard(value): void {\n    const el = document.createElement('textarea');\n    el.value = value;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport function streamCreated(id: string) {\n    const url = window.location.origin + \"#\" + id;\n    swal({\n        button: \"Copy Stream URL\",\n        icon: 'success',\n        title: \"Stream created!\",\n        //sweet alert accepts pure HTML Node, so some wrapping must be done https://sweetalert.js.org/guides/#using-dom-nodes-as-content\n        content:\n            {\n                element: \"a\",\n                attributes: {\n                    className: \"text-primary block truncate max-w-full\",\n                    href: url,\n                    target: \"_blank\",\n                    innerHTML: url\n                }\n            }\n    }).then((clicked) => {\n        if (clicked) {\n            copyToClipboard(url);\n            swal(\"Link copied to clipboard!\", \"Send it to the recipient!\", \"success\")\n        }\n    })\n}\n\nfunction getClusterName(url: string) {\n    const hasMatch = url.match(/https:\\/\\/api\\.(.*)\\.solana\\.com/)\n    return hasMatch ? hasMatch[1] : null\n}\n","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function ToastrLink(props: { url: string, urlText: string, nonUrlText: string }) {\n    const {url, urlText, nonUrlText} = props;\n    return <span>{nonUrlText}<br/>\n        <a className=\"font-bold\"\n           href={url} rel=\"noopener noreferrer\"\n           target=\"_blank\">{urlText}<ExternalLinkIcon className=\"ml-1 w-4 h-4 inline\"/>\n        </a>\n    </span>\n}","import {toast} from \"react-toastify\";\nimport {Connection, Keypair, Transaction} from \"@solana/web3.js\";\nimport ToastrLink from \"../Components/ToastrLink\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {INSTRUCTION_CREATE_STREAM, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {getExplorerLink} from \"../utils/helpers\";\n\nexport default async function sendTransaction(type: number, transaction: Transaction, connection: Connection, wallet: Wallet, network?: string, pda?: Keypair) {\n    try {\n        transaction.recentBlockhash = (await connection.getRecentBlockhash()).blockhash;\n        toast.info('Please confirm transaction in your wallet.', {autoClose: 15000});\n        transaction.feePayer = wallet.publicKey;\n\n        if (type === INSTRUCTION_CREATE_STREAM) {\n            transaction.partialSign(pda);\n        }\n\n        const signed = await wallet.signTransaction(transaction);\n        const signature = await connection.sendRawTransaction(signed.serialize());\n        toast.dismiss();\n        toast.info('Submitted transaction. Awaiting confirmation...', {autoClose:15000});\n\n        // can use 'finalized' which gives 100% certainty, but requires much longer waiting.\n        const finality = TX_FINALITY_CONFIRMED\n        await connection.confirmTransaction(signature, finality)\n        const transactionUrl = getExplorerLink('tx', signature);\n        toast.dismiss();\n        toast.success(<ToastrLink\n            url={transactionUrl}\n            urlText=\"View on explorer\"\n            nonUrlText={`Transaction ${finality}!` + (finality === TX_FINALITY_CONFIRMED ? \" Please allow it some time to finalize.\" : \"\")}\n        />, {autoClose: 20000, closeOnClick: false});\n        return true;\n    } catch (e) {\n        console.warn(e);\n        //todo log these errors somewhere for our reference\n        toast.error('Error: ' + e.message);\n        return false;\n    }\n}\n","import {\n    Connection,\n    Keypair,\n    LAMPORTS_PER_SOL,\n    PublicKey,\n    SystemProgram,\n    Transaction,\n    TransactionInstruction\n} from \"@solana/web3.js\";\nimport BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CREATE_STREAM, PROGRAM_ID} from \"../constants\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\n\nexport default async function _createStream(data: StreamData, connection: Connection, wallet: Wallet, network?: string, pda: Keypair) {\n    const instruction = getCreateStreamInstruction(data, pda.publicKey)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_CREATE_STREAM, tx, connection, wallet, network, pda);\n}\n\nfunction getCreateStreamInstruction(data: StreamData, pdaPub: PublicKey): TransactionInstruction {\n    const {sender, receiver} = data;\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver), //recipient\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: pdaPub, //PDA used for data\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId, //system program required to make a transfer\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(PROGRAM_ID),\n        data: encodeInstructionData(data),\n    });\n}\n\n\nfunction encodeInstructionData(data: StreamData) {\n    const {amount, start, end} = data;\n    // Packed as little endian\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.u32(\"start\"),\n        BufferLayout.u32(\"end\"),\n        // N.B. JS Number has 53 significant bits, so numbers larger than\n        // 2^53 can be misrepresented\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const encoded = Buffer.alloc(layout.span);\n    layout.encode({\n            instruction: INSTRUCTION_CREATE_STREAM,\n            start: start,\n            end: end,\n            // amount: Number.MAX_SAFE_INTEGER // limited to 2^53 - 1 = 9007199254740991\n            amount: Math.trunc(amount * LAMPORTS_PER_SOL),\n        },\n        encoded\n    );\n\n    // UInt64 alternative is to remove the \"amount\" from layout encoding and\n    // use the following code:\n    // //encoded.writeBigUInt64LE(BigInt(\"18446744073709551615\"), 9)\n\n    return encoded;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_WITHDRAW_STREAM,PROGRAM_ID, STREAMFLOW_ACCOUNT_ID} from \"../constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\n\nexport default async function _withdrawStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {receiver} = data;\n    const instruction = getWithdrawStreamInstruction(account_id, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_WITHDRAW_STREAM, tx, connection, wallet, network)\n}\n\nfunction getWithdrawStreamInstruction(account_id, receiver) {\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(receiver),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            //needed to transfer the rent only during the final withdrawal transaction\n            pubkey: new PublicKey(STREAMFLOW_ACCOUNT_ID),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(PROGRAM_ID),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const data = Buffer.alloc(layout.span);\n    //TODO - allow withdrawal of arbitrary (allowed) amount\n    layout.encode({\n            instruction: INSTRUCTION_WITHDRAW_STREAM,\n            amount: 0,// 0 = whole available amount is withdrawn.\n        },\n        data\n    );\n    return data;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CANCEL_STREAM,PROGRAM_ID} from \"../constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\n\nexport default async function _cancelStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {sender, receiver} = data;\n    const instruction = getCancelStreamInstruction(account_id, sender, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_CANCEL_STREAM, tx, connection, wallet, network)\n}\n\nfunction getCancelStreamInstruction(account_id, sender, receiver) {\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(PROGRAM_ID),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([BufferLayout.u8(\"instruction\")]);\n    const data = Buffer.alloc(layout.span);\n\n    layout.encode({instruction: INSTRUCTION_CANCEL_STREAM}, data);\n\n    return data;\n}\n"],"sourceRoot":""}
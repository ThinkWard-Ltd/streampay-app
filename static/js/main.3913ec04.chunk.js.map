{"version":3,"sources":["Actions/createStream.js","Actions/withdrawStream.js","Actions/cancelStream.js","Stores/BalanceStore.js","Stores/StreamsStore.js","Stores/WalletStore.js","Stores/index.js","utils/helpers.js","Stores/NetworkStore.js","Components/Recipient.js","Components/SelectToken.js","Contexts/FormContext.js","Components/DateTime.js","Components/Amount.js","Components/Curtain.js","Components/Stream/Badge.js","Components/Stream/ActionButton.js","Components/Stream/Duration.js","Components/Stream/Progress.js","Components/Stream.js","Components/Footer.js","Components/Logo.js","Components/ButtonPrimary.js","Components/Link.js","Components/Address.js","Components/CreateStreamForm.js","Components/Account.js","Components/SelectCluster.js","Components/Banner.js","Components/WalletPicker.js","Components/EmptyStreams.js","Containers/StreamsContainer.js","Pages/Main.js","logo.png","App.js","index.js","Components/ToastrLink.js","Actions/sendTransaction.js","constants/ids.js","constants/index.js"],"names":["_createStream","data","connection","wallet","network","pda","a","instruction","getCreateStreamInstruction","publicKey","tx","Transaction","feePayer","add","sendTransaction","INSTRUCTION_CREATE_STREAM","pdaPub","sender","receiver","TransactionInstruction","keys","pubkey","PublicKey","isSigner","isWritable","SystemProgram","programId","useStore","getState","encodeInstructionData","amount","start","end","layout","BufferLayout","struct","u8","ns64","nu64","encoded","Buffer","alloc","span","encode","Math","trunc","LAMPORTS_PER_SOL","_withdrawStream","account_id","getWithdrawStreamInstruction","INSTRUCTION_WITHDRAW_STREAM","STREAMFLOW_ACCOUNT_ID","_cancelStream","getCancelStreamInstruction","INSTRUCTION_CANCEL_STREAM","useBalanceStore","set","balance","setBalance","useStreamStore","get","streams","addStream","id","stream","deleteStream","clearStreams","memoizedWallet","memoizedConnection","walletStore","walletType","state","type","clusterUrl","key","name","adapter","getWallet","Connection","getConnection","setWalletType","persistStoreToLocalStorage","connectWallet","connect","catch","e","toast","error","WalletNotFoundError","disconnectWallet","disconnect","localStorage","cluster","existingStreams","JSON","parse","walletKey","mergedStreams","toBase58","stringify","create","devtools","useNetworkStore","useWalletStore","window","addEventListener","property","blob","uint64","DataLayout","getDecodedAccountData","buffer","accountData","decode","Number","u64","fromBuffer","starttime","endtime","withdrawn","StreamData","recipient","now","STREAM_STATUS_SCHEDULED","STREAM_STATUS_STREAMING","STREAM_STATUS_COMPLETE","getStreamStatus","getUnixTime","Date","getExplorerLink","explorerUrl","status","canceled_at","this","STREAM_STATUS_CANCELED","_swal","swal","text","icon","buttons","copyToClipboard","value","el","document","createElement","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","streamCreated","url","location","origin","button","title","content","element","attributes","className","href","target","innerHTML","then","clicked","CLUSTER_LOCAL","CLUSTER_DEVNET","CLUSTER_TESTNET","CLUSTER_MAINNET","clusterUrls","clusterApiUrl","programIds","prompt","encodeURIComponent","setCluster","Recipient","props","htmlFor","defaultValue","onChange","pattern","placeholder","required","SelectToken","disabled","FormContext","createContext","undefined","FormProvider","useState","setAmount","setReceiver","format","DATE_FORMAT","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","Provider","children","useFormContext","useContext","DateTime","date","updateDate","time","updateTime","initializeTime","minutes","TIME_FORMAT","END","minEndDate","TIME_SUFFIX","min","max","years","onFocus","onClick","Amount","step","autoFocus","MAX_SAFE_INTEGER","Curtain","visible","Badge","color","fill","viewBox","cx","cy","r","ActionButton","action","Duration","fromUnixTime","memo","Progress","rtl","toFixed","width","Stream","myAddress","removeStream","onStatusUpdate","onCancel","onWithdraw","STREAM_STATUS_COLOR","getStreamed","streamed","setStreamed","available","setAvailable","showWithdraw","showCancel","useEffect","interval","setInterval","tmpStatus","updateStatus","clearInterval","Link","EXPLORER_TYPE_ADDR","Address","address","timestamp","Footer","src","alt","loading","hideIcon","Logo","ButtonPrimary","rest","rel","iconClassName","copied","setCopied","setTimeout","storeGetter","CreateStreamForm","setLoading","Keypair","generate","validate","msg","toDateString","setCustomValidity","createStream","form","getElementById","elements","checkValidity","reportValidity","success","getMinimumBalanceForRentExemption","fee","onSubmit","START","connected","SelectCluster","WalletPicker","isMainnet","Account","airdropTxSignature","setAirdropTxSignature","requestAirdrop","AIRDROP_AMOUNT","signature","confirmTransaction","TX_FINALITY_CONFIRMED","result","err","networkStore","hidden","Component","div","addWalletOption","p","img","onclick","setActionValue","cancel","close","walletTypes","useMemo","getPhantomWallet","getSolflareWebWallet","getSolflareWallet","getSolletWallet","restoredWalletType","find","w","pickWallet","EmptyStreams","StreamsContainer","getBalance","newBalance","getAccountInfo","streamData","oldBalance","newWithdrawn","skipPrompt","savedStreams","newStreams","streamID","hash","substring","hasOwnProperty","pk","message","Object","length","entries","sort","stream1","map","withdrawStream","cancelStream","Main","setStreams","App","useReducer","i","forceUpdate","on","info","logo","hideProgressBar","limit","ReactDOM","render","StrictMode","ToastrLink","urlText","nonUrlText","transaction","getRecentBlockhash","recentBlockhash","blockhash","autoClose","partialSign","signTransaction","signed","sendRawTransaction","serialize","dismiss","finality","closeOnClick","console","warn"],"mappings":"iQAgBe,SAAeA,EAA9B,0C,4CAAe,WAA6BC,EAAkBC,EAAwBC,EAAgBC,EAAkBC,GAAzG,iBAAAC,EAAA,6DACLC,EAAcC,EAA2BP,EAAMI,EAAII,WACnDC,EAAK,IAAIC,cAAY,CAACC,SAAUT,EAAOM,YAAYI,IAAIN,GAFlD,SAGEO,YAAgBC,IAA2BL,EAAIR,EAAYC,EAAQC,EAASC,GAH9E,oF,sBAMf,SAASG,EAA2BP,EAAkBe,GAClD,IAAOC,EAAoBhB,EAApBgB,OAAQC,EAAYjB,EAAZiB,SAEf,OAAO,IAAIC,yBAAuB,CAC9BC,KAAM,CAAC,CACHC,OAAQ,IAAIC,YAAUL,GACtBM,UAAU,EACVC,YAAY,GACb,CACCH,OAAQ,IAAIC,YAAUJ,GACtBK,UAAU,EACVC,YAAY,GACb,CACCH,OAAQL,EACRO,UAAU,EACVC,YAAY,GACb,CACCH,OAAQI,gBAAcC,UACtBH,UAAU,EACVC,YAAY,IAEhBE,UAAW,IAAIJ,YAAUK,IAASC,WAAWF,WAC7CzB,KAAM4B,EAAsB5B,KAKpC,SAAS4B,EAAsB5B,GAC3B,IAAO6B,EAAsB7B,EAAtB6B,OAAQC,EAAc9B,EAAd8B,MAAOC,EAAO/B,EAAP+B,IAEhBC,EAASC,IAAaC,OAAO,CAC/BD,IAAaE,GAAG,eAChBF,IAAaG,KAAK,SAClBH,IAAaG,KAAK,OAGlBH,IAAaI,KAAK,YAGhBC,EAAUC,EAAOC,MAAMR,EAAOS,MAepC,OAdAT,EAAOU,OAAO,CACNpC,YAAaQ,IACbgB,MAAOA,EACPC,IAAKA,EAELF,OAAQc,KAAKC,MAAMf,EAASgB,qBAEhCP,GAOGA,K,kMCpEI,SAAeQ,EAA9B,0C,4CAAe,WAA+BC,EAAoB/C,EAAkBC,EAAwBC,EAAgBC,GAA7G,mBAAAE,EAAA,6DACJY,EAAYjB,EAAZiB,SACDX,EAAc0C,EAA6BD,EAAY9B,GACvDR,GAAK,IAAIC,eAAcE,IAAIN,GAHtB,SAIEO,YAAgBoC,IAA6BxC,EAAIR,EAAYC,EAAQC,GAJvE,oF,sBAOf,SAAS6C,EAA6BD,EAAY9B,GAE9C,OAAO,IAAIC,yBAAuB,CAC9BC,KAAM,CAAC,CACHC,OAAQ,IAAIC,YAAUJ,GACtBK,UAAU,EACVC,YAAY,GACb,CACCH,OAAQ,IAAIC,YAAU0B,GACtBzB,UAAU,EACVC,YAAY,GACb,CAECH,OAAQ,IAAIC,YAAU6B,KACtB5B,UAAU,EACVC,YAAY,GACb,CACCH,OAAQI,gBAAcC,UACtBH,UAAU,EACVC,YAAY,IAEhBE,UAAW,IAAIJ,YAAUK,IAASC,WAAWF,WAC7CzB,KAAM4B,MAKd,SAASA,IACL,IAAMI,EAASC,IAAaC,OAAO,CAC/BD,IAAaE,GAAG,eAChBF,IAAaI,KAAK,YAGhBrC,EAAOuC,EAAOC,MAAMR,EAAOS,MAQjC,OANAT,EAAOU,OAAO,CACNpC,YAAa2C,IACbpB,OAAQ,GAEZ7B,GAEGA,K,kMChDI,SAAemD,EAA9B,0C,4CAAe,WAA6BJ,EAAoB/C,EAAkBC,EAAwBC,EAAgBC,GAA3G,qBAAAE,EAAA,6DACJW,EAAoBhB,EAApBgB,OAAQC,EAAYjB,EAAZiB,SACTX,EAAc8C,EAA2BL,EAAY/B,EAAQC,GAC7DR,GAAK,IAAIC,eAAcE,IAAIN,GAHtB,SAIEO,YAAgBwC,IAA2B5C,EAAIR,EAAYC,EAAQC,GAJrE,oF,sBAOf,SAASiD,EAA2BL,EAAY/B,EAAQC,GACpD,OAAO,IAAIC,yBAAuB,CAC9BC,KAAM,CAAC,CACHC,OAAQ,IAAIC,YAAUL,GACtBM,UAAU,EACVC,YAAY,GACb,CACCH,OAAQ,IAAIC,YAAUJ,GACtBK,UAAU,EACVC,YAAY,GACb,CACCH,OAAQ,IAAIC,YAAU0B,GACtBzB,UAAU,EACVC,YAAY,GACb,CACCH,OAAQI,gBAAcC,UACtBH,UAAU,EACVC,YAAY,IAEhBE,UAAW,IAAIJ,YAAUK,IAASC,WAAWF,WAC7CzB,KAAM4B,MAKd,SAASA,IACL,IAAMI,EAASC,IAAaC,OAAO,CAACD,IAAaE,GAAG,iBAC9CnC,EAAOuC,EAAOC,MAAMR,EAAOS,MAIjC,OAFAT,EAAOU,OAAO,CAACpC,YAAa+C,KAA4BrD,GAEjDA,K,6FCzCIsD,EALS,SAACC,GAAD,MAAoB,CACxCC,QAAS,EACTC,WAAY,SAAAD,GAAO,OAAID,EAAI,CAACC,e,QCSjBE,EAXQ,SAACH,EAAeI,GAAhB,MAAmC,CACtDC,QAAS,GACTC,UAAW,SAACC,EAAYC,GAAb,OAAgCR,EAAI,CAACK,QAAQ,2BAAKD,IAAMC,SAAZ,kBAAsBE,EAAKC,OAClFC,aAAc,SAACF,GACX,IAAMF,EAAO,eAAOD,IAAMC,gBACnBA,EAAQE,GACfP,EAAI,CAACK,aAETK,aAAc,kBAAMV,EAAI,CAACK,QAAS,Q,uBCJlCM,EAAiB,GACjBC,EAAqB,GAmDVC,EA3BK,SAACb,EAAeI,GAAhB,MAAmC,CAEnDU,WAAY,KACZnE,OAAQ,WACJ,IAAMoE,EAAQX,IACd,OA3BU,SAACY,EAAeC,GAC9B,IAAKA,IAAeD,EAChB,OAAO,KAEX,IAAME,EAAMD,EAAaD,EAAKG,KAI9B,OAHMR,EAAeO,KACjBP,EAAc,eAAKO,EAAMF,EAAKI,YAE3BT,EAAeO,GAmBXG,CAAUN,EAAMD,WAAYC,EAAME,eAE7CvE,WAAY,kBAlBM,SAACuE,GACnB,IAAKA,EACD,OAAO,KAEX,IAAMC,EAAMD,EAIZ,OAHML,EAAmBM,KACrBN,EAAkB,eAAKM,EAAM,IAAII,aAAWL,KAEzCL,EAAmBM,GAURK,CAAcnB,IAAMa,eAGtCO,cAAe,SAACV,GACZV,IAAMqB,6BACNzB,EAAI,CAACc,gBAETY,cAAe,kCAAMtB,IAAMzD,gBAAZ,aAAM,EAAgBgF,UAChCC,OAAM,SAACC,GACJzB,IAAMoB,cAAc,MACpBM,IAAMC,MAAMF,aAAaG,sBAAsB,iCAAmC,8CAG1FC,iBAAkB,WAAO,IAAD,EACdlB,EAAQX,IACdW,EAAMU,6BACN,UAAAV,EAAMpE,gBAAN,SAAgBuF,gBC7ClBT,EAA6B,WAAO,IAAD,IAC/BV,EAAQ5C,EAASC,WACvB+D,aAAaC,QAAUrB,EAAMqB,QAC7BD,aAAajE,UAAY6C,EAAM7C,UAC/BiE,aAAarB,WAAb,UAA0BC,EAAMD,kBAAhC,aAA0B,EAAkBK,KAE5C,IAAMkB,EAAkBC,KAAKC,MAAMJ,aAAa9B,SAAW,MACrDmC,EAAS,UAAGzB,EAAMpE,gBAAT,aAAG,EAAgBM,UAClC,GAAIuF,EAAW,CAIX,IAAMC,EAAa,2BACZJ,GADY,kBAEdtB,EAAMqB,QAFQ,2BAGRC,EAAgBtB,EAAMqB,UAHd,kBAIVI,EAAUE,WAAa3B,EAAMV,YAGtC8B,aAAa9B,QAAUiC,KAAKK,UAAUF,KAIxCtE,EAAWyE,YAAOC,oBAAS,SAAC7C,EAAKI,GAAN,mBAAC,mDAC3BL,EAAgBC,EAAKI,IACrB0C,YAAgB9C,EAAKI,IACrBD,EAAeH,EAAKI,IACpB2C,EAAe/C,EAAKI,IAJM,IAK7BqB,mCAGJuB,OAAOC,iBAAiB,eAAgBxB,GAEzBtD,O,8KCxCf,gSAcalB,EAAY,WAAkD,IAAjDiG,EAAgD,uDAArC,YACjC,OAAOxE,IAAayE,KAAK,GAAID,IAGpBE,EAAS,WAA+C,IAA9CF,EAA6C,uDAAlC,SAC9B,OAAOxE,IAAayE,KAAK,EAAGD,IAG1BG,EAAa3E,IAAaC,OAAO,CACnCyE,EAAO,aACPA,EAAO,WACPA,EAAO,UACPA,EAAO,aACPnG,EAAU,UACVA,EAAU,eAGP,SAASqG,EAAsBC,GAClC,IAAMC,EAAcH,EAAWI,OAAOF,GAEhChF,EAAQmF,OAAOC,IAAIC,WAAWJ,EAAYK,YAC1CrF,EAAMkF,OAAOC,IAAIC,WAAWJ,EAAYM,UACxCxF,EAASoF,OAAOC,IAAIC,WAAWJ,EAAYlF,SAAWgB,mBACtDyE,EAAYL,OAAOC,IAAIC,WAAWJ,EAAYO,YAAczE,mBAMlE,OAAO,IAAI0E,EALK,IAAIlG,YAAU0F,EAAY/F,QAASiF,WAChC,IAAI5E,YAAU0F,EAAYS,WAAYvB,WAIhBpE,EAAQC,EAAOC,EAAKuF,EAO1D,SAAyBxF,EAAeC,EAAa0F,GACxD,OAAIA,EAAM3F,EACC4F,IACAD,EAAM1F,EACN4F,IAEAC,IAfIC,CAAgBZ,OAAOnF,GAAQmF,OAAOlF,GAAM+F,YAAY,IAAIC,QAKxE,SAASC,EAAgBzD,EAAcT,GAC1C,MAAM,+BAAN,OAAsCS,EAAtC,YAA8CT,EAA9C,oBAA4DpC,IAASC,WAAWsG,eAa7E,SAASV,EAAWvG,EAAgBC,EAAkBY,EAAgBC,EAAeC,EAAauF,EAAoBY,EAAiBC,GAC1IC,KAAKpH,OAASA,EACdoH,KAAKnH,SAAWA,EAChBmH,KAAKvG,OAASA,EACduG,KAAKtG,MAAQA,EACbsG,KAAKrG,IAAMA,EACXqG,KAAKd,UAAYA,GAAa,EAC9Bc,KAAKF,OAASC,EAAcE,IAA0BH,GAAUR,IAChEU,KAAKD,YAAcA,EAGhB,SAASG,IACZ,OAAOC,IAAK,CAACC,KAAM,gBAAiBC,KAAM,UAAWC,SAAS,IAG3D,SAASC,EAAgBC,GAC5B,IAAMC,EAAKC,SAASC,cAAc,YAClCF,EAAGD,MAAQA,EACXC,EAAGG,aAAa,WAAY,IAC5BH,EAAGI,MAAMC,SAAW,WACpBL,EAAGI,MAAME,KAAO,UAChBL,SAASM,KAAKC,YAAYR,GAC1BA,EAAGS,SACHR,SAASS,YAAY,QACrBT,SAASM,KAAKI,YAAYX,GAGvB,SAASY,EAAc3F,GAC1B,IAAM4F,EAAMnD,OAAOoD,SAASC,OAAS,IAAM9F,EAC3CyE,IAAK,CACDsB,OAAQ,kBACRpB,KAAM,UACNqB,MAAO,kBAEPC,QACI,CACIC,QAAS,IACTC,WAAY,CACRC,UAAW,yCACXC,KAAMT,EACNU,OAAQ,SACRC,UAAWX,MAGxBY,MAAK,SAACC,GACDA,IACA5B,EAAgBe,GAChBnB,IAAK,4BAA6B,4BAA6B,iB,2UCzG9DiC,EAAgB,QAChBC,EAAiB,SACjBC,EAAkB,UAClBC,EAAkB,eAEzBC,GAAW,mBACZJ,GAAgB,iBAAM,2BADV,cAEZC,GAAiB,kBAAMI,wBAAcJ,MAFzB,cAGZC,GAAkB,kBAAMG,wBAAcH,MAH1B,cAIZC,GAAkB,kBAAME,wBAAcF,MAJ1B,GAOXG,GAAU,mBACXN,GAAgB,kBAAMO,OAAO,kBADlB,cAEXN,GAAiB,iBAAM,kDAFZ,cAGXC,GAAkB,iBAAM,kDAHb,cAIXC,GAAkB,kBAAM,QAJb,GA8BDtE,IAvBS,SAAC9C,EAAeI,GAAhB,MAAmC,CAEvDgC,QAASD,aAAaC,SAAW8E,EACjChJ,UAAWqJ,EAAWpF,aAAaC,SAAW8E,KAG9CjG,WAAY,kBAAMoG,EAAYjH,IAAMgC,YACpCsC,YAAa,WACT,IAAMtC,EAAUhC,IAAMgC,QACtB,OAAOA,IAAY6E,EAAZ,2BAAgDQ,mBAAmBrH,IAAMa,aAAgBmB,GAEpGsF,WAAY,SAACtF,GACThC,IAAMqB,6BACN,IAAMvD,EAAYqJ,EAAWnF,KAEzBpC,EADA9B,EACI,CAACkE,UAASlE,aAGV,CAACkE,QAAS8E,EAAgBhJ,UAAWqJ,EAAWL,W,yNCvCjD,SAASS,EAAUC,GAC9B,OACI,sBAAKjB,UAAU,gBAAf,UACI,uBAAOkB,QAAQ,UAAUlB,UAAU,kCAAnC,+BAGA,qBAAKA,UAAU,OAAf,SACI,uBACI3F,KAAK,OACLG,KAAK,UACLZ,GAAG,UACHuH,aAAcF,EAAMvC,MACpB0C,SAAU,SAAAlG,GAAC,OAAI+F,EAAMG,SAASlG,EAAEgF,OAAOxB,QACvC2C,QAAQ,sEACRrB,UAAU,yHACVsB,YAAY,kCACZ,mBAAiB,sBACjBC,UAAQ,SCjBb,SAASC,IACpB,OACI,sBAAKxB,UAAU,2BAAf,UACI,uBAAOkB,QAAQ,QAAQlB,UAAU,kCAAjC,mBAGA,yBACIpG,GAAG,QACHY,KAAK,QACLwF,UAAU,8HAA6ImB,aAAa,MAHxK,UAKI,yCACA,wBAAQM,UAAQ,EAAhB,2CACA,wBAAQA,UAAQ,EAAhB,qCACA,wBAAQA,UAAQ,EAAhB,sCACA,wBAAQA,UAAQ,EAAhB,mC,6BCXVC,EAAcC,6BAAcC,GAE3B,SAASC,EAAaZ,GACzB,IAAM1D,EAAM,IAAIM,KAEhB,EAA4BiE,wBAASF,GAArC,mBAAOjK,EAAP,KAAeoK,EAAf,KACA,EAAgCD,wBAASF,GAAzC,mBAAO7K,EAAP,KAAiBiL,EAAjB,KACA,EAAkCF,mBAASG,YAAO1E,EAAK2E,MAAvD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA8BR,mBAASK,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA8BV,mBAAS,IAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KAEA,OAAO,cAAChB,EAAYiB,SAAb,CAAsBjE,MAAO,CAChC/G,SACAoK,YACAhL,WACAiL,cACAG,YACAC,eACAC,YACAC,eACAC,UACAC,aACAC,UACAC,cAZG,SAaHzB,EAAM2B,WAGP,SAASC,IACZ,OAAOC,qBAAWpB,GC5BP,SAASqB,EAAS9B,GAC7B,IAAOrB,EAA6CqB,EAA7CrB,MAAOoD,EAAsC/B,EAAtC+B,KAAMC,EAAgChC,EAAhCgC,WAAYC,EAAoBjC,EAApBiC,KAAMC,EAAclC,EAAdkC,WACtC,EAA+BN,IAAxBV,EAAP,EAAOA,UAAWE,EAAlB,EAAkBA,UAUlB,SAASe,IACL,IAAM7F,EAAM0E,YAAOvL,YAAI,IAAImH,KAAQ,CAACwF,QAAS,IAAKC,KAElD,GAAI1D,IAAU2D,IAAK,CACf,IAAMC,EAAarB,EAAa,IAAItE,KAAKsE,EAAYsB,KAAiB,IAAI5F,OAErEsE,IAAca,GAAQA,EAAOb,IAC9Bc,EAAWhB,YAAOuB,EAAYtB,MAG9BC,GAAaA,IAAca,GAAQE,GAAQb,EAC3Cc,EAAWlB,YAAOvL,YAAI,IAAImH,KAAKsE,EAAY,IAAME,GAAY,CAACgB,QAAS,IAAKC,MACpEjB,GACRc,EAAW5F,SAEP2F,GAAQA,EAAO3F,IACvB4F,EAAW5F,GAInB,OACI,qCACI,sBAAKyC,UAAU,2BAAf,UACI,wBAAOkB,QAAStB,EACTI,UAAU,6CADjB,UAC+DJ,EAD/D,WAEA,qBAAKI,UAAU,OAAf,SACI,uBAAO3F,KAAK,OAAOG,KAAMoF,EAAOhG,GAAIgG,EAC7BlB,MAAOsE,EACPU,IAnCf9D,IAAU2D,KAAOpB,EACVF,YAAO,IAAIpE,KAAKsE,EAAYsB,KAAcvB,KAE1CD,YAAO,IAAIpE,KAAQqE,KAiCXyB,IAAK1B,YAAOvL,YAAI,IAAImH,KAAQ,CAAC+F,MAAO,IAAK1B,KACzC2B,QAAST,EACTU,QAASV,EACThC,SAAU,SAAAlG,GAAC,OAAI+H,EAAW/H,EAAEgF,OAAOxB,QACnCsB,UAAU,yHACVsB,YAAY,GAAG,mBAAkB1B,EAAK,eAAmB2B,UAAQ,SAGhF,sBAAKvB,UAAU,2BAAf,UACI,wBAAOkB,QAAStB,EAAK,QACdI,UAAU,6CADjB,UAC+DJ,EAD/D,WAEA,qBAAKI,UAAU,OAAf,SACI,uBAAO3F,KAAK,OAAOG,KAAMoF,EAAK,QAAYhG,GAAIgG,EAAK,QAC5ClB,MAAOwE,EACPW,QAAST,EACTU,QAASV,EACThC,SAAU,SAAAlG,GAAC,OAAIiI,EAAWjI,EAAEgF,OAAOxB,QACnCsB,UAAU,yHACVsB,YAAY,GAAG,mBAAkB1B,EAAK,oBAAwB2B,UAAQ,YChElF,SAASwC,EAAO9C,GAC3B,OACI,sBAAKjB,UAAU,2BAAf,UACI,uBAAOkB,QAAQ,SAASlB,UAAU,kCAAlC,oBAGA,qBAAKA,UAAU,OAAf,SACI,uBACIgE,KAAK,MACLC,WAAW,EACX5J,KAAK,SACLG,KAAK,SACLZ,GAAG,SACHuH,aAAcF,EAAMvC,MACpB0C,SAAU,SAAAlG,GAAC,OAAI+F,EAAMG,SAASlG,EAAEgF,OAAOxB,QACvCsB,UAAU,yHACV0D,IAAK,EACLC,IAAK1C,EAAM0C,KAAO5G,OAAOmH,iBACzB5C,YAAY,OACZ,mBAAiB,qBACjBC,UAAU,SCpBf,SAAS4C,EAAQlD,GAC5B,OACI,qBAAKjB,UAAS,0EAAqEiB,EAAMmD,QAAU,QAAU,UAA7G,SACI,qBAAKpE,UAAU,SAAf,iBCHG,SAASqE,EAAMpD,GAC1B,IAAO5G,EAAgB4G,EAAhB5G,KAAMiK,EAAUrD,EAAVqD,MACb,OAAO,qBAAKtE,UAAU,SAAf,SACH,uBACIA,UAAS,sEAAiEsE,EAAjE,qBAAmFA,EAAnF,mBADb,UAEI,qBAAKtE,UAAS,wDAAmDsE,EAAnD,QAAgEC,KAAK,eAAeC,QAAQ,UAA1G,SACE,wBAAQC,GAAI,EAAGC,GAAI,EAAGC,EAAG,MAE1BtK,OCRE,SAASuK,EAAa3D,GACjC,IAAOrB,EAAwBqB,EAAxBrB,MAAOiF,EAAiB5D,EAAjB4D,OAAQP,EAASrD,EAATqD,MAEtB,OACI,wBAAQR,QAASe,EACT7E,UAAS,gCAA2BsE,EAA3B,yBAAiDA,EAAjD,0BAAwEA,EAAxE,6BADjB,SAEK1E,I,sBCHb,SAASkF,EAAS7D,GACd,OACI,qBAAIjB,UAAU,4BAAd,UACMiC,YAAO8C,YAAa9D,EAAMrJ,OAAQ,oBADxC,WACwEqK,YAAO8C,YAAa9D,EAAMpJ,KAAM,uBAKjGmN,qBAAKF,GCXL,SAASG,EAAShE,GAC7B,IAAKrB,EAA0BqB,EAA1BrB,MAAOlB,EAAmBuC,EAAnBvC,MAAOiF,EAAY1C,EAAZ0C,IAAKuB,EAAOjE,EAAPiE,IAGxB,OAFAxG,EAAQ3B,OAAO2B,GAAOyG,QAAQ,GAC9BxB,EAAM5G,OAAO4G,GAAKwB,QAAQ,GAEtB,qCACI,6BAAKvF,IACL,qBAAKI,UAAU,4CAAf,SACI,qBACIA,UAAW,4EAA8EkF,EAAM,cAAgB,IAC/GnG,MAAO,CAACqG,MAAO1G,EAAQiF,EAAM,IAAM,SAG3C,wBAAO3D,UAAU,2BAAjB,mBAA8CtB,EAAM,wBAAOsB,UAAU,gBAAjB,cAAmC2D,W,oBCKpF,SAAS0B,EAAOpE,GAC3B,MAAkEA,EAAMnL,KAAjE8B,EAAP,EAAOA,MAAOC,EAAd,EAAcA,IAAKuF,EAAnB,EAAmBA,UAAWzF,EAA9B,EAA8BA,OAAQZ,EAAtC,EAAsCA,SAAUD,EAAhD,EAAgDA,OAAQkH,EAAxD,EAAwDA,OACjDsH,EAAqErE,EAArEqE,UAAWC,EAA0DtE,EAA1DsE,aAAcC,EAA4CvE,EAA5CuE,eAAgBC,EAA4BxE,EAA5BwE,SAAUC,EAAkBzE,EAAlByE,WAAY9L,EAAMqH,EAANrH,GAEhE0K,EAAQqB,IAAoB3H,GAElC,EAAgC8D,mBAAS8D,EAAYhO,EAAOC,EAAKF,IAAjE,mBAAOkO,EAAP,KAAiBC,EAAjB,KACA,EAAkChE,mBAAS+D,EAAWzI,GAAtD,mBAAO2I,EAAP,KAAkBC,EAAlB,KAEMC,GAAiBjI,IAAWP,KAA4BO,IAAWN,KAA0BN,EAAYzF,IAAY2N,IAAcvO,EACnImP,GAAclI,IAAWP,KAA2BO,IAAWR,MAA4B8H,IAAcxO,EAa/G,OAZAqP,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzBP,EAAYF,EAAYhO,EAAOC,EAAKF,IACpCqO,EAAaH,EAAWzI,GACxB,IAAMkJ,EAoDlB,SAAsBtI,EAAgBpG,EAAeC,GACjD,IAAM0F,EAAMK,YAAY,IAAIC,MAC5B,OAAIG,IAAWR,KAA2BD,GAAO3F,EACtC6F,IACAO,IAAWP,KAA2BF,GAAO1F,EAC7C6F,IAEAM,EA3DeuI,CAAavI,EAAQpG,EAAOC,GAC1CyO,IAActI,GACdwH,EAAec,KAEpB,KACH,OAAO,kBAAME,cAAcJ,OAI3B,qBAAIpG,UAAS,kEAA6DsE,EAA7D,4DAAb,UACI,sBAAKtE,UAAU,gBAAf,UACI,cAACqE,EAAD,CAAOrE,UAAU,SAAS3F,KAAM2D,EAAQsG,MAAOA,IAC/C,wBAAQR,QAASyB,EACTvF,UAAS,kEAA6DsE,EAA7D,wCADjB,SAEI,cAAC,IAAD,CAAOtE,UAAU,6BAGzB,cAAC,EAAD,CAAUpI,MAAOA,EAAOC,IAAKA,IAC7B,cAAC4O,EAAD,CAAMjH,IAAK1B,YAAgB4I,IAAoB9M,GAAKgG,MAAO,OAC3D,cAAC+G,EAAD,CAASC,QAAShN,EAAIoG,UAAU,qCAChC,cAACyG,EAAD,CAAMjH,IAAK1B,YAAgB4I,IAAoB3P,GAAW6I,MAAO,cACjE,cAAC+G,EAAD,CAASC,QAAS7P,EAAUiJ,UAAU,qCACtC,cAACiF,EAAD,CAAUrF,MAAM,YAAYlB,MAAOtB,EAAWuG,IAAKhM,IAClDqG,IAAWG,KACZ,cAAC8G,EAAD,CAAUrF,MAAM,WAAWlB,MAAO/G,EAASyF,EAAWuG,IAAKhM,EAAQuN,KAAK,IACvElH,IAAWG,KACZ,qCACI,cAAC8G,EAAD,CAAUrF,MAAM,WAAWlB,MAAOmH,EAAUlC,IAAKhM,IAChDsO,GACA,qCACG,2CAAa,uBACT,qBAAKjG,UAAU,kCAAf,+BACJ,qBAAIA,UAAU,aAAd,mBAA6B+F,EAAUZ,QAAQ,MAC/C,cAACP,EAAD,CAAchF,MAAM,WAAWiF,OAAQa,EACzBpB,MAAOqB,IAAoBlI,UAE5CyI,GAAc,cAACtB,EAAD,CAAchF,MAAO,SAAUiF,OAAQY,EACzBnB,MAAOqB,IAAoBxH,aAMjE,SAASyH,EAAYhO,EAAeC,EAAaF,EAAgBkP,GAGpE,OAFAA,EAAYA,GAAajJ,YAAY,IAAIC,OAEzBjG,EAAc,EAC1BiP,EAAYhP,EAAYF,GAEpBkP,EAAYjP,IAAUC,EAAMD,GAASD,EChFlC,SAASmP,IACpB,OAAQ,yBAAQ9G,UAAU,yDAAlB,UACJ,qBAAK+G,IAAI,2EACJ/G,UAAU,oBAAoBgH,IAAI,cAAcC,QAAQ,SAC7D,kCACI,cAACR,EAAD,CAAMjH,IAAI,6BAA6BI,MAAM,aAAasH,UAAU,IADxE,KAEM,cAACT,EAAD,CAAMjH,IAAI,+BAA+BI,MAAM,YAAYsH,UAAU,UCRpE,SAASC,EAAKlG,GACzB,OACI,sBAAKjB,UAAU,kBAAf,UACI,qBAAK+G,IAAK9F,EAAM8F,IAAKC,IAAI,0BAA0BhH,UAAU,iBAC7D,qBAAIA,UAAU,uBAAd,mBAA2C,gD,+CCJxC,SAASoH,EAAT,GAAwD,IAAhCxE,EAA+B,EAA/BA,SAAU5C,EAAqB,EAArBA,UAAcqH,EAAO,iBAElE,OACI,gDAAQrH,UAFQ,uOAEiBA,GAAeqH,GAAhD,aACKzE,KCFE,SAAS6D,EAAKxF,GACzB,IAAOzB,EAAmCyB,EAAnCzB,IAAKI,EAA8BqB,EAA9BrB,MAAOI,EAAuBiB,EAAvBjB,UACbzB,EADoC0C,EAAZiG,UACL,8BAAK,cAAC,IAAD,CAAkBlH,UAAU,qBAE1D,OACI,wBAAQA,UAAW,kCAAoCA,EAAvD,SACI,oBAAGC,KAAMT,EAAKU,OAAO,SAASoH,IAAI,sBAAlC,UACK1H,GAASJ,EADd,IACoBjB,OCLjB,SAASoI,EAAQ1F,GAC5B,IAAO2F,EAAsB3F,EAAtB2F,QAAS5G,EAAaiB,EAAbjB,UACVuH,EAAgB,qEACtB,EAA4BzF,oBAAS,GAArC,mBAAO0F,EAAP,KAAeC,EAAf,KAUA,OACI,uBAAMzH,UAAW,kBAAoBA,EAArC,UACKwH,EACM,uBAAMxH,UAAU,sBAAhB,UAAsC,cAAC,IAAD,CAAWA,UAAWuH,IAAgB,+CAC7E,cAAC,IAAD,CAAevH,UAAWuH,EAAezD,QAZvD,WACIrF,YAAgBmI,GAChBa,GAAU,GACVC,YAAW,WACPD,GAAU,KACX,QAQEb,K,sECZPe,EAAc,SAAAvN,GAAK,MAAK,CAC1Bd,QAASc,EAAMd,QACfC,WAAYa,EAAMb,WAClBI,UAAWS,EAAMT,UACjB5D,WAAYqE,EAAMrE,aAClBC,OAAQoE,EAAMpE,WAGH,SAAS4R,EAAT,GAGmG,IAFrEX,EAEoE,EAFpEA,QACAY,EACoE,EADpEA,WAEnC3R,EAAM4R,UAAQC,WACpB,EAaIlF,IAZAlL,EADJ,EACIA,OACAoK,EAFJ,EAEIA,UACAhL,EAHJ,EAGIA,SACAiL,EAJJ,EAIIA,YACAG,EALJ,EAKIA,UACAC,EANJ,EAMIA,aACAC,EAPJ,EAOIA,UACAC,EARJ,EAQIA,aACAC,EATJ,EASIA,QACAC,EAVJ,EAUIA,WACAC,EAXJ,EAWIA,QACAC,EAZJ,EAYIA,WAGJ,EAAsElL,YAASmQ,GAAxE5R,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,OAAQsD,EAA3B,EAA2BA,QAASC,EAApC,EAAoCA,WAAYI,EAAhD,EAAgDA,UAAW8B,EAA3D,EAA2DA,QAE3D,SAASuM,EAASlI,GACd,IACIlI,EADG4C,EAAesF,EAAftF,KAAMkE,EAASoB,EAATpB,MAETuJ,EAAM,GACV,OAAQzN,GACJ,IAAK,QAGDyN,GAFArQ,EAAQ,IAAIiG,KAAKa,EAAQ+E,MACb,IAAI5F,MAAK,IAAIA,MAAOqK,gBACZ,uCAAyC,GAC7D,MACJ,IAAK,aAEDD,GADArQ,EAAQ,IAAIiG,KAAKsE,EAAY,IAAMzD,IACrB,IAAIb,KAAS,uCAAyC,GACpE,MACJ,IAAK,MACDoK,EAAM,IAAIpK,KAAKa,EAAQ+E,KAAe,IAAI5F,KAAKsE,EAAYsB,KAAe,yCAA2C,GACrH,MACJ,IAAK,WACD7L,EAAQ,IAAIiG,KAAKsE,EAAY,IAAME,GAEnC4F,EADY,IAAIpK,KAAK0E,EAAU,IAAM7D,GACzB9G,EAAQ,yCAA2C,GAIvEkI,EAAQqI,kBAAkBF,GA3C+E,SA8C9FG,IA9C8F,2EA8C7G,0CAAAjS,EAAA,sDACUkS,EAAOzJ,SAAS0J,eAAe,QADzC,cAEuBD,EAAKE,UAF5B,IAEI,2BACIP,EAD8B,SAFtC,iCAMSK,EAAKG,gBANd,uBAOQH,EAAKI,iBAPb,mBAQe,GARf,cAWU7Q,EAAQgG,YAAY,IAAIC,KAAKsE,EAAY,IAAME,KACjDxK,EAAM+F,YAAY,IAAIC,KAAK0E,EAAU,IAAME,OAGnC7K,IACRC,EAAMD,EAAQ,GAGlBiQ,GAAW,GACL/R,EAAO,IAAIuH,IAAWrH,EAAOM,UAAUyF,WAAYhF,EAAUY,EAAQC,EAAOC,GApBtF,UAqB0BhC,YAAcC,EAAMC,EAAYC,EAAQyF,EAASvF,GArB3E,WAqBUwS,EArBV,OAsBIb,GAAW,IAEPa,EAxBR,wBAyBQnJ,YAAcrJ,EAAII,UAAUyF,YAzBpC,UA0B0BhG,EAAW4S,kCAAkC,IA1BvE,QA0BcC,EA1Bd,OA2BQrP,EAAWD,EAAU3B,EAASiR,EAAMjQ,oBACpCgB,EAAUzD,EAAII,UAAUyF,WAAYjG,GA5B5C,6CA9C6G,sBA8E7G,OACI,uBAAM+S,SAAUT,EAAcxO,GAAG,OAAjC,UACI,sBAAKoG,UAAU,6CAAf,UACI,cAAC+D,EAAD,CAAQ3C,SAAUW,EAAWrD,MAAO/G,EAAQgM,IAAKrK,IACjD,cAACkI,EAAD,IACA,cAACR,EAAD,CAAWI,SAAUY,EAAatD,MAAO3H,IACzC,cAACgM,EAAD,CACInD,MAAOkJ,IACP9F,KAAMb,EACNc,WAAYb,EACZc,KAAMb,EACNc,WAAYb,IAEhB,cAACS,EAAD,CACInD,MAAO2D,IACPP,KAAMT,EACNU,WAAYT,EACZU,KAAMT,EACNU,WAAYT,QAGb,OAAN1M,QAAM,IAANA,OAAA,EAAAA,EAAQ+S,WACL,cAAC3B,EAAD,CAAepH,UAAU,0BACV8D,QAASsE,EACT/N,KAAK,SACLoH,SAAUwF,EAHzB,qBAIE,qCACE,oBAAIjH,UAAU,mBACd,cAACgJ,GAAD,IACA,cAACC,GAAD,U,YCvHdtB,EAAc,SAAAvN,GAAK,MAAK,CAC1Bd,QAASc,EAAMd,QACfC,WAAYa,EAAMb,WAClB2P,UAAW9O,EAAMqB,UAAYgF,IAC7B1K,WAAYqE,EAAMrE,aAClBC,OAAQoE,EAAMpE,SACd+E,cAAeX,EAAMW,cACrBO,iBAAkBlB,EAAMkB,iBACxBT,cAAeT,EAAMS,gBAGV,SAASsO,EAAT,GAG0F,IAAD,IAFpElC,EAEoE,EAFpEA,QACAY,EACoE,EADpEA,WAGhC,EAAoD/F,wBAASF,GAA7D,mBAAOwH,EAAP,KAA2BC,EAA3B,KACA,EAAgG7R,YAASmQ,GAAjG5R,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,OAAQsD,EAA5B,EAA4BA,QAASC,EAArC,EAAqCA,WAAY2P,EAAjD,EAAiDA,UAAW5N,EAA5D,EAA4DA,iBAAkBT,EAA9E,EAA8EA,cAHsB,4CAqBpG,4BAAA1E,EAAA,6DACI0R,GAAW,GADf,SAE4B9R,EAAWuT,eAAetT,EAAOM,UAAWiT,IAAiB5Q,oBAFzF,OAEU6Q,EAFV,OAGIH,EAAsBG,GACtB3B,GAAW,GACX1M,IAAMuN,QAAQ,sBALlB,4CArBoG,sBA6BpG,OAxBAvC,qBAAU,WACFiD,GACArT,EAAW0T,mBAAmBL,EAAoBM,KAAuBtJ,MACrE,SAAAuJ,GACQA,EAAOjL,MAAMkL,IACbzO,IAAMC,MAAM,oBAEZ7B,EAAWD,EAAUiQ,KACrBpO,IAAMuN,QAAQ,6CAM/B,CAACU,IAWA,qCACI,sBAAKpJ,UAAU,kBAAf,UACI,cAACyG,EAAD,CAAMjH,IAAK1B,YAAgB,UAAD,OAAY9H,QAAZ,IAAYA,GAAZ,UAAYA,EAAQM,iBAApB,aAAY,EAAmByF,YACnD6D,MAAM,sBACZ,cAAC+G,EAAD,CAASC,QAAO,OAAE5Q,QAAF,IAAEA,GAAF,UAAEA,EAAQM,iBAAV,aAAE,EAAmByF,WAAYiE,UAAU,sBAE/D,sBAAKA,UAAU,2BAAf,UACI,wBAAQA,UAAU,QAAlB,qBACA,0CAAQjD,OAAOzD,GAAS6L,QAAQ,MAChC,wBACI9K,KAAK,SACLyJ,QAAS,WACLxI,IACAT,EAAc,OAElBmF,UAAU,qLANd,yBAUQ,OAANhK,QAAM,IAANA,OAAA,EAAAA,EAAQ+S,YACN,cAAC3B,EAAD,CACI/M,KAAK,SAASyJ,QAnDkE,2CAoDhF9D,UAAW,uEAAyEkJ,EAAY,UAAY,IAC5GzH,SAAUwF,EAHd,2BCtEpB,IAAM4C,GAAe,SAAAzP,GAAK,MAAK,CAACqB,QAASrB,EAAMqB,QAASsF,WAAY3G,EAAM2G,aAE3D,SAASiI,KACpB,MAA8BxR,YAASqS,IAAhCpO,EAAP,EAAOA,QAASsF,EAAhB,EAAgBA,WAChB,OACI,qBAAKf,UAAU,mCAAf,SACI,yBACIpG,GAAG,UACHY,KAAK,UACLwF,UAAU,8HACVmB,aAAc1F,EACd2F,SAAU,SAAAlG,GAAC,OAAI6F,EAAW7F,EAAEgF,OAAOxB,QALvC,UAOI,wBAAQA,MAAO+B,IAAiBgB,UAAU,EAA1C,qBACA,wBAAQ/C,MAAO6B,IAAf,SAAgCA,MAEhC,wBAAQ7B,MAAO8B,IAAiBsJ,QAAQ,EAAxC,SAA+CtJ,MAC/C,wBAAQ9B,MAAO4B,IAAewJ,QAAQ,EAAtC,SAA6CxJ,W,4CChBzByJ,Y,2BCO9BpC,GAAc,SAAAvN,GAAK,MAAK,CAC1BD,WAAYC,EAAMD,WAClBU,cAAeT,EAAMS,cACrBY,QAASrB,EAAMqB,UAGbuO,GAAMpL,SAASC,cAAc,OAE7BoL,GAAkB,SAAC9P,GACrB,IAAMwF,EAASf,SAASC,cAAc,OAChCqL,EAAItL,SAASC,cAAc,KAC3BsL,EAAMvL,SAASC,cAAc,OACnCsL,EAAIpD,IAAM5M,EAAWoE,KACrB4L,EAAInK,UAAY,wBAChBkK,EAAE/J,UAAYhG,EAAWK,KACzB0P,EAAElK,UAAY,eACdL,EAAOK,UAAY,wEACnBL,EAAOyK,QAAU,WACb/L,KAAKgM,eAAe,CAACC,OAAQnQ,IAC7BkE,KAAKkM,SAET5K,EAAOR,YAAYgL,GACnBxK,EAAOR,YAAY+K,GACnBF,GAAI7K,YAAYQ,IAYL,SAASsJ,KACpB,MAAiCzR,YAASmQ,IAAnC9M,EAAP,EAAOA,cAAeY,EAAtB,EAAsBA,QAChB+O,EAAcC,mBAAQ,iBAAM,CAC1BC,8BACAC,gCAAqB,CAAC1U,QAASwF,IAC/BmP,+BACAC,2BAAgB,CAAC5U,QAASwF,OAE9B,CAACA,IAeL,OAZA0K,qBACI,WACI,IAAM9L,EAAOmB,aAAarB,WAC1B,GAAIE,EAAM,CACN,IAAMyQ,EAAqBN,EAAYO,MAAK,SAAAC,GAAC,OAAIA,EAAExQ,OAASH,KACxDyQ,GACAjQ,EAAciQ,MAI1B,CAACjQ,EAAe2P,IAEb,cAACpD,EAAD,CACHpH,UAAU,0BACV3F,KAAK,SACLyJ,QAAS,kBAnCE,SAAC0G,EAAoB3P,GACpCmP,GAAI7J,UAAY,GADgD,oBAEhDqK,GAFgD,IAEhE,2BAA6B,CAAC,IAAnBQ,EAAkB,QACzBf,GAAgBe,IAH4C,8BAKhE3M,KAAK,CAACG,QAAS,GAAIqB,QAASmK,GAAKhK,UAAW,gBACvCI,KAAKvF,GA6BSoQ,CAAWT,EAAa3P,IAHpC,qBCrEI,SAASqQ,KACpB,OAAQ,sBAAKlL,UAAU,uCAAf,UACJ,kEACA,uBACA,uDCOR,IAAM2H,GAAc,SAAAvN,GAAK,MAAK,CAC1Bd,QAASc,EAAMd,QACfC,WAAYa,EAAMb,WAClBG,QAASU,EAAMV,QACfC,UAAWS,EAAMT,UACjBG,aAAcM,EAAMN,aACpBC,aAAcK,EAAML,aACpB0B,QAASrB,EAAMqB,QACfzF,OAAQoE,EAAMpE,SACdD,WAAYqE,EAAMrE,eAGP,SAASoV,KACpB,MAA4G3T,YAASmQ,IAA9G3R,EAAP,EAAOA,OAAQD,EAAf,EAAeA,WAAYuD,EAA3B,EAA2BA,QAASC,EAApC,EAAoCA,WAAYG,EAAhD,EAAgDA,QAASC,EAAzD,EAAyDA,UAAWG,EAApE,EAAoEA,aAAcC,EAAlF,EAAkFA,aAAc0B,EAAhG,EAAgGA,QADzD,4CA8CvC,WAA8B7B,GAA9B,iBAAAzD,EAAA,sEAC0ByC,YAAgBgB,EAAIF,EAAQE,GAAK7D,EAAYC,EAAQyF,GAD/E,mDAGkC1F,EAAWqV,WAAWpV,EAAOM,UAAWoT,KAH1E,+BAGoG/Q,mBAAtF0S,EAHd,oBAIiCtV,EAAWuV,eAAe,IAAInU,YAAUyC,GAAK8P,KAJ9E,QAIc6B,EAJd,OAKQhS,EAAW8R,GACX1R,EAAUC,EAAI+C,YAAsB4O,EAAWzV,OANvD,6CA9CuC,kEAwDvC,WAA4B8D,GAA5B,2BAAAzD,EAAA,+DACgCuD,EAAQE,GAA7BjC,EADX,EACWA,OAAQyF,EADnB,EACmBA,UACTG,EAAM,IAAIM,KACV2N,EAAalS,EAHvB,SAI0BL,YAAcW,EAAIF,EAAQE,GAAK7D,EAAYC,EAAQyF,GAJ7E,mDAMkC1F,EAAWqV,WAAWpV,EAAOM,UAAWoT,KAN1E,wBAMoG/Q,mBAAtF0S,EANd,UAOcI,EAAe9T,GAAU0T,EAAaG,GAC5CjS,EAAWD,EAAU3B,EAASyF,GAC9BzD,EACIC,EADK,YAAC,eAGCF,EAAQE,IAHV,IAIDwD,UAAWqO,EACXxN,YAAaL,YAAYL,GACzBS,OAAQG,OAfxB,6CAxDuC,kEA6EvC,WAA4BvE,EAAY8R,GAAxC,SAAAvV,EAAA,+DACSuV,GADT,qCAC6BtN,cAD7B,mDAEQtE,EAAaF,GAFrB,4CA7EuC,sBAmFvC,OA/EAuM,qBAAU,WAAO,IAAD,IACZpM,IACA,IAAM4R,EAAehQ,KAAKC,MAAMJ,aAAa9B,SAAW,MAClDkS,GAAyB,OAAZD,QAAY,IAAZA,GAAA,UAAAA,EAAelQ,UAAf,sBAA0BzF,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAQM,iBAAlC,aAA0B,EAAmByF,cAAe,GACzE8P,EAAWxP,OAAOoD,SAASqM,KAAKC,UAAU,GAEhD,GAAIF,EACA,IACI,IAAI1U,YAAU0U,GACdD,EAAWC,QAAYjK,EACzB,MAAO1G,GACLC,IAAMC,MAAM,8DAXR,eAeDxB,GACP,GAAIgS,EAAWI,eAAepS,GAAK,CAE/B,IAAIqS,OAAKrK,EACT,IACIqK,EAAK,IAAI9U,YAAUyC,GACrB,MAAOsB,GACLC,IAAMC,MAAMF,EAAEgR,QAAUtS,GAIxBqS,GACAlW,EAAWuV,eAAe,IAAInU,YAAUyC,IAAKwG,MAAK,SAAAuJ,IAC9C,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAQ7T,MACR6D,EAAUC,EAAI+C,YAAsBgN,EAAO7T,OAEvC8D,IAAOiS,GACP1Q,IAAMC,MAAM,mEAjBpC,IAAK,IAAMxB,KAAMgS,EAAa,EAAnBhS,KAyBZ,IAuCI,gCACH,wBAAQoG,UAAU,wCAAlB,yBACO,OAANhK,QAAM,IAANA,OAAA,EAAAA,EAAQ+S,YAAaoD,OAAOlV,KAAKyC,GAAS0S,OAAS,EAChDD,OAAOE,QAAQ3S,GACV4S,MAAK,kBAAIC,EAAJ,+CAAsC3U,MAAQ2U,EAAQ3U,SAC3D4U,KAAI,mCAAE5S,EAAF,KAAM9D,EAAN,YACD,cAACuP,EAAD,CAAiBG,eAAgB,SAACxH,GAAD,OAAYrE,EAAUC,EAAD,YAAC,eAAQF,EAAQE,IAAjB,IAAsBoE,aACpE0H,WAAY,kBA1FG,2CA0FG+G,CAAe7S,IAAK6L,SAAU,kBA1FjC,2CA0FuCiH,CAAa9S,IACnEA,GAAIA,EAAI9D,KAAMA,EAAMwP,UAAWtP,EAAOM,UAAUyF,WAChDwJ,aAAc,kBA5FC,6CA4FKA,CAAa3L,KAH5BA,MAKrB,cAACsR,GAAD,OChHZ,IAAMvD,GAAc,SAAAvN,GAAK,MAAK,CAC1BpE,OAAQoE,EAAMpE,WAGH,SAAS2W,KACpB,IAAO3W,EAAUwB,YAASmQ,IAAnB3R,OACP,EAA8B8L,oBAAS,GAAvC,mBAAOmF,EAAP,KAAgBY,EAAhB,KAEA,OACI,sBAAK7H,UAAU,uEAAf,UACI,sBAAKA,UAAU,OAAf,UACI,cAACmE,EAAD,CAASC,QAAS6C,KACX,OAANjR,QAAM,IAANA,OAAA,EAAAA,EAAQ+S,YACT,qCACI,cAACI,EAAD,CAASlC,QAASA,EAASY,WAAYA,IACvC,0BAGJ,cAACD,EAAD,CAAkBX,QAASA,EAASY,WAAYA,OAEpD,cAACsD,GAAD,OCzBG,WAA0B,iCCSnCxD,I,OAAc,SAAAvN,GAAK,MAAK,CAC1BpE,OAAQoE,EAAMpE,SACdyF,QAASrB,EAAMqB,QACf1F,WAAYqE,EAAMrE,aAClBwD,WAAYa,EAAMb,WAClBqT,WAAYxS,EAAMwS,WAClB7R,cAAeX,EAAMW,cACrBO,iBAAkBlB,EAAMkB,oBAgDbuR,OA7Cf,WACI,MAQIrV,YAASmQ,IAPT3R,EADJ,EACIA,OACAyF,EAFJ,EAEIA,QACA1F,EAHJ,EAGIA,WACAwD,EAJJ,EAIIA,WACAqT,EALJ,EAKIA,WACA7R,EANJ,EAMIA,cACAO,EAPJ,EAOIA,iBAGJ,EAAwBwR,sBAAW,SAAAC,GAAC,QAAMA,IAAG,GAApCC,EAAT,oBAqBA,OAnBA7G,qBAAU,WACN,GAAInQ,EAYA,OAXAA,EAAOiX,GAAG,WAAW,WACjBD,IACAjX,EAAWqV,WAAWpV,EAAOM,WACxB8J,MAAK,SAAAuJ,GAAM,OAAIpQ,EAAWoQ,EAAShR,uBACxCwC,IAAMuN,QAAQ,2BAElB1S,EAAOiX,GAAG,cAAc,WACpBD,IACA7R,IAAM+R,KAAK,+BAEfxF,WAAW3M,EAAe,GACnB,WACHO,OAGT,CAACvF,EAAYC,EAAQyF,EAASlC,EAAYqT,EAAY7R,EAAeO,IAGpE,gCACI,sBAAK0E,UAAW,oCAAhB,UACI,cAACmH,EAAD,CAAMJ,IAAKoG,KACX,qBAAKnN,UAAU,mCAAf,SAAkD,cAACgJ,GAAD,MAClD,cAAC2D,GAAD,OAEJ,cAAC,IAAD,CAAgBS,iBAAe,EAACpO,SAAS,cAAcqO,MAAO,IAC9D,cAACvG,EAAD,QCpDZwG,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC3L,EAAD,UACI,cAAC,GAAD,QAGRjD,SAAS0J,eAAe,U,2HCXb,SAASmF,EAAWxM,GAC/B,IAAOzB,EAA4ByB,EAA5BzB,IAAKkO,EAAuBzM,EAAvByM,QAASC,EAAc1M,EAAd0M,WACrB,OAAO,iCAAOA,EAAW,uBACrB,oBAAG3N,UAAU,YACVC,KAAMT,EAAK8H,IAAI,sBACfpH,OAAO,SAFV,UAEoBwN,EAAQ,cAAC,IAAD,CAAkB1N,UAAU,8B,yBCAjD,SAAerJ,EAA9B,4C,4CAAe,WAA+B0D,EAAcuT,EAA0B7X,EAAwBC,EAAgBC,EAAkBC,GAAjI,qBAAAC,EAAA,+EAE8BJ,EAAW8X,qBAFzC,cAEPD,EAAYE,gBAFL,OAE+DC,UACtE5S,IAAM+R,KAAK,6CAA8C,CAACc,UAAW,MACrEJ,EAAYnX,SAAWT,EAAOM,UAE1B+D,IAASzD,KACTgX,EAAYK,YAAY/X,GAPrB,SAUcF,EAAOkY,gBAAgBN,GAVrC,cAUDO,EAVC,iBAWiBpY,EAAWqY,mBAAmBD,EAAOE,aAXtD,eAWD7E,EAXC,OAYPrO,IAAMmT,UACNnT,IAAM+R,KAAK,kDAAmD,CAACc,UAAW,MAGpEO,EAAW7E,IAhBV,UAiBD3T,EAAW0T,mBAAmBD,EAAW+E,GAjBxC,eAkBD/O,EAAM1B,YAAgB,KAAM0L,GAClCrO,IAAMmT,UACNnT,IAAMuN,QACF,cAAC+E,EAAD,CACIjO,IAAKA,EACLkO,QAAQ,mBACRC,WAAY,sBAAeY,EAAf,MAA8BA,IAAa7E,IAAwB,4CAA8C,MAEjI,CAACsE,UAAW,KAAOQ,cAAc,IA1B9B,mBA4BA,GA5BA,yCA8BPC,QAAQC,KAAR,MAEAvT,IAAMC,MAAM,UAAY,KAAE8Q,SAhCnB,mBAiCA,GAjCA,2D,uoBCPFlT,EAAwB,+CCExBuQ,EAAiB,EAEjBG,EAAwB,YAGxB9S,EAA4B,EAC5BmC,EAA8B,EAC9BI,EAA4B,EAG5BuN,EAAqB,UAErBxE,EAAc,aACdoB,EAAc,QACdG,EAAc,SAEdqF,EAAQ,QACRvF,EAAM,MAEN/F,EAA0B,YAC1BC,EAA0B,YAC1BC,EAAyB,WACzBS,EAAyB,WAGzBwH,GAAmB,mBAC3BnI,EAA0B,QADC,cAE3BC,EAA0B,SAFC,cAG3BC,EAAyB,QAHE,cAI3BS,EAAyB,OAJE,K","file":"static/js/main.3913ec04.chunk.js","sourcesContent":["import {\n    Connection,\n    Keypair,\n    LAMPORTS_PER_SOL,\n    PublicKey,\n    SystemProgram,\n    Transaction,\n    TransactionInstruction\n} from \"@solana/web3.js\";\nimport BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CREATE_STREAM} from \"../constants\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\"\n\nexport default async function _createStream(data: StreamData, connection: Connection, wallet: Wallet, network?: string, pda: Keypair) {\n    const instruction = getCreateStreamInstruction(data, pda.publicKey)\n    const tx = new Transaction({feePayer: wallet.publicKey}).add(instruction);\n    return await sendTransaction(INSTRUCTION_CREATE_STREAM, tx, connection, wallet, network, pda);\n}\n\nfunction getCreateStreamInstruction(data: StreamData, pdaPub: PublicKey): TransactionInstruction {\n    const {sender, receiver} = data;\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver), //recipient\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: pdaPub, //PDA used for data\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId, //system program required to make a transfer\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useStore.getState().programId),\n        data: encodeInstructionData(data),\n    });\n}\n\n\nfunction encodeInstructionData(data: StreamData) {\n    const {amount, start, end} = data;\n    // Packed as little endian\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.ns64(\"start\"),\n        BufferLayout.ns64(\"end\"),\n        // N.B. JS Number has 53 significant bits, so numbers larger than\n        // 2^53 can be misrepresented\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const encoded = Buffer.alloc(layout.span);\n    layout.encode({\n            instruction: INSTRUCTION_CREATE_STREAM,\n            start: start,\n            end: end,\n            // amount: Number.MAX_SAFE_INTEGER // limited to 2^53 - 1 = 9007199254740991\n            amount: Math.trunc(amount * LAMPORTS_PER_SOL),\n        },\n        encoded\n    );\n\n    // UInt64 alternative is to remove the \"amount\" from layout encoding and\n    // use the following code:\n    // //encoded.writeBigUInt64LE(BigInt(\"18446744073709551615\"), 9)\n\n    return encoded;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_WITHDRAW_STREAM, STREAMFLOW_ACCOUNT_ID} from \"../constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\"\n\nexport default async function _withdrawStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {receiver} = data;\n    const instruction = getWithdrawStreamInstruction(account_id, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_WITHDRAW_STREAM, tx, connection, wallet, network)\n}\n\nfunction getWithdrawStreamInstruction(account_id, receiver) {\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(receiver),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            //needed to transfer the rent only during the final withdrawal transaction\n            pubkey: new PublicKey(STREAMFLOW_ACCOUNT_ID),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useStore.getState().programId),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const data = Buffer.alloc(layout.span);\n    //TODO - allow withdrawal of arbitrary (allowed) amount\n    layout.encode({\n            instruction: INSTRUCTION_WITHDRAW_STREAM,\n            amount: 0,// 0 = whole available amount is withdrawn.\n        },\n        data\n    );\n    return data;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CANCEL_STREAM} from \"../constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\"\n\nexport default async function _cancelStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {sender, receiver} = data;\n    const instruction = getCancelStreamInstruction(account_id, sender, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_CANCEL_STREAM, tx, connection, wallet, network)\n}\n\nfunction getCancelStreamInstruction(account_id, sender, receiver) {\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useStore.getState().programId),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([BufferLayout.u8(\"instruction\")]);\n    const data = Buffer.alloc(layout.span);\n\n    layout.encode({instruction: INSTRUCTION_CANCEL_STREAM}, data);\n\n    return data;\n}\n","const useBalanceStore = (set: Function) => ({\n    balance: 0,\n    setBalance: balance => set({balance})\n})\n\nexport default useBalanceStore","const useStreamStore = (set: Function, get: Function) => ({\n    streams: {},\n    addStream: (id: string, stream: Object) => set({streams: {...get().streams, [id]: stream}}),\n    deleteStream: (id: string) => {\n        const streams = {...get().streams}\n        delete streams[id]\n        set({streams})\n    },\n    clearStreams: () => set({streams: {}}),\n})\n\nexport default useStreamStore","import { Connection } from \"@solana/web3.js\"\nimport { toast } from \"react-toastify\"\nimport { WalletNotFoundError } from \"@solana/wallet-adapter-base\"\n\nlet memoizedWallet = {}\nlet memoizedConnection = {}\n\nconst getWallet = (type: ?Object, clusterUrl: ?string) => {\n    if (!clusterUrl || !type) {\n        return null\n    }\n    const key = clusterUrl + type.name\n    if (! memoizedWallet[key]) {\n        memoizedWallet = {[key]: type.adapter()}\n    }\n    return memoizedWallet[key]\n}\n\nconst getConnection = (clusterUrl: ?string) => {\n    if (!clusterUrl) {\n        return null\n    }\n    const key = clusterUrl\n    if (! memoizedConnection[key]) {\n        memoizedConnection = {[key]: new Connection(clusterUrl)}\n    }\n    return memoizedConnection[key]\n}\n\nconst walletStore = (set: Function, get: Function) => ({\n    // state\n    walletType: null,\n    wallet: () => {\n        const state = get()\n        return getWallet(state.walletType, state.clusterUrl())\n    },\n    connection: () => getConnection(get().clusterUrl()),\n\n    // actions\n    setWalletType: (walletType: ?Object) => {\n        get().persistStoreToLocalStorage()\n        set({walletType})\n    },\n    connectWallet: () => get().wallet()?.connect()\n        .catch((e) => {\n            get().setWalletType(null)\n            toast.error(e instanceof WalletNotFoundError ? 'Wallet extension not installed' : 'Wallet not connected, please try again')\n        })\n    ,\n    disconnectWallet: () => {\n        const state = get()\n        state.persistStoreToLocalStorage()\n        state.wallet()?.disconnect()\n    },\n})\n\nexport default walletStore","import create from 'zustand'\nimport { devtools } from 'zustand/middleware'\nimport useBalanceStore from './BalanceStore'\nimport useNetworkStore from './NetworkStore'\nimport useStreamStore from './StreamsStore'\nimport useWalletStore from './WalletStore'\n\nconst persistStoreToLocalStorage = () => {\n    const state = useStore.getState()\n    localStorage.cluster = state.cluster\n    localStorage.programId = state.programId\n    localStorage.walletType = state.walletType?.name\n\n    const existingStreams = JSON.parse(localStorage.streams || '{}')\n    const walletKey = state.wallet()?.publicKey\n    if (walletKey) {\n        // put current streams in localStorage without overwriting\n        // the exiting ones in other wallets or clusters\n        // localStorage.streams[state.cluster][walletKey] = state.streams\n        const mergedStreams = {\n            ...existingStreams,\n            [state.cluster]: {\n                ...existingStreams[state.cluster],\n                [walletKey.toBase58()]: state.streams\n            }\n        }\n        localStorage.streams = JSON.stringify(mergedStreams)\n    }\n}\n\nconst useStore = create(devtools((set, get) => ({\n    ...useBalanceStore(set, get),\n    ...useNetworkStore(set, get),\n    ...useStreamStore(set, get),\n    ...useWalletStore(set, get),\n    persistStoreToLocalStorage,\n})))\n\nwindow.addEventListener(\"beforeunload\", persistStoreToLocalStorage)\n\nexport default useStore","import {\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants\";\nimport BufferLayout from \"buffer-layout\";\nimport {LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport {u64} from \"@solana/spl-token\";\nimport {getUnixTime} from \"date-fns\";\nimport swal from \"sweetalert\";\nimport {Buffer} from 'buffer/';\nimport useStore from \"../Stores\"\n\nexport const publicKey = (property = \"publicKey\"): BufferLayout.Layout => {\n    return BufferLayout.blob(32, property);\n};\n\nexport const uint64 = (property = \"uint64\"): BufferLayout.Layout => {\n    return BufferLayout.blob(8, property);\n};\n\nconst DataLayout = BufferLayout.struct([\n    uint64(\"starttime\"),\n    uint64(\"endtime\"),\n    uint64(\"amount\"),\n    uint64(\"withdrawn\"),\n    publicKey(\"sender\"),\n    publicKey(\"recipient\"),\n]);\n\nexport function getDecodedAccountData(buffer: Buffer) {\n    const accountData = DataLayout.decode(buffer);\n\n    const start = Number(u64.fromBuffer(accountData.starttime));\n    const end = Number(u64.fromBuffer(accountData.endtime));\n    const amount = Number(u64.fromBuffer(accountData.amount)) / LAMPORTS_PER_SOL;\n    const withdrawn = Number(u64.fromBuffer(accountData.withdrawn)) / LAMPORTS_PER_SOL;\n    const sender = (new PublicKey(accountData.sender)).toBase58();\n    const recipient = (new PublicKey(accountData.recipient)).toBase58();\n\n    const status = getStreamStatus(Number(start), Number(end), getUnixTime(new Date())) //in milliseconds\n\n    return new StreamData(sender, recipient, amount, start, end, withdrawn, status);\n}\n\nexport function getExplorerLink(type: string, id: string): string {\n    return `https://explorer.solana.com/${type}/${id}?cluster=${useStore.getState().explorerUrl()}`;\n}\n\nexport function getStreamStatus(start: number, end: number, now: number) {\n    if (now < start) {\n        return STREAM_STATUS_SCHEDULED\n    } else if (now < end) {\n        return STREAM_STATUS_STREAMING\n    } else {\n        return STREAM_STATUS_COMPLETE\n    }\n}\n\nexport function StreamData(sender: string, receiver: string, amount: number, start: number, end: number, withdrawn?: number, status?: string, canceled_at: number) {\n    this.sender = sender;\n    this.receiver = receiver;\n    this.amount = amount;\n    this.start = start;\n    this.end = end;\n    this.withdrawn = withdrawn || 0;\n    this.status = canceled_at ? STREAM_STATUS_CANCELED : (status || STREAM_STATUS_SCHEDULED);\n    this.canceled_at = canceled_at;\n}\n\nexport function _swal(): Promise {\n    return swal({text: \"Are you sure?\", icon: \"warning\", buttons: true})\n}\n\nexport function copyToClipboard(value): void {\n    const el = document.createElement('textarea');\n    el.value = value;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport function streamCreated(id: string) {\n    const url = window.location.origin + \"#\" + id;\n    swal({\n        button: \"Copy Stream URL\",\n        icon: 'success',\n        title: \"Stream created!\",\n        //sweet alert accepts pure HTML Node, so some wrapping must be done https://sweetalert.js.org/guides/#using-dom-nodes-as-content\n        content:\n            {\n                element: \"a\",\n                attributes: {\n                    className: \"text-primary block truncate max-w-full\",\n                    href: url,\n                    target: \"_blank\",\n                    innerHTML: url\n                }\n            }\n    }).then((clicked) => {\n        if (clicked) {\n            copyToClipboard(url);\n            swal(\"Link copied to clipboard!\", \"Send it to the recipient!\", \"success\")\n        }\n    })\n}\n","import {clusterApiUrl} from \"@solana/web3.js\"\n\nexport const CLUSTER_LOCAL = 'local'\nexport const CLUSTER_DEVNET = 'devnet'\nexport const CLUSTER_TESTNET = 'testnet'\nexport const CLUSTER_MAINNET = 'mainnet-beta'\n\nconst clusterUrls = {\n    [CLUSTER_LOCAL]: () => 'http://127.0.0.1:8899',\n    [CLUSTER_DEVNET]: () => clusterApiUrl(CLUSTER_DEVNET),\n    [CLUSTER_TESTNET]: () => clusterApiUrl(CLUSTER_TESTNET),\n    [CLUSTER_MAINNET]: () => clusterApiUrl(CLUSTER_MAINNET),\n}\n\nconst programIds = {\n    [CLUSTER_LOCAL]: () => prompt(\"Program ID?\"),\n    [CLUSTER_DEVNET]: () => \"8tQZMH3NWtoiNDYwTpSZ3GVrRKbMVi2S5Xjy6UcbG5rR\",\n    [CLUSTER_TESTNET]: () => \"8tQZMH3NWtoiNDYwTpSZ3GVrRKbMVi2S5Xjy6UcbG5rR\",\n    [CLUSTER_MAINNET]: () => null, // TODO: publish the program to mainnet\n}\n\nconst useNetworkStore = (set: Function, get: Function) => ({\n    // state\n    cluster: localStorage.cluster || CLUSTER_DEVNET,\n    programId: programIds[localStorage.cluster || CLUSTER_DEVNET](),\n\n    // actions\n    clusterUrl: () => clusterUrls[get().cluster](),\n    explorerUrl: () => {\n        const cluster = get().cluster\n        return cluster === CLUSTER_LOCAL ? `custom&customUrl=${encodeURIComponent(get().clusterUrl)}` : cluster\n    },\n    setCluster: (cluster: string) => {\n        get().persistStoreToLocalStorage()\n        const programId = programIds[cluster]()\n        if (programId) {\n            set({cluster, programId})\n        }\n        else {\n            set({cluster: CLUSTER_DEVNET, programId: programIds[CLUSTER_DEVNET]()})\n        }\n    }\n})\n\nexport default useNetworkStore","export default function Recipient(props: { onChange: void, value: string }) {\n    return (\n        <div className=\"col-span-full\">\n            <label htmlFor=\"account\" className=\"block font-medium text-gray-100\">\n                Recipient Account\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"account\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    pattern=\"[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}\"\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    placeholder=\"Please double check the address\"\n                    aria-describedby=\"account-description\"\n                    required\n                />\n            </div>\n        </div>\n    )\n}","export default function SelectToken() {\n    return (\n        <div className=\"col-span-2 sm:col-span-1\">\n            <label htmlFor=\"token\" className=\"block font-medium text-gray-100\">\n                Token\n            </label>\n            <select\n                id=\"token\"\n                name=\"token\"\n                className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"                defaultValue=\"SOL\"\n            >\n                <option>SOL</option>\n                <option disabled>ETH - Coming soon️™</option>\n                <option disabled>BTC - Coming soon™</option>\n                <option disabled>USDC - Coming soon™</option>\n                <option disabled>Other tokens...</option>\n            </select>\n        </div>\n    )\n}\n","import {format} from \"date-fns\";\nimport {createContext, useContext, useState} from \"react\";\nimport {DATE_FORMAT} from \"../constants\";\n\nconst FormContext = createContext(undefined)\n\nexport function FormProvider(props) {\n    const now = new Date();\n\n    const [amount, setAmount] = useState(undefined);\n    const [receiver, setReceiver] = useState(undefined);\n    const [startDate, setStartDate] = useState(format(now, DATE_FORMAT));\n    const [startTime, setStartTime] = useState(\"\");\n    const [endDate, setEndDate] = useState(startDate);\n    const [endTime, setEndTime] = useState(\"\");\n\n    return <FormContext.Provider value={{\n        amount,\n        setAmount,\n        receiver,\n        setReceiver,\n        startDate,\n        setStartDate,\n        startTime,\n        setStartTime,\n        endDate,\n        setEndDate,\n        endTime,\n        setEndTime\n    }}>{props.children}</FormContext.Provider>\n}\n\nexport function useFormContext() {\n    return useContext(FormContext)\n}","import {add, format} from \"date-fns\";\nimport {DATE_FORMAT, END, TIME_FORMAT, TIME_SUFFIX} from \"../constants\";\nimport {Dispatch, SetStateAction} from \"react\";\nimport {useFormContext} from \"../Contexts/FormContext\";\n\nexport default function DateTime(props: { title: string, date: string, updateDate: Dispatch<SetStateAction<string>>, time: string, updateTime: Dispatch<SetStateAction<string>> }) {\n    const {title, date, updateDate, time, updateTime} = props;\n    const {startDate, startTime} = useFormContext();\n\n    function getMinDate(): string {\n        if (title === END && startDate) {\n            return format(new Date(startDate + TIME_SUFFIX), DATE_FORMAT);\n        } else {\n            return format(new Date(), DATE_FORMAT);\n        }\n    }\n\n    function initializeTime() {\n        const now = format(add(new Date(), {minutes: 1}), TIME_FORMAT);\n\n        if (title === END) {\n            const minEndDate = startDate ? (new Date(startDate + TIME_SUFFIX)) : (new Date())\n\n            if (!startDate || !date || date < startDate) {\n                updateDate(format(minEndDate, DATE_FORMAT))\n            }\n\n            if (startDate && startDate === date && time <= startTime) {\n                updateTime(format(add(new Date(startDate + 'T' + startTime), {minutes: 5}), TIME_FORMAT));\n            } else if (!startTime) {\n                updateTime(now)\n            }\n        } else if (!time || time < now) {\n            updateTime(now)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"col-span-3 sm:col-span-1\">\n                <label htmlFor={title}\n                       className=\"block font-medium text-gray-100 capitalize\">{title} Date</label>\n                <div className=\"mt-1\">\n                    <input type=\"date\" name={title} id={title}\n                           value={date}\n                           min={getMinDate()}\n                           max={format(add(new Date(), {years: 1}), DATE_FORMAT)}\n                           onFocus={initializeTime}\n                           onClick={initializeTime}\n                           onChange={e => updateDate(e.target.value)}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={title + `-description`} required/>\n                </div>\n            </div>\n            <div className=\"col-span-2 sm:col-span-1\">\n                <label htmlFor={title + `_time`}\n                       className=\"block font-medium text-gray-100 capitalize\">{title} time</label>\n                <div className=\"mt-1\">\n                    <input type=\"time\" name={title + `_time`} id={title + `_time`}\n                           value={time}\n                           onFocus={initializeTime}\n                           onClick={initializeTime}\n                           onChange={e => updateTime(e.target.value)}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={title + `_time-description`} required/>\n                </div>\n            </div>\n        </>\n    )\n}","export default function Amount(props: { onChange: void, max: number, value: number }) {\n    return (\n        <div className=\"col-span-3 sm:col-span-1\">\n            <label htmlFor=\"amount\" className=\"block font-medium text-gray-100\">\n                Amount\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    step=\"any\"\n                    autoFocus={true}\n                    type=\"number\"\n                    name=\"amount\"\n                    id=\"amount\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    min={0}\n                    max={props.max || Number.MAX_SAFE_INTEGER}\n                    placeholder=\"0.00\"\n                    aria-describedby=\"amount-description\"\n                    required={true}\n                />\n            </div>\n        </div>\n    )\n}\n","export default function Curtain(props: { visible: boolean }) {\n    return (\n        <div className={`fixed top-0 bottom-0 left-0 right-0 bg-gray-900 opacity-90 z-10 ${props.visible ? \"block\" : \"hidden\"}`}>\n            <div className=\"loader\"> </div>\n        </div>\n    )\n}","export default function Badge(props: { type: string, color: string }) {\n    const {type, color } = props;\n    return <div className=\"inline\">\n        <span\n            className={`align-top px-2.5 py-0.5 rounded-full text-xs font-medium bg-${color}-100 text-${color}-800 capitalize`}>\n            <svg className={`mr-1 -ml-1 inline align-baseline h-2 w-2 text-${color}-400`} fill=\"currentColor\" viewBox=\"0 0 8 8\">\n              <circle cx={4} cy={4} r={3}/>\n            </svg>\n            {type}\n      </span></div>\n}","export default function ActionButton(props: { title: string, action: void, color: string }) {\n    const {title, action, color} = props;\n\n    return (\n        <button onClick={action}\n                className={`rounded-md text-sm bg-${color}-500 hover:bg-${color}-700 active:bg-${color}-900 text-white py-1 px-2`}>\n            {title}\n        </button>\n    )\n}","import {memo} from 'react'\nimport {format, fromUnixTime} from \"date-fns\";\n\nfunction Duration(props: { start: number, end: number }) {\n    return (\n        <dt className=\"col-span-full text-center\">\n            {(format(fromUnixTime(props.start), \"yyyy-MM-dd HH:mm\"))} &ndash; {(format(fromUnixTime(props.end), \"yyyy-MM-dd HH:mm\"))}\n        </dt>\n    )\n}\n\nexport default memo(Duration);","export default function Progress(props: { title: string, value: number, max: number, rtl?: boolean }) {\n    let {title, value, max, rtl} = props;\n    value = Number(value).toFixed(2);\n    max = Number(max).toFixed(2);\n    return (\n        <>\n            <dt>{title}</dt>\n            <div className=\"rounded-sm h-3 bg-gray-900 w-full my-auto\">\n                <div\n                    className={\"max-w-full bg-gradient-to-r from-primary to-secondary rounded-sm h-full \" + (rtl ? \"float-right\" : \"\")}\n                    style={{width: value / max * 100 + \"%\"}}>\n                </div>\n            </div>\n            <label className=\"ml-2 text-right truncate\">◎{value}<small className=\"text-gray-400\">/{max}</small></label>\n        </>\n    )\n}","import Badge from \"./Stream/Badge\";\nimport ActionButton from \"./Stream/ActionButton\";\nimport {getUnixTime} from \"date-fns\";\nimport Duration from \"./Stream/Duration\";\nimport Progress from \"./Stream/Progress\";\nimport {useEffect, useState} from \"react\";\nimport {StreamData, getExplorerLink} from \"../utils/helpers\";\nimport {XIcon} from \"@heroicons/react/outline\";\nimport {\n    EXPLORER_TYPE_ADDR,\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COLOR,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants\";\nimport {Address, Link} from \"./index\";\n\nexport default function Stream(props: { data: StreamData, myAddress: string, id: string, removeStream: void, onStatusUpdate: void, onCancel: void, onWithdraw: void }) {\n    const {start, end, withdrawn, amount, receiver, sender, status} = props.data;\n    const {myAddress, removeStream, onStatusUpdate, onCancel, onWithdraw, id} = props;\n\n    const color = STREAM_STATUS_COLOR[status];\n\n    const [streamed, setStreamed] = useState(getStreamed(start, end, amount))\n    const [available, setAvailable] = useState(streamed - withdrawn);\n\n    const showWithdraw = ((status === STREAM_STATUS_STREAMING || (status === STREAM_STATUS_COMPLETE && withdrawn < amount)) && myAddress === receiver);\n    const showCancel = (status === STREAM_STATUS_STREAMING || status === STREAM_STATUS_SCHEDULED) && myAddress === sender\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setStreamed(getStreamed(start, end, amount));\n            setAvailable(streamed - withdrawn);\n            const tmpStatus = updateStatus(status, start, end);\n            if (tmpStatus !== status) {\n                onStatusUpdate(tmpStatus)\n            }\n        }, 1000)\n        return () => clearInterval(interval);\n    });\n\n    return (\n        <dl className={`text-white my-4 grid gap-y-4 gap-x-2 grid-cols-3 p-4 bg-${color}-300 bg-opacity-10 hover:bg-opacity-20 shadow rounded-lg`}>\n            <div className=\"col-span-full\">\n                <Badge className=\"inline\" type={status} color={color}/>\n                <button onClick={removeStream}\n                        className={`p-1.5 h-6 w-6 float-right align-top rounded-sm hover:bg-${color}-100 focus:outline-none focus:ring-1`}>\n                    <XIcon className=\"float-right w-3 h-3\"/>\n                </button>\n            </div>\n            <Duration start={start} end={end}/>\n            <Link url={getExplorerLink(EXPLORER_TYPE_ADDR, id)} title={\"ID\"}/>\n            <Address address={id} className=\"col-span-2 text-sm text-gray-400\"/>\n            <Link url={getExplorerLink(EXPLORER_TYPE_ADDR, receiver)} title={\"Recipient\"}/>\n            <Address address={receiver} className=\"col-span-2 text-sm text-gray-400\"/>\n            <Progress title=\"Withdrawn\" value={withdrawn} max={amount}/>\n            {status === STREAM_STATUS_CANCELED &&\n            <Progress title=\"Returned\" value={amount - withdrawn} max={amount} rtl={true}/>}\n            {status !== STREAM_STATUS_CANCELED &&\n            <>\n                <Progress title=\"Streamed\" value={streamed} max={amount}/>\n                {showWithdraw &&\n                (<>\n                    <dt>Available<br/>\n                        <sup className=\"text-xs text-gray-300 align-top\">for withdrawal</sup></dt>\n                    <dd className=\"col-span-2\">◎{available.toFixed(2)}</dd>\n                    <ActionButton title=\"Withdraw\" action={onWithdraw}\n                                  color={STREAM_STATUS_COLOR[STREAM_STATUS_STREAMING]}/>\n                </>)}\n                {showCancel && <ActionButton title={\"Cancel\"} action={onCancel}\n                                             color={STREAM_STATUS_COLOR[STREAM_STATUS_CANCELED]}/>}\n            </>}\n        </dl>\n    )\n}\n\nexport function getStreamed(start: number, end: number, amount: number, timestamp?: number) {\n    timestamp = timestamp || getUnixTime(new Date());\n\n    if (timestamp < start) return 0\n    if (timestamp > end) return amount;\n\n    return (timestamp - start) / (end - start) * amount;\n}\n\nfunction updateStatus(status: string, start: number, end: number) {\n    const now = getUnixTime(new Date());\n    if (status === STREAM_STATUS_SCHEDULED && now >= start) {\n        return STREAM_STATUS_STREAMING;\n    } else if (status === STREAM_STATUS_STREAMING && now >= end) {\n        return STREAM_STATUS_COMPLETE;\n    } else {\n        return status;\n    }\n}\n","import {Link} from \"./index\";\n\nexport default function Footer() {\n    return (<footer className=\"mt-40 mb-4 text-center text-sm font-mono text-gray-400\">\n        <img src=\"https://solana.com/branding/horizontal/logo-horizontal-gradient-dark.png\"\n             className=\"w-40 mx-auto my-2\" alt=\"Solana logo\" loading=\"lazy\"/>\n        <small>\n            <Link url=\"https://streamflow.finance\" title=\"StreamFlow\" hideIcon={true}/>\n            @ <Link url=\"https://solana.com/solanaszn\" title=\"SolanaSZN\" hideIcon={true}/>\n        </small>\n    </footer>)\n}","export default function Logo(props: {src: string}){\n    return (\n        <div className=\"mb-8 text-white\">\n            <img src={props.src} alt=\"StreamFlow Finance logo\" className=\"w-24 mx-auto\"/>\n            <h1 className=\"text-6xl text-center\">Stream<strong>Flow</strong></h1>\n        </div>\n    )\n}","export default function ButtonPrimary({children, className, ...rest}) {\n    const baseClasses = \"block mx-auto px-8 py-4 bg-gradient-to-br from-primary via-primary to-secondary border-transparent font-medium rounded shadow-sm text-white hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary \"\n    return (\n        <button className={baseClasses + className} {...rest}>\n            {children}\n        </button>\n    )\n}\n","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function Link(props: { url: string, title?: string, className?: string, hideIcon?: boolean}) {\n    const {url, title, className, hideIcon} = props;\n    const icon = hideIcon || <sup><ExternalLinkIcon className=\"w-3 h-3 inline\"/></sup>\n\n    return (\n        <strong className={\"text-gray-300 hover:text-white \" + className}>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {title || url} {icon}\n            </a>\n        </strong>\n    )\n}","import {copyToClipboard} from \"../utils/helpers\";\nimport {DuplicateIcon, CheckIcon} from \"@heroicons/react/outline\";\nimport {useState} from \"react\";\n\nexport default function Address(props: { address: string, className: string }) {\n    const {address, className} = props;\n    const iconClassName = \"h-4 inline mr-1 cursor-pointer hover:opacity-80 align-text-bottom \";\n    const [copied, setCopied] = useState(false)\n\n    function copy() {\n        copyToClipboard(address);\n        setCopied(true);\n        setTimeout(() => {\n            setCopied(false)\n        }, 1000)\n    }\n\n    return (\n        <span className={\"block truncate \" + className}>\n            {copied\n                ? (<span className=\"text-green-300 mr-1\"><CheckIcon className={iconClassName}/><small>Copied!</small></span>)\n                : <DuplicateIcon className={iconClassName} onClick={copy}/>}\n            {address}</span>\n    )\n}\n\n\n","import {Amount, ButtonPrimary, DateTime, Recipient, SelectCluster, SelectToken, WalletPicker} from \"./index\";\nimport {useFormContext} from \"../Contexts/FormContext\";\nimport {getUnixTime} from \"date-fns\";\nimport {streamCreated, StreamData} from \"../utils/helpers\";\nimport {_createStream} from \"../Actions\";\nimport {Keypair, LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {START, END, TIME_SUFFIX} from \"../constants\";\nimport {Dispatch, SetStateAction} from \"react\";\nimport useStore from \"../Stores\"\n\nconst storeGetter = state => ({\n    balance: state.balance,\n    setBalance: state.setBalance,\n    addStream: state.addStream,\n    connection: state.connection(),\n    wallet: state.wallet(),\n})\n\nexport default function CreateStreamForm({\n                                             loading,\n                                             setLoading\n                                         }: { loading: boolean, setLoading: Dispatch<SetStateAction<boolean>> }) {\n    const pda = Keypair.generate();\n    const {\n        amount,\n        setAmount,\n        receiver,\n        setReceiver,\n        startDate,\n        setStartDate,\n        startTime,\n        setStartTime,\n        endDate,\n        setEndDate,\n        endTime,\n        setEndTime\n    } = useFormContext()\n\n    const {connection, wallet, balance, setBalance, addStream, cluster} = useStore(storeGetter)\n\n    function validate(element) {\n        const {name, value} = element;\n        let start;\n        let msg = '';\n        switch (name) {\n            case \"start\":\n                start = new Date(value + TIME_SUFFIX)\n                const now = new Date(new Date().toDateString())\n                msg = start < now ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"start_time\":\n                start = new Date(startDate + \"T\" + value);\n                msg = start < new Date() ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"end\":\n                msg = new Date(value + TIME_SUFFIX) < new Date(startDate + TIME_SUFFIX) ? \"Umm... end date before the start date?\" : \"\";\n                break;\n            case \"end_time\":\n                start = new Date(startDate + \"T\" + startTime);\n                const end = new Date(endDate + \"T\" + value);\n                msg = end < start ? \"Err... end time before the start time?\" : \"\";\n                break;\n            default:\n        }\n        element.setCustomValidity(msg);\n    }\n\n    async function createStream() {\n        const form = document.getElementById('form');\n        for (const elem of form.elements) {\n            validate(elem);\n        }\n\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return false;\n        }\n\n        const start = getUnixTime(new Date(startDate + \"T\" + startTime));\n        let end = getUnixTime(new Date(endDate + \"T\" + endTime));\n\n        // Make sure that end time is always AFTER start time\n        if (end === start) {\n            end = start + 1;\n        }\n\n        setLoading(true);\n        const data = new StreamData(wallet.publicKey.toBase58(), receiver, amount, start, end);\n        const success = await _createStream(data, connection, wallet, cluster, pda)\n        setLoading(false);\n\n        if (success) {\n            streamCreated(pda.publicKey.toBase58())\n            const fee = await connection.getMinimumBalanceForRentExemption(96)\n            setBalance(balance - amount - fee / LAMPORTS_PER_SOL);\n            addStream(pda.publicKey.toBase58(), data)\n        }\n    }\n\n    return (\n        <form onSubmit={createStream} id=\"form\">\n            <div className=\"my-4 grid gap-4 grid-cols-5 sm:grid-cols-2\">\n                <Amount onChange={setAmount} value={amount} max={balance}/>\n                <SelectToken/>\n                <Recipient onChange={setReceiver} value={receiver}/>\n                <DateTime\n                    title={START}\n                    date={startDate}\n                    updateDate={setStartDate}\n                    time={startTime}\n                    updateTime={setStartTime}\n                />\n                <DateTime\n                    title={END}\n                    date={endDate}\n                    updateDate={setEndDate}\n                    time={endTime}\n                    updateTime={setEndTime}\n                />\n            </div>\n            {wallet?.connected ?\n                <ButtonPrimary className=\"font-bold text-2xl my-5\"\n                               onClick={createStream}\n                               type=\"button\"\n                               disabled={loading}>Stream!</ButtonPrimary>\n                : <>\n                    <hr className=\"my-4 sm:hidden\"/>\n                    <SelectCluster/>\n                    <WalletPicker/>\n                </>}\n        </form>\n    );\n}\n","import {Address, ButtonPrimary, Link} from \"./index\";\nimport {getExplorerLink} from \"../utils/helpers\";\nimport {AIRDROP_AMOUNT, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {toast} from \"react-toastify\";\nimport {LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {Dispatch, SetStateAction, useEffect, useState} from \"react\";\nimport useStore from \"../Stores\"\nimport { CLUSTER_MAINNET } from \"../Stores/NetworkStore\"\n\nconst storeGetter = state => ({\n    balance: state.balance,\n    setBalance: state.setBalance,\n    isMainnet: state.cluster === CLUSTER_MAINNET,\n    connection: state.connection(),\n    wallet: state.wallet(),\n    connectWallet: state.connectWallet,\n    disconnectWallet: state.disconnectWallet,\n    setWalletType: state.setWalletType,\n})\n\nexport default function Account({\n                                    loading,\n                                    setLoading\n                                }: { loading: boolean, setLoading: Dispatch<SetStateAction<boolean>> }) {\n\n    const [airdropTxSignature, setAirdropTxSignature] = useState(undefined)\n    const { connection, wallet, balance, setBalance, isMainnet, disconnectWallet, setWalletType } = useStore(storeGetter)\n\n    useEffect(() => {\n        if (airdropTxSignature) {\n            connection.confirmTransaction(airdropTxSignature, TX_FINALITY_CONFIRMED).then(\n                result => {\n                    if (result.value.err) {\n                        toast.error('Airdrop failed!')\n                    } else {\n                        setBalance(balance + AIRDROP_AMOUNT)\n                        toast.success(\"Airdrop confirmed. Balance updated!\")\n                    }\n                }\n            )\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [airdropTxSignature])\n\n    async function requestAirdrop() {\n        setLoading(true);\n        const signature = await connection.requestAirdrop(wallet.publicKey, AIRDROP_AMOUNT * LAMPORTS_PER_SOL);\n        setAirdropTxSignature(signature);\n        setLoading(false);\n        toast.success(\"Airdrop requested!\")\n    }\n\n    return (\n        <>\n            <div className=\"mb-4 text-white\">\n                <Link url={getExplorerLink('address', wallet?.publicKey?.toBase58())}\n                      title=\"My Wallet Address\"/>\n                <Address address={wallet?.publicKey?.toBase58()} className=\"block truncate\"/>\n            </div>\n            <div className=\"mb-4 clearfix text-white\">\n                <strong className=\"block\">Balance</strong>\n                <span>◎{Number(balance).toFixed(4)}</span>\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        disconnectWallet()\n                        setWalletType(null)\n                    }}\n                    className=\"float-right items-center px-2.5 py-1.5 shadow-sm text-xs  font-medium rounded bg-gray-500 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n                >\n                    Disconnect\n                </button>\n                { wallet?.connected &&\n                    <ButtonPrimary\n                        type=\"button\" onClick={requestAirdrop}\n                        className={\"float-right mr-2 px-2.5 py-1.5 text-xs my-0 rounded active:bg-white\" + (isMainnet ? \" hidden\" : \"\")}\n                        disabled={loading}\n                    >\n                        Airdrop\n                    </ButtonPrimary>\n                }\n            </div>\n        </>\n    )\n}\n","import {CLUSTER_LOCAL, CLUSTER_DEVNET, CLUSTER_TESTNET, CLUSTER_MAINNET} from '../Stores/NetworkStore'\nimport useStore from \"../Stores\"\n\nconst networkStore = state => ({cluster: state.cluster, setCluster: state.setCluster})\n\nexport default function SelectCluster() {\n    const {cluster, setCluster} = useStore(networkStore)\n    return (\n        <div className=\"sm:absolute top-0 right-0 sm:p-4\">\n            <select\n                id=\"cluster\"\n                name=\"cluster\"\n                className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                defaultValue={cluster}\n                onChange={e => setCluster(e.target.value)}\n            >\n                <option value={CLUSTER_MAINNET} disabled={true}>mainnet</option>\n                <option value={CLUSTER_DEVNET}>{CLUSTER_DEVNET}</option>\n                {/* handy for developers, but not needed for the end user */}\n                <option value={CLUSTER_TESTNET} hidden={true}>{CLUSTER_TESTNET}</option>\n                <option value={CLUSTER_LOCAL} hidden={true}>{CLUSTER_LOCAL}</option>\n            </select>\n        </div>\n    )\n}\n","import {XIcon} from '@heroicons/react/outline'\nimport {Component} from \"react\";\n\n//could be functional component, but we decided to let it manage its own state (open/close)\nexport default class Banner extends Component {\n    state = {\n        hidden: false\n    }\n\n    render() {\n        return (\n            <div className={`relative bg-primary ${this.state.hidden && \"hidden\"}`}>\n                <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n                    <div className=\"pr-16 sm:text-center sm:px-16\">\n                        <p className=\"font-small text-white\">\n                            <b>{this.props.title}</b>\n                            &nbsp;\n                            <span className=\"hidden lg:inline\">{this.props.message}</span>\n                        </p>\n                    </div>\n                    <div\n                        className=\"absolute inset-y-0 right-0 pt-1 pr-1 flex items-start sm:pt-1 sm:pr-2 sm:items-start\">\n                        <button type=\"button\" onClick={() => this.setState({hidden: true})}\n                                className=\"flex p-2 rounded-md hover:bg-primary focus:outline-none focus:ring-2 focus:ring-white\"\n                        >\n                            <span className=\"sr-only\">Dismiss</span>\n                            <XIcon className=\"h-6 w-6 text-white\"/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import {useMemo, useEffect} from 'react'\nimport useStore from \"../Stores\"\nimport swal from \"sweetalert\"\nimport {\n    getPhantomWallet,\n    getSolflareWebWallet,\n    getSolflareWallet,\n    getSolletWallet,\n} from \"@solana/wallet-adapter-wallets\"\nimport ButtonPrimary from \"./ButtonPrimary\"\n\nconst storeGetter = state => ({\n    walletType: state.walletType,\n    setWalletType: state.setWalletType,\n    cluster: state.cluster,\n})\n\nconst div = document.createElement('div')\n\nconst addWalletOption = (walletType: Object) => {\n    const button = document.createElement('div')\n    const p = document.createElement('p')\n    const img = document.createElement('img')\n    img.src = walletType.icon\n    img.className = 'h-8 inline-block mr-4'\n    p.innerHTML = walletType.name\n    p.className = 'inline-block'\n    button.className = 'border-primary border cursor-pointer mb-4 p-4 text-primary rounded-md'\n    button.onclick = () => {\n        swal.setActionValue({cancel: walletType})\n        swal.close()\n    }\n    button.appendChild(img)\n    button.appendChild(p)\n    div.appendChild(button)\n}\n\nconst pickWallet = (walletTypes: Array, setWalletType: Function) => {\n    div.innerHTML = ''\n    for (const w of walletTypes) {\n        addWalletOption(w)\n    }\n    swal({buttons: {}, content: div, className: \"bg-gray-800\"})\n        .then(setWalletType)\n}\n\nexport default function WalletPicker() {\n    const {setWalletType, cluster} = useStore(storeGetter)\n    const walletTypes = useMemo(() => [\n            getPhantomWallet(),\n            getSolflareWebWallet({network: cluster}),\n            getSolflareWallet(),\n            getSolletWallet({network: cluster}),\n        ],\n        [cluster]\n    )\n\n    useEffect(\n        () => {\n            const type = localStorage.walletType\n            if (type) {\n                const restoredWalletType = walletTypes.find(w => w.name === type)\n                if (restoredWalletType) {\n                    setWalletType(restoredWalletType)\n                }\n            }\n        },\n        [setWalletType, walletTypes]\n    )\n    return <ButtonPrimary\n        className=\"font-bold text-2xl my-5\"\n        type=\"button\"\n        onClick={() => pickWallet(walletTypes, setWalletType)}\n    >\n        Connect\n    </ButtonPrimary>\n}\n","export default function EmptyStreams() {\n    return (<div className=\"mx-auto my-10 text-white text-center\">\n        <span>Your streams will appear here.</span>\n        <br/>\n        <span>Start streaming!</span>\n    </div>)\n}","import EmptyStreams from \"../Components/EmptyStreams\";\nimport {_swal, getDecodedAccountData} from \"../utils/helpers\";\nimport {Stream} from \"../Components\";\nimport {_cancelStream, _withdrawStream} from \"../Actions\";\nimport {getUnixTime} from \"date-fns\";\nimport {STREAM_STATUS_CANCELED, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport useStore from \"../Stores\"\nimport {toast} from \"react-toastify\";\nimport {useEffect} from \"react\";\n\nconst storeGetter = state => ({\n    balance: state.balance,\n    setBalance: state.setBalance,\n    streams: state.streams,\n    addStream: state.addStream,\n    deleteStream: state.deleteStream,\n    clearStreams: state.clearStreams,\n    cluster: state.cluster,\n    wallet: state.wallet(),\n    connection: state.connection(),\n})\n\nexport default function StreamsContainer() {\n    const {wallet, connection, balance, setBalance, streams, addStream, deleteStream, clearStreams, cluster,} = useStore(storeGetter)\n\n    //componentWillMount\n    useEffect(() => {\n        clearStreams()\n        const savedStreams = JSON.parse(localStorage.streams || '{}')\n        const newStreams = savedStreams?.[cluster]?.[wallet?.publicKey?.toBase58()] || {}\n        const streamID = window.location.hash.substring(1);\n\n        if (streamID) {\n            try {\n                new PublicKey(streamID);\n                newStreams[streamID] = undefined; // We're setting the data few lines below\n            } catch (e) {\n                toast.error(\"Stream doesn't exist. Please double check with the sender.\")\n            }\n        }\n\n        for (const id in newStreams) {\n            if (newStreams.hasOwnProperty(id)) {\n                //first, the cleanup\n                let pk = undefined\n                try {\n                    pk = new PublicKey(id);\n                } catch (e) {\n                    toast.error(e.message + id)\n                    //removeStream(id, true);\n                }\n\n                if (pk) {\n                    connection.getAccountInfo(new PublicKey(id)).then(result => {\n                        if (result?.data) {\n                            addStream(id, getDecodedAccountData(result.data));\n                        } else {\n                            if (id === streamID) {\n                                toast.error(\"Stream doesn't exist. Please double check with the sender.\")\n                            }\n                        }\n                    })\n                }\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    async function withdrawStream(id: string) {\n        const success = await _withdrawStream(id, streams[id], connection, wallet, cluster)\n        if (success) {\n            const newBalance = (await connection.getBalance(wallet.publicKey, TX_FINALITY_CONFIRMED)) / LAMPORTS_PER_SOL;\n            const streamData = await connection.getAccountInfo(new PublicKey(id), TX_FINALITY_CONFIRMED)\n            setBalance(newBalance)\n            addStream(id, getDecodedAccountData(streamData.data))\n        }\n    }\n\n    async function cancelStream(id: string) {\n        const {amount, withdrawn} = streams[id];\n        const now = new Date();\n        const oldBalance = balance;\n        const success = await _cancelStream(id, streams[id], connection, wallet, cluster)\n        if (success) {\n            const newBalance = (await connection.getBalance(wallet.publicKey, TX_FINALITY_CONFIRMED)) / LAMPORTS_PER_SOL;\n            const newWithdrawn = amount - (newBalance - oldBalance);\n            setBalance(balance + amount - withdrawn)\n            addStream(\n                id,\n                {\n                    ...streams[id],\n                    withdrawn: newWithdrawn,\n                    canceled_at: getUnixTime(now),\n                    status: STREAM_STATUS_CANCELED\n                }\n            )\n        }\n    }\n\n    async function removeStream(id: string, skipPrompt?: boolean) {\n        if (!skipPrompt && await _swal()) {\n            deleteStream(id)\n        }\n    }\n\n    return <div>\n        <strong className=\"text-white text-center text-2xl block\">My Streams</strong>\n        {wallet?.connected && Object.keys(streams).length > 0 ? (\n            Object.entries(streams)\n                .sort(([, stream1], [, stream2]) => stream2.start - stream1.start)\n                .map(([id, data]) => (\n                    <Stream key={id} onStatusUpdate={(status) => addStream(id, {...streams[id], status})}\n                            onWithdraw={() => withdrawStream(id)} onCancel={() => cancelStream(id)}\n                            id={id} data={data} myAddress={wallet.publicKey.toBase58()}\n                            removeStream={() => removeStream(id)}/>\n                ))\n        ) : <EmptyStreams/>}\n    </div>\n}\n","import {useState} from \"react\";\nimport {Account, CreateStreamForm, Curtain} from \"../Components\";\nimport StreamsContainer from \"../Containers/StreamsContainer\";\nimport useStore from \"../Stores\";\n\nconst storeGetter = state => ({\n    wallet: state.wallet()\n})\n\nexport default function Main() {\n    const {wallet} = useStore(storeGetter)\n    const [loading, setLoading] = useState(false)\n\n    return (\n        <div className=\"mx-auto grid grid-cols-1 gap-16 max-w-lg xl:grid-cols-2 xl:max-w-5xl\">\n            <div className=\"mb-8\">\n                <Curtain visible={loading}/>\n                {wallet?.connected &&\n                <>\n                    <Account loading={loading} setLoading={setLoading}/>\n                    <hr/>\n                </>\n                }\n                <CreateStreamForm loading={loading} setLoading={setLoading}/>\n            </div>\n            <StreamsContainer/>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/logo.c4294b7c.png\";","import {useEffect, useReducer} from \"react\";\nimport {LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {Main} from \"./Pages\";\nimport {Footer, Logo, SelectCluster} from \"./Components\";\nimport useStore from \"./Stores\"\nimport logo from './logo.png'\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst storeGetter = state => ({\n    wallet: state.wallet(),\n    cluster: state.cluster,\n    connection: state.connection(),\n    setBalance: state.setBalance,\n    setStreams: state.setStreams,\n    connectWallet: state.connectWallet,\n    disconnectWallet: state.disconnectWallet,\n})\n\nfunction App() {\n    const {\n        wallet,\n        cluster,\n        connection,\n        setBalance,\n        setStreams,\n        connectWallet,\n        disconnectWallet,\n    } = useStore(storeGetter)\n\n    const [, forceUpdate] = useReducer(i => ++i, 0)\n\n    useEffect(() => {\n        if (wallet) {\n            wallet.on('connect', () => {\n                forceUpdate()\n                connection.getBalance(wallet.publicKey)\n                    .then(result => setBalance(result / LAMPORTS_PER_SOL));\n                toast.success('Connected to wallet!');\n            });\n            wallet.on('disconnect', () => {\n                forceUpdate()\n                toast.info('Disconnected from wallet');\n            });\n            setTimeout(connectWallet, 0)\n            return () => {\n                disconnectWallet()\n            };\n        }\n    }, [connection, wallet, cluster, setBalance, setStreams, connectWallet, disconnectWallet]);\n\n    return (\n        <div>\n            <div className={\"mx-auto bg-blend-darken px-4 my-4\"}>\n                <Logo src={logo}/>\n                <div className=\"sm:absolute top-0 right-0 sm:p-4\"><SelectCluster/></div>\n                <Main/>\n            </div>\n            <ToastContainer hideProgressBar position=\"bottom-left\" limit={3}/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport {FormProvider} from \"./Contexts/FormContext\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <FormProvider>\n            <App/>\n        </FormProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();\n","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function ToastrLink(props: { url: string, urlText: string, nonUrlText: string }) {\n    const {url, urlText, nonUrlText} = props;\n    return <span>{nonUrlText}<br/>\n        <a className=\"font-bold\"\n           href={url} rel=\"noopener noreferrer\"\n           target=\"_blank\">{urlText}<ExternalLinkIcon className=\"ml-1 w-4 h-4 inline\"/>\n        </a>\n    </span>\n}","import {toast} from \"react-toastify\";\nimport {Connection, Keypair, Transaction} from \"@solana/web3.js\";\nimport ToastrLink from \"../Components/ToastrLink\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {INSTRUCTION_CREATE_STREAM, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {getExplorerLink} from \"../utils/helpers\";\n\nexport default async function sendTransaction(type: number, transaction: Transaction, connection: Connection, wallet: Wallet, network?: string, pda?: Keypair) {\n    try {\n        transaction.recentBlockhash = (await connection.getRecentBlockhash()).blockhash;\n        toast.info('Please confirm transaction in your wallet.', {autoClose: 10000});\n        transaction.feePayer = wallet.publicKey;\n\n        if (type === INSTRUCTION_CREATE_STREAM) {\n            transaction.partialSign(pda);\n        }\n\n        const signed = await wallet.signTransaction(transaction);\n        const signature = await connection.sendRawTransaction(signed.serialize());\n        toast.dismiss();\n        toast.info('Submitted transaction. Awaiting confirmation...', {autoClose: 10000});\n\n        // can use 'finalized' which gives 100% certainty, but requires much longer waiting.\n        const finality = TX_FINALITY_CONFIRMED\n        await connection.confirmTransaction(signature, finality)\n        const url = getExplorerLink('tx', signature)\n        toast.dismiss();\n        toast.success(\n            <ToastrLink\n                url={url}\n                urlText=\"View on explorer\"\n                nonUrlText={`Transaction ${finality}!` + (finality === TX_FINALITY_CONFIRMED ? \" Please allow it few seconds to finalize.\" : \"\")}\n            />,\n            {autoClose: 15000, closeOnClick: true}\n        )\n        return true;\n    } catch (e) {\n        console.warn(e);\n        //todo log these errors somewhere for our reference\n        toast.error('Error: ' + e.message);\n        return false;\n    }\n}\n","export const STREAMFLOW_ACCOUNT_ID = \"61q5sBk7ZtjWJtRxnbhgKjUP9cxvdzmxcGRFxCJhQhdN\";","export * from './ids';\n\nexport const AIRDROP_AMOUNT = 1; // 1 SOL is the cap on the testnet\n\nexport const TX_FINALITY_CONFIRMED = \"confirmed\";\nexport const TX_FINALITY_FINALIZED = \"finalized\";\n\nexport const INSTRUCTION_CREATE_STREAM = 0;\nexport const INSTRUCTION_WITHDRAW_STREAM = 1;\nexport const INSTRUCTION_CANCEL_STREAM = 2;\n\nexport const EXPLORER_TYPE_TX = \"tx\";\nexport const EXPLORER_TYPE_ADDR = \"address\";\n\nexport const DATE_FORMAT = \"yyyy-MM-dd\";\nexport const TIME_FORMAT = \"HH:mm\";\nexport const TIME_SUFFIX = \"T00:00\";\n\nexport const START = \"start\";\nexport const END = \"end\";\n\nexport const STREAM_STATUS_SCHEDULED = \"scheduled\";\nexport const STREAM_STATUS_STREAMING = \"streaming\";\nexport const STREAM_STATUS_COMPLETE = \"complete\";\nexport const STREAM_STATUS_CANCELED = \"canceled\";\n\n//don't forget to update tailwind.config.js to safelist dynamically generated classes\nexport const STREAM_STATUS_COLOR = {\n    [STREAM_STATUS_SCHEDULED]: 'gray', // now < start\n    [STREAM_STATUS_STREAMING]: 'green', // start <= now < end\n    [STREAM_STATUS_COMPLETE]: 'blue', //now >= end;\n    [STREAM_STATUS_CANCELED]: 'red',\n}\n"],"sourceRoot":""}
{"version":3,"sources":["Actions/createStream.ts","Actions/withdrawStream.ts","Actions/cancelStream.ts","types.ts","Stores/BalanceStore.ts","Stores/StreamsStore.ts","Stores/WalletStore.ts","Stores/index.ts","utils/helpers.ts","Components/Recipient.tsx","Components/SelectToken.tsx","Contexts/FormContext.tsx","Components/DateTime.tsx","Components/Amount.tsx","Components/Curtain.tsx","Components/Stream/Badge.tsx","Components/Stream/ActionButton.tsx","Components/Stream/Duration.tsx","Components/Stream/Progress.tsx","Components/Stream.tsx","Components/Footer.tsx","Components/Logo.tsx","Components/ButtonPrimary.tsx","Components/Link.tsx","Components/Address.tsx","Components/Toggle.tsx","Components/CreateStreamForm.tsx","Components/Account.tsx","Components/SelectCluster.tsx","Components/Banner.tsx","Components/WalletPicker.tsx","Components/Vesting.tsx","Components/EmptyStreams.tsx","Components/StreamsList.tsx","Pages/Main.tsx","Pages/Products.tsx","logo.png","App.tsx","index.tsx","Stores/NetworkStore.ts","Components/ToastrLink.tsx","Actions/sendTransaction.tsx","constants/ids.ts","constants/index.ts"],"names":["_createStream","data","connection","wallet","pda","a","instruction","getCreateStreamInstruction","publicKey","tx","Transaction","feePayer","add","sendTransaction","INSTRUCTION_CREATE_STREAM","pdaPub","sender","receiver","TransactionInstruction","keys","pubkey","PublicKey","isSigner","isWritable","SystemProgram","programId","useStore","getState","encodeInstructionData","amount","start","end","layout","BufferLayout","struct","u8","ns64","nu64","encoded","Buffer","alloc","span","encode","Math","trunc","LAMPORTS_PER_SOL","_withdrawStream","account_id","getWithdrawStreamInstruction","INSTRUCTION_WITHDRAW_STREAM","STREAMFLOW_ACCOUNT_ID","_cancelStream","getCancelStreamInstruction","INSTRUCTION_CANCEL_STREAM","StreamStatus","useBalanceStore","set","balance","setBalance","useStreamStore","get","streams","addStream","id","stream","deleteStream","clearStreams","memoizedConnection","walletStore","walletType","clusterUrl","key","Connection","getConnection","setWalletType","state","name","persistStoreToLocalStorage","adapter","on","getBalance","then","result","toast","success","info","connect","catch","e","error","WalletNotFoundError","connectWallet","disconnectWallet","disconnect","localStorage","cluster","existingStreams","JSON","parse","walletKey","mergedStreams","toBase58","stringify","create","devtools","useNetworkStore","useWalletStore","window","addEventListener","property","blob","uint64","DataLayout","getDecodedAccountData","buffer","accountData","decode","Number","u64","fromBuffer","starttime","endtime","withdrawn","recipient","status","now","scheduled","streaming","complete","getStreamStatus","getUnixTime","Date","StreamData","getExplorerLink","type","explorerUrl","canceled_at","this","canceled","_swal","swal","text","icon","buttons","copyToClipboard","value","el","document","createElement","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","streamCreated","url","location","origin","title","content","element","attributes","className","href","target","innerHTML","clicked","Recipient","props","htmlFor","defaultValue","onChange","pattern","placeholder","required","SelectToken","disabled","FormContext","createContext","setAmount","setReceiver","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","vesting","setVesting","FormProvider","useState","undefined","format","DATE_FORMAT","Provider","children","useFormContext","useContext","DateTime","date","updateDate","time","updateTime","initializeTime","minutes","TIME_FORMAT","END","minEndDate","TIME_SUFFIX","min","max","years","onFocus","onClick","Amount","step","autoFocus","MAX_SAFE_INTEGER","Curtain","visible","Badge","color","fill","viewBox","cx","cy","r","ActionButton","action","Duration","fromUnixTime","memo","Progress","rtl","width","toFixed","Stream","myAddress","removeStream","onStatusUpdate","onCancel","onWithdraw","STREAM_STATUS_COLOR","getStreamed","streamed","setStreamed","available","setAvailable","showWithdraw","showCancel","useEffect","interval","setInterval","tmpStatus","updateStatus","clearInterval","Link","EXPLORER_TYPE_ADDR","Address","address","timestamp","Footer","src","alt","loading","transform","hideIcon","Logo","ButtonPrimary","rest","rel","iconClassName","copied","setCopied","setTimeout","classNames","classes","filter","Boolean","join","Toggle","enabled","label","setEnabled","Group","as","Label","checked","storeGetter","CreateStreamForm","setLoading","Keypair","generate","validate","msg","toDateString","setCustomValidity","createStream","ERR_NOT_CONNECTED","form","getElementById","i","elements","length","checkValidity","reportValidity","getMinimumBalanceForRentExemption","fee","onSubmit","START","Vesting","connected","SelectCluster","WalletPicker","isMainnet","CLUSTER_MAINNET","Account","airdropTxSignature","setAirdropTxSignature","requestAirdrop","AIRDROP_AMOUNT","signature","confirmTransaction","TX_FINALITY_CONFIRMED","err","walletPubKey","myWalletLink","networkStore","setCluster","CLUSTER_DEVNET","Component","div","addWalletOption","button","p","img","onclick","setActionValue","close","cancel","walletInitialized","walletTypes","useMemo","getPhantomWallet","getSolflareWebWallet","network","getSolflareWallet","getSolletWallet","restoredWalletType","find","w","pickWallet","hidden","readOnly","EmptyStreams","StreamsList","newBalance","getAccountInfo","streamData","oldBalance","newWithdrawn","skipPrompt","savedStreams","newStreams","streamID","hash","substring","ERR_NO_STREAM","hasOwnProperty","pk","message","Object","entries","sort","stream1","map","withdrawStream","cancelStream","Main","Products","product","PRODUCT_STREAMS","PRODUCT_VESTING","PRODUCT_PAYROLL","floor","random","PRODUCT_MULTISIG","toLocaleString","App","setProduct","products","prod","logo","hideProgressBar","limit","ReactDOM","render","StrictMode","CLUSTER_LOCAL","CLUSTER_TESTNET","clusterUrls","clusterApiUrl","programIds","prompt","encodeURIComponent","ToastrLink","urlText","nonUrlText","transaction","getRecentBlockhash","recentBlockhash","blockhash","autoClose","Error","partialSign","signTransaction","signed","sendRawTransaction","serialize","dismiss","finality","closeOnClick","console","warn"],"mappings":"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","file":"static/js/main.bfbf9f89.chunk.js","sourcesContent":["import {\n  Connection,\n  Keypair,\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport BufferLayout from \"buffer-layout\";\nimport { INSTRUCTION_CREATE_STREAM } from \"../constants\";\nimport { StreamData } from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\";\n\nexport default async function _createStream(\n  data: StreamData,\n  connection: Connection,\n  wallet: Wallet,\n  pda: Keypair\n) {\n  const instruction = getCreateStreamInstruction(data, pda.publicKey);\n  const tx = new Transaction({ feePayer: wallet.publicKey }).add(instruction);\n  return await sendTransaction(\n    INSTRUCTION_CREATE_STREAM,\n    tx,\n    connection,\n    wallet,\n    pda\n  );\n}\n\nfunction getCreateStreamInstruction(\n  data: StreamData,\n  pdaPub: PublicKey\n): TransactionInstruction {\n  const { sender, receiver } = data;\n\n  return new TransactionInstruction({\n    keys: [\n      {\n        pubkey: new PublicKey(sender),\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: new PublicKey(receiver), //recipient\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: pdaPub, //PDA used for data\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId, //system program required to make a transfer\n        isSigner: false,\n        isWritable: false,\n      },\n    ],\n    programId: new PublicKey(useStore.getState().programId as string),\n    data: encodeInstructionData(data),\n  });\n}\n\nfunction encodeInstructionData(data: StreamData) {\n  const { amount, start, end } = data;\n  // Packed as little endian\n  const layout = BufferLayout.struct([\n    BufferLayout.u8(\"instruction\"),\n    BufferLayout.ns64(\"start\"),\n    BufferLayout.ns64(\"end\"),\n    // N.B. JS Number has 53 significant bits, so numbers larger than\n    // 2^53 can be misrepresented\n    BufferLayout.nu64(\"amount\"),\n  ]);\n\n  const encoded = Buffer.alloc(layout.span);\n  layout.encode(\n    {\n      instruction: INSTRUCTION_CREATE_STREAM,\n      start: start,\n      end: end,\n      // amount: Number.MAX_SAFE_INTEGER // limited to 2^53 - 1 = 9007199254740991\n      amount: Math.trunc(amount * LAMPORTS_PER_SOL),\n    },\n    encoded\n  );\n\n  // UInt64 alternative is to remove the \"amount\" from layout encoding and\n  // use the following code:\n  // //encoded.writeBigUInt64LE(BigInt(\"18446744073709551615\"), 9)\n\n  return encoded;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {\n  INSTRUCTION_WITHDRAW_STREAM,\n  STREAMFLOW_ACCOUNT_ID,\n} from \"../constants\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { StreamData } from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\";\n\nexport default async function _withdrawStream(\n  account_id: string,\n  data: StreamData,\n  connection: Connection,\n  wallet: Wallet\n) {\n  const { receiver } = data;\n  const instruction = getWithdrawStreamInstruction(account_id, receiver);\n  const tx = new Transaction().add(instruction);\n  return await sendTransaction(\n    INSTRUCTION_WITHDRAW_STREAM,\n    tx,\n    connection,\n    wallet\n  );\n}\n\nfunction getWithdrawStreamInstruction(account_id: string, receiver: string) {\n  return new TransactionInstruction({\n    keys: [\n      {\n        pubkey: new PublicKey(receiver),\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: new PublicKey(account_id),\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        //needed to transfer the rent only during the final withdrawal transaction\n        pubkey: new PublicKey(STREAMFLOW_ACCOUNT_ID),\n\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ],\n    programId: new PublicKey(useStore.getState().programId as string),\n    data: encodeInstructionData(),\n  });\n}\n\nfunction encodeInstructionData() {\n  const layout = BufferLayout.struct([\n    BufferLayout.u8(\"instruction\"),\n    BufferLayout.nu64(\"amount\"),\n  ]);\n\n  const data = Buffer.alloc(layout.span);\n  //TODO - allow withdrawal of arbitrary (allowed) amount\n  layout.encode(\n    {\n      instruction: INSTRUCTION_WITHDRAW_STREAM,\n      amount: 0, // 0 = whole available amount is withdrawn.\n    },\n    data\n  );\n  return data;\n}\n","import BufferLayout from \"buffer-layout\";\nimport { INSTRUCTION_CANCEL_STREAM } from \"../constants\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { StreamData } from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\";\n\nexport default async function _cancelStream(\n  account_id: string,\n  data: StreamData,\n  connection: Connection,\n  wallet: Wallet\n) {\n  const { sender, receiver } = data;\n  const instruction = getCancelStreamInstruction(account_id, sender, receiver);\n  const tx = new Transaction().add(instruction);\n  return await sendTransaction(\n    INSTRUCTION_CANCEL_STREAM,\n    tx,\n    connection,\n    wallet\n  );\n}\n\nfunction getCancelStreamInstruction(\n  account_id: string,\n  sender: string,\n  receiver: string\n) {\n  return new TransactionInstruction({\n    keys: [\n      {\n        pubkey: new PublicKey(sender),\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: new PublicKey(receiver),\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: new PublicKey(account_id),\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ],\n    programId: new PublicKey(useStore.getState().programId as string),\n    data: encodeInstructionData(),\n  });\n}\n\nfunction encodeInstructionData() {\n  const layout = BufferLayout.struct([BufferLayout.u8(\"instruction\")]);\n  const data = Buffer.alloc(layout.span);\n\n  layout.encode({ instruction: INSTRUCTION_CANCEL_STREAM }, data);\n\n  return data;\n}\n","export interface WalletType {\n  name: string;\n  icon: string;\n  adapter: () => any;\n}\n\nexport interface Stream {\n  start: number;\n  end: number;\n  amount: number;\n  withdrawn: number;\n  canceled_at: number;\n  status: StreamStatus;\n  receiver: string;\n  sender: string;\n}\n\nexport interface Account {\n  starttime: Buffer;\n  endtime: Buffer;\n  amount: Buffer;\n  withdrawn: Buffer;\n  sender: Buffer;\n  recipient: Buffer;\n}\n\nexport enum StreamStatus {\n  scheduled = \"scheduled\",\n  streaming = \"streaming\",\n  complete = \"complete\",\n  canceled = \"canceled\",\n}\n","const useBalanceStore = (set: Function) => ({\n  balance: 0,\n  setBalance: (balance: number) => set({ balance }),\n});\n\nexport default useBalanceStore;\n","import { Stream } from \"../types\";\n\nconst useStreamStore = (set: Function, get: Function) => ({\n  streams: {} as { [s: string]: Stream },\n  addStream: (id: string, stream: Object) =>\n    set({ streams: { ...get().streams, [id]: stream } }),\n  deleteStream: (id: string) => {\n    const streams = { ...get().streams };\n    delete streams[id];\n    set({ streams });\n  },\n  clearStreams: () => set({ streams: {} }),\n});\n\nexport default useStreamStore;\n","import { Connection } from \"@solana/web3.js\";\nimport { toast } from \"react-toastify\";\nimport { WalletNotFoundError } from \"@solana/wallet-adapter-base\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { WalletType } from \"../types\";\n\nlet memoizedConnection: { [s: string]: Connection } = {};\n\nconst getConnection = (clusterUrl: string | null) => {\n  if (!clusterUrl) {\n    return null;\n  }\n  const key = clusterUrl;\n  if (!memoizedConnection[key]) {\n    memoizedConnection = { [key]: new Connection(clusterUrl) };\n  }\n  return memoizedConnection[key];\n};\n\nconst walletStore = (set: Function, get: Function) => ({\n  // state\n  walletType: null as WalletType | null,\n  wallet: null as Wallet | null,\n  connection: () => getConnection(get().clusterUrl()),\n\n  // actions\n  setWalletType: (walletType: WalletType | null) => {\n    const state = get();\n    if (walletType?.name === state.walletType?.name) {\n      return;\n    }\n    state.persistStoreToLocalStorage();\n\n    const wallet = walletType?.adapter();\n    if (wallet) {\n      wallet.on(\"connect\", () => {\n        set({ walletType, wallet });\n        state\n          .connection()\n          .getBalance(wallet.publicKey)\n          .then((result: number) =>\n            state.setBalance(result / LAMPORTS_PER_SOL)\n          );\n        toast.success(\"Connected to wallet!\");\n      });\n      wallet.on(\"disconnect\", () => {\n        set({ walletType: null, wallet: null });\n        toast.info(\"Disconnected from wallet\");\n      });\n      wallet.connect().catch((e: Error) => {\n        set({ walletType: null, wallet: null });\n        toast.error(\n          e instanceof WalletNotFoundError\n            ? \"Wallet extension not installed\"\n            : \"Wallet not connected, try again\"\n        );\n      });\n    } else {\n      set({ walletType, wallet });\n    }\n  },\n  connectWallet: () =>\n    get()\n      .wallet?.connect()\n      .catch((e: Error) => {\n        get().setWalletType(null);\n        toast.error(\n          e instanceof WalletNotFoundError\n            ? \"Wallet extension not installed\"\n            : \"Wallet not connected, please try again\"\n        );\n      }),\n  disconnectWallet: () => {\n    const state = get();\n    // state.persistStoreToLocalStorage()\n    state.wallet?.disconnect();\n  },\n});\n\nexport default walletStore;\n","import create, { SetState, GetState } from \"zustand\";\nimport { devtools } from \"zustand/middleware\";\nimport useBalanceStore from \"./BalanceStore\";\nimport useNetworkStore from \"./NetworkStore\";\nimport useStreamStore from \"./StreamsStore\";\nimport useWalletStore from \"./WalletStore\";\n\nconst persistStoreToLocalStorage = () => {\n  const state = useStore.getState() as StoreType;\n  localStorage.cluster = state.cluster;\n  localStorage.programId = state.programId;\n  localStorage.walletType = state.walletType?.name;\n\n  const existingStreams = JSON.parse(localStorage.streams || \"{}\");\n  const walletKey = state.wallet?.publicKey;\n  if (walletKey) {\n    // put current streams in localStorage without overwriting\n    // the exiting ones in other wallets or clusters\n    // localStorage.streams[state.cluster][walletKey] = state.streams\n    const mergedStreams = {\n      ...existingStreams,\n      [state.cluster]: {\n        ...existingStreams[state.cluster],\n        [walletKey.toBase58()]: state.streams,\n      },\n    };\n    localStorage.streams = JSON.stringify(mergedStreams);\n  }\n};\n\nexport type StoreType = ReturnType<typeof useBalanceStore> &\n  ReturnType<typeof useNetworkStore> &\n  ReturnType<typeof useStreamStore> &\n  ReturnType<typeof useWalletStore> & {\n    persistStoreToLocalStorage: () => void;\n  };\n\nconst useStore = create<StoreType>(\n  devtools((set: SetState<StoreType>, get: GetState<StoreType>) => ({\n    ...useBalanceStore(set),\n    ...useNetworkStore(set, get),\n    ...useStreamStore(set, get),\n    ...useWalletStore(set, get),\n    persistStoreToLocalStorage,\n  }))\n);\n\nwindow.addEventListener(\"beforeunload\", persistStoreToLocalStorage);\n\nexport default useStore;\n","import BufferLayout from \"buffer-layout\";\nimport { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\nimport { u64 } from \"@solana/spl-token\";\nimport { getUnixTime } from \"date-fns\";\nimport swal from \"sweetalert\";\nimport useStore from \"../Stores\";\nimport { Account, StreamStatus } from \"../types\";\n\nexport const publicKey = (property = \"publicKey\"): BufferLayout.Layout => {\n  return BufferLayout.blob(32, property);\n};\n\nexport const uint64 = (property = \"uint64\"): BufferLayout.Layout => {\n  return BufferLayout.blob(8, property);\n};\n\nconst DataLayout = BufferLayout.struct([\n  uint64(\"starttime\"),\n  uint64(\"endtime\"),\n  uint64(\"amount\"),\n  uint64(\"withdrawn\"),\n  publicKey(\"sender\"),\n  publicKey(\"recipient\"),\n]);\n\nexport function getDecodedAccountData(buffer: Buffer) {\n  const accountData = DataLayout.decode(buffer) as Account;\n\n  const start = Number(u64.fromBuffer(accountData.starttime));\n  const end = Number(u64.fromBuffer(accountData.endtime));\n  const amount = Number(u64.fromBuffer(accountData.amount)) / LAMPORTS_PER_SOL;\n  const withdrawn =\n    Number(u64.fromBuffer(accountData.withdrawn)) / LAMPORTS_PER_SOL;\n  const sender = new PublicKey(accountData.sender).toBase58();\n  const recipient = new PublicKey(accountData.recipient).toBase58();\n\n  const status = getStreamStatus(\n    Number(start),\n    Number(end),\n    getUnixTime(new Date())\n  ); //in milliseconds\n\n  return new StreamData(\n    sender,\n    recipient,\n    amount,\n    start,\n    end,\n    withdrawn,\n    status\n  );\n}\n\nexport function getExplorerLink(type: string, id: string): string {\n  return `https://explorer.solana.com/${type}/${id}?cluster=${useStore\n    .getState()\n    .explorerUrl()}`;\n}\n\nexport function getStreamStatus(start: number, end: number, now: number) {\n  if (now < start) {\n    return StreamStatus.scheduled;\n  } else if (now < end) {\n    return StreamStatus.streaming;\n  } else {\n    return StreamStatus.complete;\n  }\n}\n\nexport class StreamData {\n  constructor(\n    public sender: string,\n    public receiver: string,\n    public amount: number,\n    public start: number,\n    public end: number,\n    public withdrawn?: number,\n    public status?: StreamStatus,\n    public canceled_at?: number\n  ) {\n    this.withdrawn = withdrawn || 0;\n    this.status = canceled_at\n      ? StreamStatus.canceled\n      : status || StreamStatus.scheduled;\n  }\n}\n\nexport function _swal(): Promise<void> {\n  return swal({ text: \"Are you sure?\", icon: \"warning\", buttons: [true] });\n}\n\nexport function copyToClipboard(value: string): void {\n  const el = document.createElement(\"textarea\");\n  el.value = value;\n  el.setAttribute(\"readonly\", \"\");\n  el.style.position = \"absolute\";\n  el.style.left = \"-9999px\";\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n}\n\nexport function streamCreated(id: string) {\n  const url = window.location.origin + \"#\" + id;\n  swal({\n    buttons: [\"Copy Stream URL\"],\n    icon: \"success\",\n    title: \"Stream created!\",\n    //sweet alert accepts pure HTML Node, so some wrapping must be done https://sweetalert.js.org/guides/#using-dom-nodes-as-content\n    content: {\n      element: \"a\",\n      attributes: {\n        className: \"text-primary block truncate max-w-full\",\n        href: url,\n        target: \"_blank\",\n        innerHTML: url,\n      },\n    },\n  }).then((clicked) => {\n    if (clicked) {\n      copyToClipboard(url);\n      swal(\"Link copied to clipboard!\", \"Send it to the recipient!\", \"success\");\n    }\n  });\n}\n","export default function Recipient(props: {\n  onChange: (val: string) => void;\n  value: string;\n}) {\n  return (\n    <div className=\"col-span-full\">\n      <label htmlFor=\"account\" className=\"block font-medium text-gray-100\">\n        Recipient Account\n      </label>\n      <div className=\"mt-1\">\n        <input\n          type=\"text\"\n          name=\"account\"\n          id=\"account\"\n          defaultValue={props.value}\n          onChange={(e) => props.onChange(e.target.value)}\n          pattern=\"[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}\"\n          className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n          placeholder=\"Please double check the address\"\n          aria-describedby=\"account-description\"\n          required\n        />\n      </div>\n    </div>\n  );\n}\n","export default function SelectToken() {\n  return (\n    <div className=\"col-span-2 sm:col-span-1\">\n      <label htmlFor=\"token\" className=\"block font-medium text-gray-100\">\n        Token\n      </label>\n      <select\n        id=\"token\"\n        name=\"token\"\n        className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n        defaultValue=\"SOL\"\n      >\n        <option>SOL</option>\n        <option disabled>ETH - Coming soon️™</option>\n        <option disabled>BTC - Coming soon™</option>\n        <option disabled>USDC - Coming soon™</option>\n        <option disabled>Other tokens...</option>\n      </select>\n    </div>\n  );\n}\n","import { format } from \"date-fns\";\nimport { createContext, useContext, useState } from \"react\";\nimport { DATE_FORMAT } from \"../constants\";\n\nconst FormContext = createContext({\n  amount: null as any,\n  setAmount: null as any,\n  receiver: null as any,\n  setReceiver: null as any,\n  startDate: null as any,\n  setStartDate: null as any,\n  startTime: null as any,\n  setStartTime: null as any,\n  endDate: null as any,\n  setEndDate: null as any,\n  endTime: null as any,\n  setEndTime: null as any,\n  vesting: null as any,\n  setVesting: null as any,\n});\n\nexport function FormProvider(props: { children: React.ReactNode }) {\n  const now = new Date();\n\n  const [amount, setAmount] = useState(undefined);\n  const [receiver, setReceiver] = useState(undefined);\n  const [startDate, setStartDate] = useState(format(now, DATE_FORMAT));\n  const [startTime, setStartTime] = useState(\"\");\n  const [endDate, setEndDate] = useState(startDate);\n  const [endTime, setEndTime] = useState(\"\");\n  const [vesting, setVesting] = useState(false);\n\n  return (\n    <FormContext.Provider\n      value={{\n        amount,\n        setAmount,\n        receiver,\n        setReceiver,\n        startDate,\n        setStartDate,\n        startTime,\n        setStartTime,\n        endDate,\n        setEndDate,\n        endTime,\n        setEndTime,\n        vesting,\n        setVesting,\n      }}\n    >\n      {props.children}\n    </FormContext.Provider>\n  );\n}\n\nexport function useFormContext() {\n  return useContext(FormContext);\n}\n","import { add, format } from \"date-fns\";\nimport { DATE_FORMAT, END, TIME_FORMAT, TIME_SUFFIX } from \"../constants\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { useFormContext } from \"../Contexts/FormContext\";\n\nexport default function DateTime(props: {\n  title: string;\n  date: string;\n  updateDate: Dispatch<SetStateAction<string>>;\n  time: string;\n  updateTime: Dispatch<SetStateAction<string>>;\n}) {\n  const { title, date, updateDate, time, updateTime } = props;\n  const { startDate, startTime } = useFormContext();\n\n  function getMinDate(): string {\n    if (title === END && startDate) {\n      return format(new Date(startDate + TIME_SUFFIX), DATE_FORMAT);\n    } else {\n      return format(new Date(), DATE_FORMAT);\n    }\n  }\n\n  function initializeTime() {\n    const now = format(add(new Date(), { minutes: 1 }), TIME_FORMAT);\n\n    if (title === END) {\n      const minEndDate = startDate\n        ? new Date(startDate + TIME_SUFFIX)\n        : new Date();\n\n      if (!startDate || !date || date < startDate) {\n        updateDate(format(minEndDate, DATE_FORMAT));\n      }\n\n      if (startDate && startDate === date && time <= startTime) {\n        updateTime(\n          format(\n            add(new Date(startDate + \"T\" + startTime), { minutes: 5 }),\n            TIME_FORMAT\n          )\n        );\n      } else if (!startTime) {\n        updateTime(now);\n      }\n    } else if (!time || time < now) {\n      updateTime(now);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"col-span-3 sm:col-span-1\">\n        <label\n          htmlFor={title}\n          className=\"block font-medium text-gray-100 capitalize\"\n        >\n          {title} Date\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"date\"\n            name={title}\n            id={title}\n            value={date}\n            min={getMinDate()}\n            max={format(add(new Date(), { years: 1 }), DATE_FORMAT)}\n            onFocus={initializeTime}\n            onClick={initializeTime}\n            onChange={(e) => updateDate(e.target.value)}\n            className=\"text-white bg-gray-800 border-primary block w-full h-10.5 border-black rounded-md focus:ring-secondary focus:border-secondary\"\n            placeholder=\"\"\n            aria-describedby={title + `-description`}\n            required\n          />\n        </div>\n      </div>\n      <div className=\"col-span-2 sm:col-span-1\">\n        <label\n          htmlFor={title + `_time`}\n          className=\"block font-medium text-gray-100 capitalize\"\n        >\n          {title} time\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"time\"\n            name={title + `_time`}\n            id={title + `_time`}\n            value={time}\n            onFocus={initializeTime}\n            onClick={initializeTime}\n            onChange={(e) => updateTime(e.target.value)}\n            className=\"text-white bg-gray-800 border-primary block w-full h-10.5 border-black rounded-md focus:ring-secondary focus:border-secondary\"\n            placeholder=\"\"\n            aria-describedby={title + `_time-description`}\n            required\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","export default function Amount(props: {\n  onChange: (value: string) => void;\n  max: number;\n  value: number;\n}) {\n  return (\n    <div className=\"col-span-3 sm:col-span-1\">\n      <label htmlFor=\"amount\" className=\"block font-medium text-gray-100\">\n        Amount\n      </label>\n      <div className=\"mt-1\">\n        <input\n          step=\"any\"\n          autoFocus={true}\n          type=\"number\"\n          name=\"amount\"\n          id=\"amount\"\n          defaultValue={props.value}\n          onChange={(e) => props.onChange(e.target.value)}\n          className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n          min={0}\n          max={props.max || Number.MAX_SAFE_INTEGER}\n          placeholder=\"0.00\"\n          aria-describedby=\"amount-description\"\n          required={true}\n        />\n      </div>\n    </div>\n  );\n}\n","export default function Curtain(props: { visible: boolean }) {\n  return (\n    <div\n      className={`fixed top-0 bottom-0 left-0 right-0 bg-gray-900 opacity-90 z-10 ${\n        props.visible ? \"block\" : \"hidden\"\n      }`}\n    >\n      <div className=\"loader\"> </div>\n    </div>\n  );\n}\n","export default function Badge(props: { type: string; color: string }) {\n  const { type, color } = props;\n  return (\n    <div className=\"inline\">\n      <span\n        className={`align-top px-2.5 py-0.5 rounded-full text-xs font-medium bg-${color}-100 text-${color}-800 capitalize`}\n      >\n        <svg\n          className={`mr-1 -ml-1 inline align-baseline h-2 w-2 text-${color}-400`}\n          fill=\"currentColor\"\n          viewBox=\"0 0 8 8\"\n        >\n          <circle cx={4} cy={4} r={3} />\n        </svg>\n        {type}\n      </span>\n    </div>\n  );\n}\n","export default function ActionButton(props: {\n  title: string;\n  action: () => void;\n  color: string;\n}) {\n  const { title, action, color } = props;\n\n  return (\n    <button\n      onClick={action}\n      className={`rounded-md text-sm bg-${color}-500 hover:bg-${color}-700 active:bg-${color}-900 text-white py-1 px-2`}\n    >\n      {title}\n    </button>\n  );\n}\n","import { memo } from \"react\";\nimport { format, fromUnixTime } from \"date-fns\";\n\nfunction Duration(props: { start: number; end: number }) {\n  return (\n    <dt className=\"col-span-full text-center\">\n      {format(fromUnixTime(props.start), \"yyyy-MM-dd HH:mm\")} &ndash;{\" \"}\n      {format(fromUnixTime(props.end), \"yyyy-MM-dd HH:mm\")}\n    </dt>\n  );\n}\n\nexport default memo(Duration);\n","export default function Progress(props: {\n  title: string;\n  value: number;\n  max: number;\n  rtl?: boolean;\n}) {\n  let { title, value, max, rtl } = props;\n  return (\n    <>\n      <dt>{title}</dt>\n      <div className=\"rounded-sm h-3 bg-gray-900 w-full my-auto\">\n        <div\n          className={\n            \"max-w-full bg-gradient-to-r from-primary to-secondary rounded-sm h-full \" +\n            (rtl ? \"float-right\" : \"\")\n          }\n          style={{ width: (value / max) * 100 + \"%\" }}\n        ></div>\n      </div>\n      <label className=\"ml-2 text-right truncate\">\n        ◎{Number(value).toFixed(2)}\n        <small className=\"text-gray-400\">/{Number(max).toFixed(2)}</small>\n      </label>\n    </>\n  );\n}\n","import Badge from \"./Stream/Badge\";\nimport ActionButton from \"./Stream/ActionButton\";\nimport { getUnixTime } from \"date-fns\";\nimport Duration from \"./Stream/Duration\";\nimport Progress from \"./Stream/Progress\";\nimport { useEffect, useState } from \"react\";\nimport { getExplorerLink } from \"../utils/helpers\";\nimport { XIcon } from \"@heroicons/react/outline\";\nimport { EXPLORER_TYPE_ADDR, STREAM_STATUS_COLOR } from \"../constants\";\nimport { Address, Link } from \"./index\";\nimport { Stream as StreamType, StreamStatus } from \"../types\";\n\nexport default function Stream(props: {\n  data: StreamType;\n  myAddress: string;\n  id: string;\n  removeStream: () => void;\n  onStatusUpdate: (status: StreamStatus) => void;\n  onCancel: () => void;\n\n  onWithdraw: () => void;\n}) {\n  const { start, end, withdrawn, amount, receiver, sender, status } =\n    props.data;\n  const { myAddress, removeStream, onStatusUpdate, onCancel, onWithdraw, id } =\n    props;\n\n  const color = STREAM_STATUS_COLOR[status];\n\n  const [streamed, setStreamed] = useState(getStreamed(start, end, amount));\n  const [available, setAvailable] = useState(streamed - withdrawn);\n\n  const showWithdraw =\n    (status === StreamStatus.streaming ||\n      (status === StreamStatus.complete && withdrawn < amount)) &&\n    myAddress === receiver;\n  const showCancel =\n    (status === StreamStatus.streaming || status === StreamStatus.scheduled) &&\n    myAddress === sender;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setStreamed(getStreamed(start, end, amount));\n      setAvailable(streamed - withdrawn);\n      const tmpStatus = updateStatus(status, start, end);\n      if (tmpStatus !== status) {\n        onStatusUpdate(tmpStatus);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <dl\n      className={`text-white my-4 grid gap-y-4 gap-x-2 grid-cols-3 p-4 bg-${color}-300 bg-opacity-10 hover:bg-opacity-20 shadow rounded-lg`}\n    >\n      <div className=\"col-span-full\">\n        <Badge type={status} color={color} />\n        <button\n          onClick={removeStream}\n          className={`p-1.5 h-6 w-6 float-right align-top rounded-sm hover:bg-${color}-100 focus:outline-none focus:ring-1`}\n        >\n          <XIcon className=\"float-right w-3 h-3\" />\n        </button>\n      </div>\n      <Duration start={start} end={end} />\n      <Link url={getExplorerLink(EXPLORER_TYPE_ADDR, id)} title={\"ID\"} />\n      <Address address={id} className=\"col-span-2 text-sm text-gray-400\" />\n      <Link\n        url={getExplorerLink(EXPLORER_TYPE_ADDR, receiver)}\n        title={\"Recipient\"}\n      />\n      <Address\n        address={receiver}\n        className=\"col-span-2 text-sm text-gray-400\"\n      />\n      <Progress title=\"Withdrawn\" value={withdrawn} max={amount} />\n\n      {status === StreamStatus.canceled && (\n        <Progress\n          title=\"Returned\"\n          value={amount - withdrawn}\n          max={amount}\n          rtl={true}\n        />\n      )}\n      {status !== StreamStatus.canceled && (\n        <>\n          <Progress title=\"Streamed\" value={streamed} max={amount} />\n          {showWithdraw && (\n            <>\n              <dt>\n                Available\n                <br />\n                <sup className=\"text-xs text-gray-300 align-top\">\n                  for withdrawal\n                </sup>\n              </dt>\n              <dd className=\"col-span-2\">◎{available.toFixed(2)}</dd>\n              <ActionButton\n                title=\"Withdraw\"\n                action={onWithdraw}\n                color={STREAM_STATUS_COLOR[StreamStatus.streaming]}\n              />\n            </>\n          )}\n          {showCancel && (\n            <ActionButton\n              title={\"Cancel\"}\n              action={onCancel}\n              color={STREAM_STATUS_COLOR[StreamStatus.canceled]}\n            />\n          )}\n        </>\n      )}\n    </dl>\n  );\n}\n\nexport function getStreamed(\n  start: number,\n  end: number,\n  amount: number,\n  timestamp?: number\n) {\n  timestamp = timestamp || getUnixTime(new Date());\n\n  if (timestamp < start) return 0;\n  if (timestamp > end) return amount;\n\n  return ((timestamp - start) / (end - start)) * amount;\n}\n\nfunction updateStatus(\n  status: StreamStatus,\n  start: number,\n  end: number\n): StreamStatus {\n  const now = getUnixTime(new Date());\n  if (status === StreamStatus.scheduled && now >= start) {\n    return StreamStatus.streaming;\n  } else if (status === StreamStatus.streaming && now >= end) {\n    return StreamStatus.complete;\n  } else {\n    return status;\n  }\n}\n","import { Link } from \"./index\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"mt-40 mb-4 text-center text-sm font-mono text-gray-400\">\n      <div className=\"max-w-40 inline-block\">\n        <img\n          src=\"https://solana.com/branding/horizontal/logo-horizontal-gradient-dark.png\"\n          className=\"h-8 mx-auto my-2\"\n          alt=\"Solana logo\"\n          loading=\"lazy\"\n        />\n      </div>\n      <div className=\"max-w-42 inline-block ml-6\">\n        <img\n          src=\"img/serum-logo-white.svg\"\n          className=\"h-10 mx-auto mb-1\"\n          alt=\"Project Serum logo\"\n          loading=\"lazy\"\n        />\n      </div>\n      <small className=\"block mt-4\">\n        Copyleft{\" \"}\n        <span className=\"inline-block\" style={{ transform: \"rotate(180deg)\" }}>\n          &copy;\n        </span>{\" \"}\n        2021,{\" \"}\n        <Link\n          url=\"https://streamflow.finance\"\n          title=\"StreamFlow Finance\"\n          hideIcon={true}\n        />\n        <br />\n        <small>\n          Code available under{\" \"}\n          <Link\n            url=\"https://www.gnu.org/licenses/agpl-3.0.en.html\"\n            title=\"AGPLv3\"\n            hideIcon={true}\n          />\n        </small>\n      </small>\n    </footer>\n  );\n}\n","export default function Logo(props: { src: string }) {\n  return (\n    <div className=\"mb-8 text-white\">\n      <img\n        src={props.src}\n        alt=\"StreamFlow Finance logo\"\n        className=\"w-24 mx-auto\"\n      />\n      <h1 className=\"text-6xl text-center\">\n        Stream<strong>Flow</strong>\n      </h1>\n    </div>\n  );\n}\n","export default function ButtonPrimary({\n  children,\n  className,\n  onClick = () => null,\n  disabled = false,\n  ...rest\n}: {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (value?: any) => void;\n  disabled?: boolean;\n}) {\n  const baseClasses =\n    \"block mx-auto px-8 py-4 bg-gradient-to-br from-primary via-primary to-secondary border-transparent font-medium rounded shadow-sm text-white hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary \";\n  return (\n    <button\n      className={baseClasses + className}\n      onClick={onClick}\n      disabled={disabled}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n}\n","import { ExternalLinkIcon } from \"@heroicons/react/outline\";\n\nexport default function Link(props: {\n  url: string;\n  title?: string;\n  className?: string;\n  hideIcon?: boolean;\n}) {\n  const { url, title, className, hideIcon } = props;\n  const icon = hideIcon || (\n    <sup>\n      <ExternalLinkIcon className=\"w-3 h-3 inline\" />\n    </sup>\n  );\n\n  return (\n    <strong className={\"text-gray-300 hover:text-white \" + className}>\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {title || url} {icon}\n      </a>\n    </strong>\n  );\n}\n","import { copyToClipboard } from \"../utils/helpers\";\nimport { DuplicateIcon, CheckIcon } from \"@heroicons/react/outline\";\nimport { useState } from \"react\";\n\nexport default function Address(props: { address: string; className: string }) {\n  const { address, className } = props;\n  const iconClassName =\n    \"h-4 inline mr-1 cursor-pointer hover:opacity-80 align-text-bottom \";\n  const [copied, setCopied] = useState(false);\n\n  function copy() {\n    copyToClipboard(address);\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 1000);\n  }\n\n  return (\n    <span className={\"block truncate \" + className}>\n      {copied ? (\n        <span className=\"text-green-300 mr-1\">\n          <CheckIcon className={iconClassName} />\n          <small>Copied!</small>\n        </span>\n      ) : (\n        <DuplicateIcon className={iconClassName} onClick={copy} />\n      )}\n      {address}\n    </span>\n  );\n}\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Dispatch, SetStateAction } from \"react\";\nimport { Switch } from \"@headlessui/react\";\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport default function Toggle({\n  enabled,\n  label,\n  setEnabled,\n}: {\n  enabled: boolean;\n  label: string;\n  setEnabled: Dispatch<SetStateAction<boolean>>;\n}) {\n  return (\n    <Switch.Group as=\"div\" className=\"flex items-center\">\n      <Switch.Label as=\"span\" className=\"mr-3\">\n        <span className=\"text-white\">{label}</span>\n      </Switch.Label>\n      <Switch\n        checked={enabled}\n        onChange={setEnabled}\n        className={classNames(\n          enabled ? \"bg-primary\" : \"bg-gray-900\",\n          \"relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 ring-1 ring-primary focus:outline-none focus:ring-2 focus:ring-secondary\"\n        )}\n      >\n        <span\n          aria-hidden=\"true\"\n          className={classNames(\n            enabled ? \"translate-x-5\" : \"translate-x-0\",\n\n            \"pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200\"\n          )}\n        />\n      </Switch>\n    </Switch.Group>\n  );\n}\n","import {\n  Amount,\n  ButtonPrimary,\n  DateTime,\n  Recipient,\n  SelectCluster,\n  SelectToken,\n  Vesting,\n  WalletPicker,\n} from \"./index\";\nimport { useFormContext } from \"../Contexts/FormContext\";\nimport { getUnixTime } from \"date-fns\";\nimport { streamCreated, StreamData } from \"../utils/helpers\";\nimport { _createStream } from \"../Actions\";\nimport { Keypair, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { END, ERR_NOT_CONNECTED, START, TIME_SUFFIX } from \"../constants\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport useStore, { StoreType } from \"../Stores\";\nimport Toggle from \"./Toggle\";\nimport { toast } from \"react-toastify\";\n\nconst storeGetter = (state: StoreType) => ({\n  balance: state.balance,\n  setBalance: state.setBalance,\n  addStream: state.addStream,\n  connection: state.connection(),\n  wallet: state.wallet,\n});\n\nexport default function CreateStreamForm({\n  loading,\n  setLoading,\n}: {\n  loading: boolean;\n  setLoading: Dispatch<SetStateAction<boolean>>;\n}) {\n  const pda = Keypair.generate();\n  const {\n    amount,\n    setAmount,\n    receiver,\n    setReceiver,\n    startDate,\n    setStartDate,\n    startTime,\n    setStartTime,\n    endDate,\n    setEndDate,\n    endTime,\n    setEndTime,\n    vesting,\n    setVesting,\n  } = useFormContext();\n\n  const { connection, wallet, balance, setBalance, addStream } =\n    useStore(storeGetter);\n\n  function validate(element: HTMLFormElement) {\n    const { name, value } = element;\n    let start;\n    let msg = \"\";\n    switch (name) {\n      case \"start\":\n        start = new Date(value + TIME_SUFFIX);\n        const now = new Date(new Date().toDateString());\n        msg = start < now ? \"Cannot start the stream in the past.\" : \"\";\n        break;\n      case \"start_time\":\n        start = new Date(startDate + \"T\" + value);\n        msg = start < new Date() ? \"Cannot start the stream in the past.\" : \"\";\n        break;\n      case \"end\":\n        msg =\n          new Date(value + TIME_SUFFIX) < new Date(startDate + TIME_SUFFIX)\n            ? \"Umm... end date before the start date?\"\n            : \"\";\n        break;\n      case \"end_time\":\n        start = new Date(startDate + \"T\" + startTime);\n        const end = new Date(endDate + \"T\" + value);\n        msg = end < start ? \"Err... end time before the start time?\" : \"\";\n        break;\n      default:\n    }\n    element.setCustomValidity(msg);\n  }\n\n  async function createStream() {\n    if (!wallet?.publicKey || !connection) {\n      toast.error(ERR_NOT_CONNECTED);\n      return false;\n    }\n    const form = document.getElementById(\"form\") as HTMLFormElement;\n    if (!form) {\n      return false;\n    }\n    for (let i = 0; i < form.elements.length; i++) {\n      validate(form.elements[i] as HTMLFormElement);\n    }\n\n    if (!form.checkValidity()) {\n      form.reportValidity();\n      return false;\n    }\n\n    const start = getUnixTime(new Date(startDate + \"T\" + startTime));\n    let end = getUnixTime(new Date(endDate + \"T\" + endTime));\n\n    // Make sure that end time is always AFTER start time\n    if (end === start) {\n      end = start + 1;\n    }\n\n    setLoading(true);\n    const data = new StreamData(\n      wallet.publicKey.toBase58(),\n      receiver,\n      amount,\n      start,\n      end\n    );\n    const success = await _createStream(data, connection, wallet, pda);\n    setLoading(false);\n\n    if (success) {\n      streamCreated(pda.publicKey.toBase58());\n      const fee = await connection.getMinimumBalanceForRentExemption(96);\n      setBalance(balance - amount - fee / LAMPORTS_PER_SOL);\n      addStream(pda.publicKey.toBase58(), data);\n    }\n  }\n\n  return (\n    <form onSubmit={createStream} id=\"form\">\n      <div className=\"my-4 grid gap-4 grid-cols-5 sm:grid-cols-2\">\n        <Amount onChange={setAmount} value={amount} max={balance} />\n        <SelectToken />\n        <Recipient onChange={setReceiver} value={receiver} />\n        <DateTime\n          title={START}\n          date={startDate}\n          updateDate={setStartDate}\n          time={startTime}\n          updateTime={setStartTime}\n        />\n        <DateTime\n          title={END}\n          date={endDate}\n          updateDate={setEndDate}\n          time={endTime}\n          updateTime={setEndTime}\n        />\n      </div>\n      <Toggle enabled={vesting} setEnabled={setVesting} label=\"Vesting\" />\n      <Vesting visible={vesting} />\n      {wallet?.connected ? (\n        <ButtonPrimary\n          className=\"font-bold text-2xl my-5\"\n          onClick={createStream}\n          disabled={loading}\n        >\n          Stream!\n        </ButtonPrimary>\n      ) : (\n        <>\n          <hr className=\"my-4 sm:hidden\" />\n          <SelectCluster />\n          <WalletPicker />\n        </>\n      )}\n    </form>\n  );\n}\n","import { Address, ButtonPrimary, Link } from \"./index\";\nimport { getExplorerLink } from \"../utils/helpers\";\nimport {\n  AIRDROP_AMOUNT,\n  ERR_NOT_CONNECTED,\n  TX_FINALITY_CONFIRMED,\n} from \"../constants\";\nimport { toast } from \"react-toastify\";\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport useStore, { StoreType } from \"../Stores\";\nimport { CLUSTER_MAINNET } from \"../Stores/NetworkStore\";\n\nconst storeGetter = (state: StoreType) => ({\n  balance: state.balance,\n  setBalance: state.setBalance,\n  isMainnet: state.cluster === CLUSTER_MAINNET,\n  connection: state.connection(),\n  wallet: state.wallet,\n  connectWallet: state.connectWallet,\n  disconnectWallet: state.disconnectWallet,\n  setWalletType: state.setWalletType,\n});\n\nexport default function Account({\n  loading,\n  setLoading,\n}: {\n  loading: boolean;\n  setLoading: Dispatch<SetStateAction<boolean>>;\n}) {\n  const [airdropTxSignature, setAirdropTxSignature] = useState<\n    string | undefined\n  >(undefined);\n  const {\n    connection,\n    wallet,\n    balance,\n    setBalance,\n    isMainnet,\n    disconnectWallet,\n    setWalletType,\n  } = useStore(storeGetter);\n\n  useEffect(() => {\n    if (airdropTxSignature && connection) {\n      connection\n        .confirmTransaction(airdropTxSignature, TX_FINALITY_CONFIRMED)\n        .then((result) => {\n          if (result.value.err) {\n            toast.error(\"Airdrop failed!\");\n          } else {\n            setBalance(balance + AIRDROP_AMOUNT);\n            toast.success(\"Airdrop confirmed. Balance updated!\");\n          }\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [airdropTxSignature]);\n\n  async function requestAirdrop() {\n    if (!wallet?.publicKey || !connection) {\n      toast.error(ERR_NOT_CONNECTED);\n      return;\n    }\n    setLoading(true);\n    const signature = await connection.requestAirdrop(\n      wallet.publicKey,\n      AIRDROP_AMOUNT * LAMPORTS_PER_SOL\n    );\n    setAirdropTxSignature(signature);\n    setLoading(false);\n    toast.success(\"Airdrop requested!\");\n  }\n\n  const walletPubKey = wallet?.publicKey?.toBase58();\n  let myWalletLink = null;\n  let myAddress = null;\n  if (walletPubKey) {\n    myWalletLink = (\n      <Link\n        url={getExplorerLink(\"address\", walletPubKey)}\n        title=\"My Wallet Address\"\n      />\n    );\n    myAddress = <Address address={walletPubKey} className=\"block truncate\" />;\n  }\n\n  return (\n    <>\n      <div className=\"mb-4 text-white\">\n        {myWalletLink}\n        {myAddress}\n      </div>\n      <div className=\"mb-4 clearfix text-white\">\n        <strong className=\"block\">Balance</strong>\n        <span>◎{Number(balance).toFixed(4)}</span>\n        <button\n          type=\"button\"\n          onClick={() => {\n            disconnectWallet();\n            setWalletType(null);\n          }}\n          className=\"float-right items-center px-2.5 py-1.5 shadow-sm text-xs  font-medium rounded bg-gray-500 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n        >\n          Disconnect\n        </button>\n        {wallet?.connected && (\n          <ButtonPrimary\n            onClick={requestAirdrop}\n            className={\n              \"float-right mr-2 px-2.5 py-1.5 text-xs my-0 rounded active:bg-white\" +\n              (isMainnet ? \" hidden\" : \"\")\n            }\n            disabled={loading}\n          >\n            Gimme SOL!\n          </ButtonPrimary>\n        )}\n      </div>\n    </>\n  );\n}\n","import { CLUSTER_DEVNET, CLUSTER_MAINNET } from \"../Stores/NetworkStore\";\nimport useStore, { StoreType } from \"../Stores\";\n\nconst networkStore = (state: StoreType) => ({\n  cluster: state.cluster,\n  setCluster: state.setCluster,\n});\n\nexport default function SelectCluster() {\n  const { cluster, setCluster } = useStore(networkStore);\n  return (\n    <div className=\"sm:absolute top-0 right-0 sm:p-4\">\n      <select\n        id=\"cluster\"\n        name=\"cluster\"\n        className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n        defaultValue={cluster}\n        onChange={(e) => setCluster(e.target.value)}\n      >\n        <option value={CLUSTER_MAINNET} disabled={true}>\n          mainnet\n        </option>\n        <option value={CLUSTER_DEVNET}>{CLUSTER_DEVNET}</option>\n        {/* handy for developers, but not needed for the end user */}\n        {/* <option value={CLUSTER_TESTNET}>{CLUSTER_TESTNET}</option> */}\n        {/* <option value={CLUSTER_LOCAL}>{CLUSTER_LOCAL}</option> */}\n      </select>\n    </div>\n  );\n}\n","import { XIcon } from \"@heroicons/react/outline\";\nimport { Component } from \"react\";\n\ninterface BannerProps {\n  title: string;\n  message: string;\n}\ninterface BannerState {\n  hidden: boolean;\n}\n\n//could be functional component, but we decided to let it manage its own state (open/close)\nexport default class Banner extends Component<BannerProps, BannerState> {\n  state = {\n    hidden: false,\n  };\n\n  render() {\n    return (\n      <div className={`relative bg-primary ${this.state.hidden && \"hidden\"}`}>\n        <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n          <div className=\"pr-16 sm:text-center sm:px-16\">\n            <p className=\"font-small text-white\">\n              <b>{this.props.title}</b>\n              &nbsp;\n              <span className=\"hidden lg:inline\">{this.props.message}</span>\n            </p>\n          </div>\n          <div className=\"absolute inset-y-0 right-0 pt-1 pr-1 flex items-start sm:pt-1 sm:pr-2 sm:items-start\">\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ hidden: true })}\n              className=\"flex p-2 rounded-md hover:bg-primary focus:outline-none focus:ring-2 focus:ring-white\"\n            >\n              <span className=\"sr-only\">Dismiss</span>\n              <XIcon className=\"h-6 w-6 text-white\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { useMemo, useEffect } from \"react\";\nimport useStore, { StoreType } from \"../Stores\";\nimport swal from \"sweetalert\";\nimport {\n  getPhantomWallet,\n  getSolflareWebWallet,\n  getSolflareWallet,\n  getSolletWallet,\n} from \"@solana/wallet-adapter-wallets\";\nimport ButtonPrimary from \"./ButtonPrimary\";\nimport { WalletType } from \"../types\";\n\nconst storeGetter = (state: StoreType) => ({\n  walletType: state.walletType,\n  setWalletType: state.setWalletType,\n  cluster: state.cluster,\n});\n\nconst div = document.createElement(\"div\");\n\nconst addWalletOption = (walletType: WalletType) => {\n  const button = document.createElement(\"div\");\n  const p = document.createElement(\"p\");\n  const img = document.createElement(\"img\");\n  img.src = walletType.icon;\n  img.className = \"h-8 inline-block mr-4\";\n  p.innerHTML = walletType.name;\n  p.className = \"inline-block\";\n  button.className =\n    \"border-primary border cursor-pointer mb-4 p-4 text-primary rounded-md\";\n  button.onclick = () => {\n    if (swal.setActionValue && swal.close) {\n      //@ts-ignore\n      swal.setActionValue({ cancel: walletType });\n      swal.close();\n    }\n  };\n  button.appendChild(img);\n  button.appendChild(p);\n  div.appendChild(button);\n};\n\nconst pickWallet = (\n  walletTypes: WalletType[],\n  setWalletType: (value: any) => any\n) => {\n  div.innerHTML = \"\";\n  for (const w of walletTypes) {\n    addWalletOption(w);\n  }\n  swal({\n    buttons: {},\n    content: { element: div },\n    className: \"bg-gray-800\",\n  }).then(setWalletType);\n};\n\nlet walletInitialized = false;\n\nexport default function WalletPicker() {\n  const { setWalletType, cluster } = useStore(storeGetter);\n  const walletTypes = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSolflareWebWallet({ network: cluster }),\n      getSolflareWallet(),\n      getSolletWallet({ network: cluster }),\n    ],\n    [cluster]\n  );\n\n  useEffect(() => {\n    if (walletInitialized) {\n      return;\n    }\n    walletInitialized = true;\n\n    const type = localStorage.walletType;\n    if (type) {\n      const restoredWalletType = walletTypes.find((w) => w.name === type);\n      if (restoredWalletType) {\n        setWalletType(restoredWalletType);\n      }\n    }\n  }, [setWalletType, walletTypes]);\n  return (\n    <ButtonPrimary\n      className=\"font-bold text-2xl my-5\"\n      onClick={() => pickWallet(walletTypes, setWalletType)}\n    >\n      Connect\n    </ButtonPrimary>\n  );\n}\n","export default function Vesting({ visible }: { visible: boolean }) {\n  return (\n    <div\n      hidden={!visible}\n      className=\"relative text-gray-400 -mx-2 p-2 rounded-md\"\n    >\n      <div\n        className={`absolute text-primary bg-gray-900 opacity-60 top-0 bottom-0 left-0 right-0 z-10 block`}\n      ></div>\n      <label className=\"block mb-2 font-medium text-gray-100 capitalize\">\n        COMING SOON™\n      </label>\n      First{\" \"}\n      <input\n        type=\"number\"\n        defaultValue={25}\n        className=\"text-white p-0.5 bg-gray-800 border-primary w-8 inline border-black rounded-md focus:ring-secondary focus:border-secondary\"\n      />{\" \"}\n      % released at{\" \"}\n      <input\n        type=\"date\"\n        className=\"text-white p-0.5 bg-gray-800 border-primary inline border-black rounded-md focus:ring-secondary focus:border-secondary\"\n      />\n      <br />\n      and then{\" \"}\n      <input\n        type=\"number\"\n        defaultValue={5}\n        className=\"text-white py-0.5 px-1 bg-gray-800 border-primary inline w-5 border-black rounded-md focus:ring-secondary focus:border-secondary\"\n      />{\" \"}\n      % released each{\" \"}\n      <input\n        type=\"number\"\n        defaultValue={2}\n        className=\"text-white py-0.5 px-1 w-5 mt-4 bg-gray-800 border-primary inline border-black rounded-md focus:ring-secondary focus:border-secondary\"\n      />\n      &nbsp;\n      <select\n        className=\"mt-1 text-white p-0.5 pr-7 bg-gray-800 border-primary w-26 rounded-md focus:ring-secondary focus:border-secondary\"\n        defaultValue=\"SOL\"\n      >\n        <option value=\"month\">months</option>\n      </select>\n      <br />\n      <input\n        type=\"checkbox\"\n        readOnly={true}\n        checked={true}\n        className=\"text-primary w-6 h-6 rounded-sm\"\n      />{\" \"}\n      <span className=\"inline-block mt-4\">Transferable</span>\n    </div>\n  );\n}\n","export default function EmptyStreams() {\n  return (\n    <div className=\"mx-auto my-10 text-white text-center\">\n      <span>Payments, vesting schedules and streams will appear here.</span>\n      <br />\n      <span>Start streaming!</span>\n    </div>\n  );\n}\n","import EmptyStreams from \"../Components/EmptyStreams\";\nimport { _swal, getDecodedAccountData } from \"../utils/helpers\";\nimport { Stream } from \"../Components\";\nimport { _cancelStream, _withdrawStream } from \"../Actions\";\nimport { getUnixTime } from \"date-fns\";\nimport {\n  ERR_NOT_CONNECTED,\n  ERR_NO_STREAM,\n  TX_FINALITY_CONFIRMED,\n} from \"../constants\";\nimport { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\nimport useStore, { StoreType } from \"../Stores\";\nimport { toast } from \"react-toastify\";\nimport { useEffect } from \"react\";\nimport { StreamStatus } from \"../types\";\n\nconst storeGetter = (state: StoreType) => ({\n  balance: state.balance,\n  setBalance: state.setBalance,\n  streams: state.streams,\n  addStream: state.addStream,\n  deleteStream: state.deleteStream,\n  clearStreams: state.clearStreams,\n  cluster: state.cluster,\n  wallet: state.wallet,\n  connection: state.connection(),\n});\n\nexport default function StreamsList() {\n  const {\n    wallet,\n    connection,\n    balance,\n    setBalance,\n    streams,\n    addStream,\n    deleteStream,\n    clearStreams,\n    cluster,\n  } = useStore(storeGetter);\n\n  //componentWillMount\n  useEffect(() => {\n    clearStreams();\n    const savedStreams = JSON.parse(localStorage.streams || \"{}\");\n    const publicKey = wallet?.publicKey?.toBase58();\n    if (publicKey === undefined) {\n      toast.error(ERR_NOT_CONNECTED);\n      return;\n    }\n    const newStreams = savedStreams?.[cluster]?.[publicKey] || {};\n    const streamID = window.location.hash.substring(1);\n\n    if (streamID) {\n      try {\n        new PublicKey(streamID);\n        newStreams[streamID] = undefined; // We're setting the data few lines below\n      } catch (e) {\n        toast.error(ERR_NO_STREAM);\n      }\n    }\n\n    for (const id in newStreams) {\n      if (newStreams.hasOwnProperty(id)) {\n        //first, the cleanup\n        let pk = undefined;\n        try {\n          pk = new PublicKey(id);\n        } catch (e: any) {\n          toast.error(e.message + id);\n          //removeStream(id, true);\n        }\n\n        if (pk) {\n          connection?.getAccountInfo(new PublicKey(id)).then((result) => {\n            if (result?.data) {\n              addStream(id, getDecodedAccountData(result.data));\n            } else {\n              if (id === streamID) {\n                toast.error(ERR_NO_STREAM);\n              }\n            }\n          });\n        }\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function withdrawStream(id: string) {\n    if (connection === null || wallet === null || wallet.publicKey === null) {\n      toast.error(ERR_NOT_CONNECTED);\n      return;\n    }\n    const success = await _withdrawStream(id, streams[id], connection, wallet);\n    if (success) {\n      const newBalance =\n        (await connection.getBalance(wallet.publicKey, TX_FINALITY_CONFIRMED)) /\n        LAMPORTS_PER_SOL;\n      const streamData = await connection.getAccountInfo(\n        new PublicKey(id),\n        TX_FINALITY_CONFIRMED\n      );\n      setBalance(newBalance);\n      if (streamData !== null) {\n        addStream(id, getDecodedAccountData(streamData.data));\n      }\n    }\n  }\n\n  async function cancelStream(id: string) {\n    if (connection === null || wallet === null || wallet.publicKey === null) {\n      toast.error(ERR_NOT_CONNECTED);\n      return;\n    }\n    const { amount } = streams[id];\n    const now = new Date();\n    const oldBalance = balance;\n    const success = await _cancelStream(id, streams[id], connection, wallet);\n    if (success) {\n      const newBalance =\n        (await connection.getBalance(wallet.publicKey, TX_FINALITY_CONFIRMED)) /\n        LAMPORTS_PER_SOL;\n      const newWithdrawn = amount - (newBalance - oldBalance);\n      setBalance(newBalance);\n      addStream(id, {\n        ...streams[id],\n        withdrawn: newWithdrawn,\n        canceled_at: getUnixTime(now),\n        status: StreamStatus.canceled,\n      });\n    }\n  }\n\n  async function removeStream(id: string, skipPrompt?: boolean) {\n    if (!skipPrompt && (await _swal())) {\n      deleteStream(id);\n    }\n  }\n\n  if (\n    Object.keys(streams).length === 0 ||\n    wallet?.publicKey?.toBase58() === undefined\n  ) {\n    return <EmptyStreams />;\n  }\n  const entries = Object.entries(streams)\n    .sort(([, stream1], [, stream2]) => stream2.start - stream1.start)\n    .map(([id, data]) => (\n      <Stream\n        key={id}\n        onStatusUpdate={(status) => addStream(id, { ...streams[id], status })}\n        onWithdraw={() => withdrawStream(id)}\n        onCancel={() => cancelStream(id)}\n        id={id}\n        data={data}\n        myAddress={wallet?.publicKey?.toBase58() as string}\n        removeStream={() => removeStream(id)}\n      />\n    ));\n  return <>{entries}</>;\n}\n","import { useState } from \"react\";\nimport { Account, CreateStreamForm, Curtain } from \"../Components\";\nimport StreamsList from \"../Components/StreamsList\";\nimport EmptyStreams from \"../Components/EmptyStreams\";\nimport useStore, { StoreType } from \"../Stores\";\n\nconst storeGetter = (state: StoreType) => state.wallet;\n\nexport default function Main() {\n  const wallet = useStore(storeGetter);\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <div className=\"mx-auto grid grid-cols-1 gap-16 max-w-lg xl:grid-cols-2 xl:max-w-5xl\">\n      <div className=\"mb-8\">\n        <Curtain visible={loading} />\n        {wallet?.connected && (\n          <>\n            <Account loading={loading} setLoading={setLoading} />\n            <hr />\n          </>\n        )}\n        <CreateStreamForm loading={loading} setLoading={setLoading} />\n      </div>\n      <div>\n        <strong className=\"text-white text-center text-2xl block\">\n          My Streams\n        </strong>\n        {wallet?.connected ? <StreamsList /> : <EmptyStreams />}\n      </div>\n    </div>\n  );\n}\n","import { Main } from \"./index\";\nimport {\n  PRODUCT_MULTISIG,\n  PRODUCT_PAYROLL,\n  PRODUCT_STREAMS,\n  PRODUCT_VESTING,\n} from \"../constants\";\nimport { ButtonPrimary, Recipient, SelectToken } from \"../Components\";\nimport { ClockIcon, UploadIcon } from \"@heroicons/react/outline\";\nimport { CheckCircleIcon } from \"@heroicons/react/solid\";\n\nexport default function Products({ product }: { product: string }) {\n  switch (product) {\n    case PRODUCT_STREAMS:\n    case PRODUCT_VESTING:\n      return <Main />;\n    case PRODUCT_PAYROLL:\n      return (\n        <div className=\"mx-auto relative max-w-lg grid gap-2 xl:grid-cols-5 xl:max-w-2xl\">\n          <div\n            className={`absolute text-primary bg-gray-900 opacity-60 top-0 bottom-0 left-0 right-0 z-10 block`}\n          ></div>\n          <ButtonPrimary\n            className=\"col-span-5 block m-auto my-10 w-80\"\n            children={\n              <span>\n                Upload CSV <UploadIcon className=\"inline w-6\" />\n              </span>\n            }\n          />\n          <div className=\"col-span-3\">\n            <Recipient onChange={() => null} value=\"1337...c0de\" />\n          </div>\n          <SelectToken />\n          <div>\n            <label htmlFor=\"amount\" className=\"block font-medium text-gray-100\">\n              Amount\n            </label>\n            <input\n              type=\"number\"\n              value={Math.floor(Math.random() * 666) / 10}\n              className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n            />\n          </div>\n          <input\n            value=\"reci...pient2\"\n            type=\"text\"\n            className=\"col-span-3 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n          />\n          <select\n            className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n            defaultValue=\"SOL\"\n          >\n            <option>SRM</option>\n          </select>\n          <input\n            type=\"number\"\n            value={Math.floor(Math.random() * 666) / 10}\n            className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n          />\n          <div className=\"text-white text-xl col-span-5 text-center\">...</div>\n\n          <input\n            value=\"reci...pientN\"\n            type=\"text\"\n            className=\"col-span-3 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n          />\n          <select\n            className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n            defaultValue=\"SOL\"\n          >\n            <option>STRM</option>\n          </select>\n          <input\n            type=\"number\"\n            value={Math.floor(Math.random() * 666) / 10}\n            className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n          />\n        </div>\n      );\n    case PRODUCT_MULTISIG:\n      return (\n        <div className=\"mx-auto relative max-w-lg xl:max-w-xl\">\n          <div\n            className={`absolute text-primary bg-gray-900 opacity-60 top-0 bottom-0 left-0 right-0 z-10 block`}\n          ></div>\n          <div className=\"text-white mb-4\">\n            Treasury (<b>MyTr...easury</b>) sends 1 SOL to:\n          </div>\n          <div className=\"col-span-3\">\n            <Recipient onChange={() => null} value=\"reci...pient\" />\n            <hr />\n            <ul className=\"text-white mt-4\">\n              <li>\n                1. signature (<b>1337...code</b>) signed at{\" \"}\n                {new Date().toLocaleString()}\n                <CheckCircleIcon className=\"text-green-200 w-6 inline\" />\n              </li>\n              <li>\n                2. signature — WAITING{\" \"}\n                <ClockIcon className=\"text-red-200 w-6 inline\" />\n              </li>\n              <li>\n                3. signature — WAITING{\" \"}\n                <ClockIcon className=\"text-red-200 w-6 inline\" />\n              </li>\n              <li>\n                Execution — WAITING{\" \"}\n                <ClockIcon className=\"text-red-200 w-6 inline\" />\n              </li>\n              <br />\n              <ButtonPrimary>Sign</ButtonPrimary>\n            </ul>\n          </div>\n        </div>\n      );\n    default:\n      return <div></div>;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.c4294b7c.png\";","import { ToastContainer } from \"react-toastify\";\nimport { Products } from \"./Pages\";\nimport { Footer, Logo } from \"./Components\";\nimport logo from \"./logo.png\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useState } from \"react\";\nimport { useFormContext } from \"./Contexts/FormContext\";\nimport { PRODUCT_STREAMS, PRODUCT_VESTING, products } from \"./constants\";\n\nfunction App() {\n  const { setVesting } = useFormContext();\n  const [product, setProduct] = useState(PRODUCT_STREAMS);\n  return (\n    <div>\n      <div className={\"mx-auto bg-blend-darken px-4 my-4\"}>\n        <div className=\"text-center text-white mb-6\">\n          {products.map((prod) => (\n            <span\n              key={prod}\n              onClick={() => {\n                setVesting(prod === PRODUCT_VESTING);\n                setProduct(prod);\n              }}\n              className={`cursor-pointer capitalize inline-block mx-4 \n                              ${\n                                prod === product\n                                  ? \"text-white\"\n                                  : \"text-gray-400\"\n                              }`}\n            >\n              {prod}\n            </span>\n          ))}\n        </div>\n        <Logo src={logo} />\n        <Products product={product} />\n      </div>\n      <ToastContainer hideProgressBar position=\"bottom-left\" limit={5} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\nimport { FormProvider } from \"./Contexts/FormContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <FormProvider>\n      <App />\n    </FormProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();\n","import { clusterApiUrl } from \"@solana/web3.js\";\n\nexport const CLUSTER_LOCAL = \"local\";\nexport const CLUSTER_DEVNET = \"devnet\";\nexport const CLUSTER_TESTNET = \"testnet\";\nexport const CLUSTER_MAINNET = \"mainnet-beta\";\n\nconst clusterUrls: { [s: string]: () => string } = {\n  [CLUSTER_LOCAL]: () => \"http://127.0.0.1:8899\",\n  [CLUSTER_DEVNET]: () => clusterApiUrl(CLUSTER_DEVNET),\n  [CLUSTER_TESTNET]: () => clusterApiUrl(CLUSTER_TESTNET),\n  [CLUSTER_MAINNET]: () => clusterApiUrl(CLUSTER_MAINNET),\n};\n\nconst programIds: { [s: string]: () => string | null } = {\n  [CLUSTER_LOCAL]: () => prompt(\"Program ID?\"),\n  [CLUSTER_DEVNET]: () => \"8tQZMH3NWtoiNDYwTpSZ3GVrRKbMVi2S5Xjy6UcbG5rR\",\n  [CLUSTER_TESTNET]: () => \"8tQZMH3NWtoiNDYwTpSZ3GVrRKbMVi2S5Xjy6UcbG5rR\",\n  [CLUSTER_MAINNET]: () => null, // TODO: publish the program to mainnet\n};\n\nconst useNetworkStore = (set: Function, get: Function) => ({\n  // state\n  cluster: localStorage.cluster || CLUSTER_DEVNET,\n  programId: programIds[localStorage.cluster || CLUSTER_DEVNET](),\n\n  // actions\n  clusterUrl: () => clusterUrls[get().cluster](),\n  explorerUrl: () => {\n    const cluster = get().cluster;\n    return cluster === CLUSTER_LOCAL\n      ? `custom&customUrl=${encodeURIComponent(get().clusterUrl)}`\n      : cluster;\n  },\n  setCluster: (cluster: string) => {\n    get().persistStoreToLocalStorage();\n    const programId = programIds[cluster]();\n    if (programId) {\n      set({ cluster, programId });\n    } else {\n      set({ cluster: CLUSTER_DEVNET, programId: programIds[CLUSTER_DEVNET]() });\n    }\n  },\n});\n\nexport default useNetworkStore;\n","import { ExternalLinkIcon } from \"@heroicons/react/outline\";\n\nexport default function ToastrLink(props: {\n  url: string;\n  urlText: string;\n  nonUrlText: string;\n}) {\n  const { url, urlText, nonUrlText } = props;\n  return (\n    <span>\n      {nonUrlText}\n      <br />\n      <a\n        className=\"font-bold\"\n        href={url}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {urlText}\n        <ExternalLinkIcon className=\"ml-1 w-4 h-4 inline\" />\n      </a>\n    </span>\n  );\n}\n","import { toast } from \"react-toastify\";\nimport { Connection, Keypair, Transaction } from \"@solana/web3.js\";\nimport ToastrLink from \"../Components/ToastrLink\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {\n  ERR_NOT_CONNECTED,\n  INSTRUCTION_CREATE_STREAM,\n  TX_FINALITY_CONFIRMED,\n} from \"../constants\";\nimport { getExplorerLink } from \"../utils/helpers\";\n\nexport default async function sendTransaction(\n  type: number,\n  transaction: Transaction,\n  connection: Connection,\n  wallet: Wallet,\n  pda?: Keypair\n) {\n  try {\n    if (!wallet.publicKey) {\n      throw ERR_NOT_CONNECTED;\n    }\n    transaction.recentBlockhash = (\n      await connection.getRecentBlockhash()\n    ).blockhash;\n    toast.info(\"Please confirm transaction in your wallet.\", {\n      autoClose: 10000,\n    });\n    transaction.feePayer = wallet.publicKey;\n\n    if (type === INSTRUCTION_CREATE_STREAM) {\n      if (pda === undefined) {\n        throw new Error(\"PDA keypair missing - can't create a stream\");\n      }\n      transaction.partialSign(pda);\n    }\n\n    const signed = await wallet.signTransaction(transaction);\n    const signature = await connection.sendRawTransaction(signed.serialize());\n    toast.dismiss();\n    toast.info(\"Submitted transaction. Awaiting confirmation...\", {\n      autoClose: 10000,\n    });\n\n    // can use 'finalized' which gives 100% certainty, but requires much longer waiting.\n    const finality = TX_FINALITY_CONFIRMED;\n    await connection.confirmTransaction(signature, finality);\n    const url = getExplorerLink(\"tx\", signature);\n    toast.dismiss();\n    toast.success(\n      <ToastrLink\n        url={url}\n        urlText=\"View on explorer\"\n        nonUrlText={\n          `Transaction ${finality}!` +\n          (finality === TX_FINALITY_CONFIRMED\n            ? \" Please allow it few seconds to finalize.\"\n            : \"\")\n        }\n      />,\n      { autoClose: 15000, closeOnClick: true }\n    );\n    return true;\n  } catch (e: any) {\n    console.warn(e);\n    //todo log these errors somewhere for our reference\n    toast.error(\"Error: \" + e.message);\n    return false;\n  }\n}\n","export const STREAMFLOW_ACCOUNT_ID =\n  \"61q5sBk7ZtjWJtRxnbhgKjUP9cxvdzmxcGRFxCJhQhdN\";\n","import { StreamStatus } from \"../types\";\n\nexport * from \"./ids\";\n\nexport const AIRDROP_AMOUNT = 1; // 1 SOL is the cap on the testnet\n\nexport const TX_FINALITY_CONFIRMED = \"confirmed\";\nexport const TX_FINALITY_FINALIZED = \"finalized\";\n\nexport const INSTRUCTION_CREATE_STREAM = 0;\nexport const INSTRUCTION_WITHDRAW_STREAM = 1;\nexport const INSTRUCTION_CANCEL_STREAM = 2;\n\nexport const EXPLORER_TYPE_TX = \"tx\";\nexport const EXPLORER_TYPE_ADDR = \"address\";\n\nexport const DATE_FORMAT = \"yyyy-MM-dd\";\nexport const TIME_FORMAT = \"HH:mm\";\nexport const TIME_SUFFIX = \"T00:00\";\n\nexport const START = \"start\";\nexport const END = \"end\";\n\n//might move to a separate class if it becomes clunky\nexport const ERR_NO_STREAM =\n  \"Specified stream doesn't exist. Please double check with the sender.\";\nexport const ERR_NOT_CONNECTED =\n  \"There was an issue with the connection - please try to refresh the page.\";\n\nexport const PRODUCT_STREAMS = \"streams\";\nexport const PRODUCT_VESTING = \"vesting\";\nexport const PRODUCT_PAYROLL = \"payroll\";\nexport const PRODUCT_MULTISIG = \"multisig\";\n\nexport const products = [\n  PRODUCT_STREAMS,\n  PRODUCT_VESTING,\n  PRODUCT_PAYROLL,\n  PRODUCT_MULTISIG,\n];\n\n//don't forget to update tailwind.config.js to safelist dynamically generated classes\nexport const STREAM_STATUS_COLOR = {\n  [StreamStatus.scheduled]: \"gray\", // now < start\n  [StreamStatus.streaming]: \"green\", // start <= now < end\n  [StreamStatus.complete]: \"blue\", //now >= end;\n  [StreamStatus.canceled]: \"red\",\n};\n"],"sourceRoot":""}
{"version":3,"sources":["constants/ids.js","constants/index.js","Components/Recipient.js","Components/SelectToken.js","Components/DateTime.js","Components/Amount.js","Components/Curtain.js","Components/Stream/Badge.js","Components/Stream/ActionButton.js","Components/Stream/Duration.js","Components/Stream/Progress.js","Components/Stream.js","Components/Footer.js","Components/Logo.js","Components/ButtonPrimary.js","Components/Link.js","Components/Address.js","Contexts/FormContext.js","Stores/BalanceStore.js","Contexts/NetworkContext.js","Stores/StreamsStore.js","Components/CreateStreamForm.js","Components/Account.js","Components/SelectCluster.js","Components/Banner.js","Components/EmptyStreams.js","Containers/StreamsContainer.js","Pages/Main.js","Pages/NotConnected.js","logo.png","App.js","index.js","Stores/NetworkStore.js","utils/helpers.js","Components/ToastrLink.js","Actions/sendTransaction.js","Actions/createStream.js","Actions/withdrawStream.js","Actions/cancelStream.js"],"names":["STREAMFLOW_ACCOUNT_ID","SOLLET_URL","AIRDROP_AMOUNT","TX_FINALITY_CONFIRMED","INSTRUCTION_CREATE_STREAM","INSTRUCTION_WITHDRAW_STREAM","INSTRUCTION_CANCEL_STREAM","EXPLORER_TYPE_ADDR","DATE_FORMAT","TIME_FORMAT","STREAM_STATUS_SCHEDULED","STREAM_STATUS_STREAMING","STREAM_STATUS_COMPLETE","STREAM_STATUS_CANCELED","STREAM_STATUS_COLOR","Recipient","props","className","htmlFor","type","name","id","defaultValue","value","onChange","e","target","pattern","placeholder","required","SelectToken","disabled","DateTime","title","date","updateDate","time","updateTime","initializeTime","now","format","add","Date","minutes","min","max","years","onFocus","onClick","Amount","step","autoFocus","Number","MAX_SAFE_INTEGER","Curtain","visible","Badge","color","fill","viewBox","cx","cy","r","ActionButton","action","Duration","fromUnixTime","start","end","memo","Progress","rtl","toFixed","style","width","Stream","data","withdrawn","amount","receiver","sender","status","myAddress","removeStream","onStatusUpdate","onCancel","onWithdraw","useState","getStreamed","streamed","setStreamed","available","setAvailable","showWithdraw","showCancel","useEffect","interval","setInterval","tmpStatus","getUnixTime","updateStatus","clearInterval","Link","url","getExplorerLink","Address","address","timestamp","Footer","src","alt","loading","hideIcon","Logo","ButtonPrimary","children","rest","icon","href","rel","iconClassName","copied","setCopied","copyToClipboard","setTimeout","FormContext","createContext","undefined","FormProvider","setAmount","setReceiver","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","Provider","useBalanceStore","create","set","balance","setBalance","NetworkContext","networkStore","state","clusterUrl","NetworkProvider","cluster","useNetworkStore","providerUrl","selectedWallet","setSelectedWallet","connected","setConnected","connection","useMemo","Connection","urlWallet","Wallet","useNetworkContext","useContext","useStreamStore","streams","localStorage","JSON","parse","setStreams","CreateStreamForm","setLoading","pda","Keypair","generate","validate","element","msg","toDateString","setCustomValidity","createStream","a","form","document","getElementById","elements","checkValidity","reportValidity","StreamData","publicKey","toBase58","_createStream","success","streamCreated","onSubmit","CLUSTER_MAINNET","Account","wallet","airdropTxSignature","setAirdropTxSignature","isMainnet","requestAirdrop","LAMPORTS_PER_SOL","signature","toast","confirmTransaction","then","result","err","error","disconnect","setCluster","SelectCluster","CLUSTER_DEVNET","CLUSTER_TESTNET","CLUSTER_LOCAL","hidden","Component","EmptyStreams","StreamsContainer","_withdrawStream","_cancelStream","canceled_at","skipPrompt","_swal","newStreams","streamID","window","location","hash","substring","PublicKey","hasOwnProperty","pk","message","getAccountInfo","temp","getDecodedAccountData","stringify","Object","keys","length","entries","sort","stream1","map","withdrawStream","cancelStream","Main","NotConnected","height","frameBorder","allowFullScreen","mainComponent","connect","App","on","getBalance","info","logo","hideProgressBar","position","limit","ReactDOM","render","StrictMode","clusterUrls","clusterApiUrl","programIds","prompt","createStore","devtools","get","programId","explorerUrl","encodeURIComponent","addEventListener","getState","property","BufferLayout","blob","uint64","DataLayout","struct","buffer","accountData","decode","u64","fromBuffer","starttime","endtime","recipient","getStreamStatus","this","swal","text","buttons","el","createElement","setAttribute","left","body","appendChild","select","execCommand","removeChild","origin","button","content","attributes","innerHTML","clicked","ToastrLink","urlText","nonUrlText","sendTransaction","transaction","network","getRecentBlockhash","recentBlockhash","blockhash","autoClose","feePayer","partialSign","signTransaction","signed","sendRawTransaction","serialize","dismiss","finality","closeOnClick","console","warn","instruction","getCreateStreamInstruction","tx","Transaction","pdaPub","TransactionInstruction","pubkey","isSigner","isWritable","SystemProgram","encodeInstructionData","layout","u8","u32","nu64","encoded","Buffer","alloc","span","encode","Math","trunc","account_id","getWithdrawStreamInstruction","getCancelStreamInstruction"],"mappings":"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","file":"static/js/main.c01c06b1.chunk.js","sourcesContent":["export const STREAMFLOW_ACCOUNT_ID = \"DrFtxPb9F6SxpHHHFiEtSNXE3SZCUNLXMaHS6r8pkoz2\";","export * from './ids';\n\nexport const SOLLET_URL = 'https://www.sollet.io';\nexport const AIRDROP_AMOUNT = 1; // 1 is the cap on the testnet\n\nexport const TX_FINALITY_CONFIRMED = \"confirmed\";\nexport const TX_FINALITY_FINALIZED = \"finalized\";\n\nexport const INSTRUCTION_CREATE_STREAM = 0;\nexport const INSTRUCTION_WITHDRAW_STREAM = 1;\nexport const INSTRUCTION_CANCEL_STREAM = 2;\n\nexport const EXPLORER_TYPE_TX = \"tx\";\nexport const EXPLORER_TYPE_ADDR = \"address\";\n\nexport const DATE_FORMAT = \"yyyy-MM-dd\";\nexport const TIME_FORMAT = \"HH:mm\";\n\nexport const STREAM_STATUS_SCHEDULED = \"scheduled\";\nexport const STREAM_STATUS_STREAMING = \"streaming\";\nexport const STREAM_STATUS_COMPLETE = \"complete\";\nexport const STREAM_STATUS_CANCELED = \"canceled\";\n\n//don't forget to update tailwind.config.js to safelist dynamically generated classes\nexport const STREAM_STATUS_COLOR = {\n    [STREAM_STATUS_SCHEDULED]: 'gray', // now < start\n    [STREAM_STATUS_STREAMING]: 'green', // start <= now < end\n    [STREAM_STATUS_COMPLETE]: 'blue', //now >= end;\n    [STREAM_STATUS_CANCELED]: 'red',\n}\n","export default function Recipient(props: { onChange: void, value: string }) {\n    return (\n        <div className=\"col-span-full\">\n            <label htmlFor=\"account\" className=\"block font-medium text-gray-100\">\n                Recipient Account\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"account\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    pattern=\"[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}\"\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    placeholder=\"Please double check the address\"\n                    aria-describedby=\"account-description\"\n                    required\n                />\n            </div>\n        </div>\n    )\n}","export default function SelectToken() {\n    return (\n        <div className=\"col-span-2 sm:col-span-1\">\n            <label htmlFor=\"token\" className=\"block font-medium text-gray-100\">\n                Token\n            </label>\n            <select\n                id=\"token\"\n                name=\"token\"\n                className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"                defaultValue=\"SOL\"\n            >\n                <option>SOL</option>\n                <option disabled>ETH - Coming soon️™</option>\n                <option disabled>BTC - Coming soon™</option>\n                <option disabled>USDC - Coming soon™</option>\n                <option disabled>Other tokens...</option>\n            </select>\n        </div>\n    )\n}\n","import {add, format} from \"date-fns\";\nimport {DATE_FORMAT, TIME_FORMAT} from \"../constants\";\nimport {Dispatch, SetStateAction} from \"react\";\n\nexport default function DateTime(props: { title: string, date: string, updateDate: Dispatch<SetStateAction<string>>, time: string, updateTime: Dispatch<SetStateAction<string>> }) {\n    const {title, date, updateDate, time, updateTime} = props;\n\n    function initializeTime() {\n        const now = format(add(new Date(), {minutes: 1}), TIME_FORMAT);\n        if (!time || time < now) {\n            updateTime(now)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"col-span-3 sm:col-span-1\">\n                <label htmlFor={title}\n                       className=\"block font-medium text-gray-100 capitalize\">{title} Date</label>\n                <div className=\"mt-1\">\n                    <input type=\"date\" name={title} id={title}\n                           value={date}\n                           min={format(new Date(), DATE_FORMAT)}\n                           max={format(add(new Date(), {years: 1}), DATE_FORMAT)}\n                           onChange={e => updateDate(e.target.value)}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={title + `-description`} required/>\n                </div>\n            </div>\n            <div className=\"col-span-2 sm:col-span-1\">\n                <label htmlFor={title + `_time`}\n                       className=\"block font-medium text-gray-100 capitalize\">{title} time</label>\n                <div className=\"mt-1\">\n                    <input type=\"time\" name={title + `_time`} id={title + `_time`}\n                           value={time}\n                           onFocus={initializeTime}\n                           onClick={initializeTime}\n                           onChange={e => updateTime(e.target.value)}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={title + `_time-description`} required/>\n                </div>\n            </div>\n        </>\n    )\n}","export default function Amount(props: { onChange: void, max: number, value: number }) {\n    return (\n        <div className=\"col-span-3 sm:col-span-1\">\n            <label htmlFor=\"amount\" className=\"block font-medium text-gray-100\">\n                Amount\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    step=\"any\"\n                    autoFocus={true}\n                    type=\"number\"\n                    name=\"amount\"\n                    id=\"amount\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    min={0}\n                    max={props.max || Number.MAX_SAFE_INTEGER}\n                    placeholder=\"0.00\"\n                    aria-describedby=\"amount-description\"\n                    required={true}\n                />\n            </div>\n        </div>\n    )\n}\n","export default function Curtain(props: { visible: boolean }) {\n    return (\n        <div className={`fixed top-0 bottom-0 left-0 right-0 bg-gray-900 opacity-90 z-10 ${props.visible ? \"block\" : \"hidden\"}`}>\n            <div className=\"loader\"> </div>\n        </div>\n    )\n}","export default function Badge(props: { type: string, color: string }) {\n    const {type, color } = props;\n    return <div className=\"inline\">\n        <span\n            className={`align-top px-2.5 py-0.5 rounded-full text-xs font-medium bg-${color}-100 text-${color}-800 capitalize`}>\n            <svg className={`mr-1 -ml-1 inline align-baseline h-2 w-2 text-${color}-400`} fill=\"currentColor\" viewBox=\"0 0 8 8\">\n              <circle cx={4} cy={4} r={3}/>\n            </svg>\n            {type}\n      </span></div>\n}","export default function ActionButton(props: { title: string, action: void, color: string }) {\n    const {title, action, color} = props;\n\n    return (\n        <button onClick={action}\n                className={`rounded-md text-sm bg-${color}-500 hover:bg-${color}-700 active:bg-${color}-900 text-white py-1 px-2`}>\n            {title}\n        </button>\n    )\n}","import {memo} from 'react'\nimport {format, fromUnixTime} from \"date-fns\";\n\nfunction Duration(props: { start: number, end: number }) {\n    return (\n        <dt className=\"col-span-full text-center\">\n            {(format(fromUnixTime(props.start), \"yyyy-MM-dd HH:mm\"))} &ndash; {(format(fromUnixTime(props.end), \"yyyy-MM-dd HH:mm\"))}\n        </dt>\n    )\n}\n\nexport default memo(Duration);","export default function Progress(props: { title: string, value: number, max: number, rtl?: boolean }) {\n    let {title, value, max, rtl} = props;\n    value = Number(value).toFixed(2);\n    max = Number(max).toFixed(2);\n    return (\n        <>\n            <dt>{title}</dt>\n            <div className=\"rounded-sm h-3 bg-gray-900 w-full my-auto\">\n                <div\n                    className={\"bg-gradient-to-r from-primary to-secondary rounded-sm h-full \" + (rtl ? \"float-right\" : \"\")}\n                    style={{width: value / max * 100 + \"%\"}}>\n                </div>\n            </div>\n            <label className=\"ml-2 text-right truncate\">◎{value}<small className=\"text-gray-400\">/{max}</small></label>\n        </>\n    )\n}","import Badge from \"./Stream/Badge\";\nimport ActionButton from \"./Stream/ActionButton\";\nimport {getUnixTime} from \"date-fns\";\nimport Duration from \"./Stream/Duration\";\nimport Progress from \"./Stream/Progress\";\nimport {useEffect, useState} from \"react\";\nimport {StreamData, getExplorerLink} from \"../utils/helpers\";\nimport {XIcon} from \"@heroicons/react/outline\";\nimport {\n    EXPLORER_TYPE_ADDR,\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COLOR,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants\";\nimport {Address, Link} from \"./index\";\n\nexport default function Stream(props: { data: StreamData, myAddress: string, id: string, removeStream: void, onStatusUpdate: void, onCancel: void, onWithdraw: void }) {\n    const {start, end, withdrawn, amount, receiver, sender, status} = props.data;\n    const {myAddress, removeStream, onStatusUpdate, onCancel, onWithdraw, id} = props;\n\n    const color = STREAM_STATUS_COLOR[status];\n\n    const [streamed, setStreamed] = useState(getStreamed(start, end, amount))\n    const [available, setAvailable] = useState(streamed - withdrawn);\n\n    const showWithdraw = ((status === STREAM_STATUS_STREAMING || (status === STREAM_STATUS_COMPLETE && withdrawn < amount)) && myAddress === receiver);\n    const showCancel = (status === STREAM_STATUS_STREAMING || status === STREAM_STATUS_SCHEDULED) && myAddress === sender\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setStreamed(getStreamed(start, end, amount));\n            setAvailable(streamed - withdrawn);\n            const tmpStatus = updateStatus(status, start, end);\n            if (tmpStatus !== status) {\n                onStatusUpdate(tmpStatus)\n            }\n        }, 1000)\n        return () => clearInterval(interval);\n    });\n\n    return (\n        <dl className={`text-white my-4 grid gap-y-4 gap-x-2 grid-cols-3 p-4 bg-${color}-300 bg-opacity-10 hover:bg-opacity-20 shadow rounded-lg`}>\n            <div className=\"col-span-full\">\n                <Badge className=\"inline\" type={status} color={color}/>\n                <button onClick={removeStream}\n                        className={`p-1.5 h-6 w-6 float-right align-top rounded-sm hover:bg-${color}-100 focus:outline-none focus:ring-1`}>\n                    <XIcon className=\"float-right w-3 h-3\"/>\n                </button>\n            </div>\n            <Duration start={start} end={end}/>\n            <Link url={getExplorerLink(EXPLORER_TYPE_ADDR, id)} title={\"ID\"}/>\n            <Address address={id} className=\"col-span-2 text-sm text-gray-400\"/>\n            <Link url={getExplorerLink(EXPLORER_TYPE_ADDR, receiver)} title={\"Recipient\"}/>\n            <Address address={receiver} className=\"col-span-2 text-sm text-gray-400\"/>\n            <Progress title=\"Withdrawn\" value={withdrawn} max={amount}/>\n            {status === STREAM_STATUS_CANCELED &&\n            <Progress title=\"Returned\" value={amount - withdrawn} max={amount} rtl={true}/>}\n            {status !== STREAM_STATUS_CANCELED &&\n            <>\n                <Progress title=\"Streamed\" value={streamed} max={amount}/>\n                {showWithdraw &&\n                (<>\n                    <dt>Available<br/>\n                        <sup className=\"text-xs text-gray-300 align-top\">for withdrawal</sup></dt>\n                    <dd className=\"col-span-2\">◎{available.toFixed(2)}</dd>\n                    <ActionButton title=\"Withdraw\" action={onWithdraw}\n                                  color={STREAM_STATUS_COLOR[STREAM_STATUS_STREAMING]}/>\n                </>)}\n                {showCancel && <ActionButton title={\"Cancel\"} action={onCancel}\n                                             color={STREAM_STATUS_COLOR[STREAM_STATUS_CANCELED]}/>}\n            </>}\n        </dl>\n    )\n}\n\nexport function getStreamed(start: number, end: number, amount: number, timestamp?: number) {\n    timestamp = timestamp || getUnixTime(new Date());\n\n    if (timestamp < start) return 0\n    if (timestamp > end) return amount;\n\n    return (timestamp - start) / (end - start) * amount;\n}\n\nfunction updateStatus(status: string, start: number, end: number) {\n    const now = getUnixTime(new Date());\n    if (status === STREAM_STATUS_SCHEDULED && now >= start) {\n        return STREAM_STATUS_STREAMING;\n    } else if (status === STREAM_STATUS_STREAMING && now >= end) {\n        return STREAM_STATUS_COMPLETE;\n    } else {\n        return status;\n    }\n}\n","import {Link} from \"./index\";\n\nexport default function Footer() {\n    return (<footer className=\"mt-40 mb-4 text-center text-sm font-mono text-gray-400\">\n        <img src=\"https://solana.com/branding/horizontal/logo-horizontal-gradient-dark.png\"\n             className=\"w-40 mx-auto my-2\" alt=\"Solana logo\" loading=\"lazy\"/>\n        <small>\n            <Link url=\"https://streamflow.finance\" title=\"StreamFlow\" hideIcon={true}/>\n            @ <Link url=\"https://solana.com/solanaszn\" title=\"SolanaSZN\" hideIcon={true}/>\n        </small>\n    </footer>)\n}","export default function Logo(props: {src: string}){\n    return (\n        <div className=\"mb-8 text-white\">\n            <img src={props.src} alt=\"StreamFlow Finance logo\" className=\"w-24 mx-auto\"/>\n            <h1 className=\"text-6xl text-center\">Stream<strong>Flow</strong></h1>\n        </div>\n    )\n}","export default function ButtonPrimary({children, className, ...rest}) {\n    const baseClasses = \"block mx-auto px-8 py-4 bg-gradient-to-br from-primary via-primary to-secondary border-transparent font-medium rounded shadow-sm text-white hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary \"\n    return (\n        <button className={baseClasses + className} {...rest}>\n            {children}\n        </button>\n    )\n}\n","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function Link(props: { url: string, title?: string, className?: string, hideIcon?: boolean}) {\n    const {url, title, className, hideIcon} = props;\n    const icon = hideIcon || <sup><ExternalLinkIcon className=\"w-3 h-3 inline\"/></sup>\n\n    return (\n        <strong className={\"text-gray-300 hover:text-white \" + className}>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {title || url} {icon}\n            </a>\n        </strong>\n    )\n}","import {copyToClipboard} from \"../utils/helpers\";\nimport {DuplicateIcon, CheckIcon} from \"@heroicons/react/outline\";\nimport {useState} from \"react\";\n\nexport default function Address(props: { address: string, className: string }) {\n    const {address, className} = props;\n    const iconClassName = \"h-4 inline mr-1 cursor-pointer hover:opacity-80 align-text-bottom \";\n    const [copied, setCopied] = useState(false)\n\n    function copy() {\n        copyToClipboard(address);\n        setCopied(true);\n        setTimeout(() => {\n            setCopied(false)\n        }, 1000)\n    }\n\n    return (\n        <span className={\"block truncate \" + className}>\n            {copied\n                ? (<span className=\"text-green-300 mr-1\"><CheckIcon className={iconClassName}/><small>Copied!</small></span>)\n                : <DuplicateIcon className={iconClassName} onClick={copy}/>}\n            {address}</span>\n    )\n}\n\n\n","import {format} from \"date-fns\";\nimport {createContext, useContext, useState} from \"react\";\nimport {DATE_FORMAT} from \"../constants\";\n\nconst FormContext = createContext(undefined)\n\nexport function FormProvider(props) {\n    const now = new Date();\n\n    const [amount, setAmount] = useState(undefined);\n    const [receiver, setReceiver] = useState(undefined);\n    const [startDate, setStartDate] = useState(format(now, DATE_FORMAT));\n    const [startTime, setStartTime] = useState(\"\");\n    const [endDate, setEndDate] = useState(startDate);\n    const [endTime, setEndTime] = useState(\"\");\n\n    return <FormContext.Provider value={{\n        amount,\n        setAmount,\n        receiver,\n        setReceiver,\n        startDate,\n        setStartDate,\n        startTime,\n        setStartTime,\n        endDate,\n        setEndDate,\n        endTime,\n        setEndTime\n    }}>{props.children}</FormContext.Provider>\n}\n\nexport function useFormContext() {\n    return useContext(FormContext)\n}","import create from \"zustand\";\n\nconst useBalanceStore = create(set => ({\n    balance: 0,\n    setBalance: balance => set({balance})\n}))\n\nexport default useBalanceStore","import {createContext, useContext, useMemo, useState} from \"react\";\nimport {SOLLET_URL} from \"../constants\";\nimport {Connection} from \"@solana/web3.js\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useNetworkStore from \"../Stores/NetworkStore\"\n\nconst NetworkContext = createContext(undefined)\n\nconst networkStore = state => state.clusterUrl()\n\nexport function NetworkProvider(props) {\n    const cluster = useNetworkStore(networkStore)\n    const [providerUrl,] = useState(SOLLET_URL);\n    const [selectedWallet, setSelectedWallet] = useState(undefined);\n    const [connected, setConnected] = useState(false);\n\n    const connection = useMemo(() => new Connection(cluster), [cluster]);\n    const urlWallet = useMemo(() => new Wallet(providerUrl, cluster), [providerUrl, cluster]);\n\n    return <NetworkContext.Provider value={{\n        providerUrl,\n        selectedWallet,\n        setSelectedWallet,\n        connected,\n        setConnected,\n        connection,\n        urlWallet\n    }}>{props.children}</NetworkContext.Provider>\n\n}\n\nexport function useNetworkContext(){\n    return useContext(NetworkContext)\n}\n","import create from 'zustand'\n\nconst useStreamStore = create(set => ({\n    streams: localStorage.streams ? JSON.parse(localStorage.streams) : {},\n    setStreams: streams => set({streams})\n}))\n\nexport default useStreamStore","import {Amount, ButtonPrimary, DateTime, Recipient, SelectToken,} from \"./index\";\nimport {useFormContext} from \"../Contexts/FormContext\";\nimport {getUnixTime} from \"date-fns\";\nimport {streamCreated, StreamData} from \"../utils/helpers\";\nimport {_createStream} from \"../Actions\";\nimport useBalanceStore from \"../Stores/BalanceStore\";\nimport {Keypair} from \"@solana/web3.js\";\nimport {Dispatch, SetStateAction} from \"react\";\nimport {useNetworkContext} from \"../Contexts/NetworkContext\";\nimport useStreamStore from \"../Stores/StreamsStore\";\nimport useNetworkStore from \"../Stores/NetworkStore\"\n\nconst networkStore = state => state.cluster\n\nexport default function CreateStreamForm({loading, setLoading} : {loading: boolean, setLoading: Dispatch<SetStateAction<boolean>>}) {\n    const pda = Keypair.generate();\n    const {\n        amount,\n        setAmount,\n        receiver,\n        setReceiver,\n        startDate,\n        setStartDate,\n        startTime,\n        setStartTime,\n        endDate,\n        setEndDate,\n        endTime,\n        setEndTime\n    } = useFormContext()\n\n    const {\n        connection, selectedWallet\n    } = useNetworkContext();\n\n    const cluster = useNetworkStore(networkStore)\n\n    const {balance, setBalance} = useBalanceStore()\n    const {streams, setStreams} = useStreamStore()\n\n    function validate(element) {\n        const {name, value} = element;\n        let start;\n        let msg = \"\";\n        switch (name) {\n            case \"start\":\n                msg = new Date(value) < new Date((new Date()).toDateString()) ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"start_time\":\n                start = new Date(startDate + \"T\" + value);\n                msg = start < new Date() ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"end\":\n                msg = new Date(value) < new Date(startDate) ? \"Umm... end date before the start date?\" : \"\";\n                break;\n            case \"end_time\":\n                start = new Date(startDate + \"T\" + startTime);\n                const end = new Date(endDate + \"T\" + value);\n                msg = end < start ? \"Err... end time before the start time?\" : \"\";\n                break;\n            default:\n        }\n        element.setCustomValidity(msg);\n    }\n\n    async function createStream() {\n        const form = document.getElementById('form');\n        for (const elem of form.elements) {\n            validate(elem);\n        }\n\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return false;\n        }\n\n        const start = getUnixTime(new Date(startDate + \"T\" + startTime));\n        let end = getUnixTime(new Date(endDate + \"T\" + endTime));\n\n        // Make sure that end time is always AFTER start time\n        if (end === start) {\n            end = start + 1;\n        }\n\n        setLoading(true);\n        const data = new StreamData(selectedWallet.publicKey.toBase58(), receiver, amount, start, end);\n        const success = await _createStream(data, connection, selectedWallet, cluster, pda)\n        setLoading(false);\n        if (success) {\n            streamCreated(pda.publicKey.toBase58())\n            // const newBalance = await connection.getBalance(selectedWallet.publicKey);\n            setBalance(balance - amount)\n            setStreams({...streams, [pda.publicKey.toBase58()]: data})\n        }\n    }\n\n    return (\n        <form onSubmit={createStream} id=\"form\">\n            <div className=\"my-4 grid gap-4 grid-cols-5 sm:grid-cols-2\">\n                <Amount onChange={setAmount} value={amount} max={balance}/>\n                <SelectToken/>\n                <Recipient onChange={setReceiver} value={receiver}/>\n                <DateTime\n                    title=\"start\"\n                    date={startDate}\n                    updateDate={setStartDate}\n                    time={startTime}\n                    updateTime={setStartTime}\n                />\n                <DateTime\n                    title=\"end\"\n                    date={endDate}\n                    updateDate={setEndDate}\n                    time={endTime}\n                    updateTime={setEndTime}\n                />\n            </div>\n            <ButtonPrimary\n                className=\"font-bold text-2xl my-5\"\n                onClick={createStream}\n                type=\"button\"\n                disabled={loading}\n            >\n                Stream!\n            </ButtonPrimary>\n        </form>\n    );\n}\n","import {Address, ButtonPrimary, Link} from \"./index\";\nimport {getExplorerLink} from \"../utils/helpers\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {AIRDROP_AMOUNT, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {toast} from \"react-toastify\";\nimport {LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {Dispatch, SetStateAction, useEffect, useState} from \"react\";\nimport {useNetworkContext} from \"../Contexts/NetworkContext\";\nimport useBalanceStore from \"../Stores/BalanceStore\";\nimport useNetworkStore, { CLUSTER_MAINNET } from \"../Stores/NetworkStore\"\n\nconst networkStore = state => state.cluster === CLUSTER_MAINNET\n\nexport default function Account({\n                                    wallet,\n                                    loading,\n                                    setLoading\n                                }: { wallet: Wallet, loading: boolean, setLoading: Dispatch<SetStateAction<boolean>> }) {\n\n    const [airdropTxSignature, setAirdropTxSignature] = useState(undefined)\n    const {balance, setBalance} = useBalanceStore()\n    const {connection, selectedWallet} = useNetworkContext()\n    const isMainnet = useNetworkStore(networkStore)\n\n    useEffect(() => {\n        if (airdropTxSignature) {\n            connection.confirmTransaction(airdropTxSignature, TX_FINALITY_CONFIRMED).then(\n                result => {\n                    if (result.value.err) {\n                        toast.error('Airdrop failed!')\n                    } else {\n                        setBalance(balance + AIRDROP_AMOUNT)\n                        toast.success(\"Airdrop confirmed. Balance updated!\")\n                    }\n                }\n            )\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [airdropTxSignature])\n\n    async function requestAirdrop() {\n        setLoading(true);\n        const signature = await connection.requestAirdrop(selectedWallet.publicKey, AIRDROP_AMOUNT * LAMPORTS_PER_SOL);\n        setAirdropTxSignature(signature);\n        setLoading(false);\n        toast.success(\"Airdrop requested!\")\n    }\n\n    return (\n        <>\n            <div className=\"mb-4 text-white\">\n                <Link url={getExplorerLink('address', wallet.publicKey.toBase58())}\n                      title=\"My Wallet Address\"/>\n                <Address address={wallet.publicKey.toBase58()} className=\"block truncate\"/>\n            </div>\n            <div className=\"mb-4 clearfix text-white\">\n                <strong className=\"block\">Balance</strong>\n                <span>◎{Number(balance).toFixed(4)}</span>\n                <button type=\"button\" onClick={() => wallet.disconnect()}\n                        className=\"float-right items-center px-2.5 py-1.5 shadow-sm text-xs  font-medium rounded bg-gray-500 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\">\n                    Disconnect\n                </button>\n                <ButtonPrimary\n                    type=\"button\" onClick={requestAirdrop}\n                    className={\"float-right mr-2 px-2.5 py-1.5 text-xs my-0 rounded active:bg-white\" + (isMainnet ? \" hidden\" : \"\")}\n                    disabled={loading}\n                >\n                    Airdrop\n                </ButtonPrimary>\n            </div>\n        </>\n    )\n}\n","import {CLUSTER_LOCAL, CLUSTER_DEVNET, CLUSTER_TESTNET, CLUSTER_MAINNET} from '../Stores/NetworkStore'\nimport useNetworkStore from \"../Stores/NetworkStore\"\n\nconst networkStore = state => [state.cluster, state.setCluster]\n\nexport default function SelectCluster() {\n    const [cluster, setCluster] = useNetworkStore(networkStore)\n    return (\n        <select\n            id=\"cluster\"\n            name=\"cluster\"\n            className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n            defaultValue={cluster}\n            onChange={e => setCluster(e.target.value)}\n        >\n            <option value={CLUSTER_MAINNET} disabled={true}>{CLUSTER_MAINNET} — soon™</option>\n            <option value={CLUSTER_DEVNET}>{CLUSTER_DEVNET}</option>\n            <option value={CLUSTER_TESTNET}>{CLUSTER_TESTNET}</option>\n            {/* handy for developers, but not needed for the end user */}\n            <option value={CLUSTER_LOCAL} hidden={true}>{CLUSTER_LOCAL}</option>\n        </select>\n    )\n}\n","import {XIcon} from '@heroicons/react/outline'\nimport {Component} from \"react\";\n\n//could be functional component, but we decided to let it manage its own state (open/close)\nexport default class Banner extends Component {\n    state = {\n        hidden: false\n    }\n\n    render() {\n        return (\n            <div className={`relative bg-primary ${this.state.hidden && \"hidden\"}`}>\n                <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n                    <div className=\"pr-16 sm:text-center sm:px-16\">\n                        <p className=\"font-small text-white\">\n                            <b>{this.props.title}</b>\n                            &nbsp;\n                            <span className=\"hidden lg:inline\">{this.props.message}</span>\n                        </p>\n                    </div>\n                    <div\n                        className=\"absolute inset-y-0 right-0 pt-1 pr-1 flex items-start sm:pt-1 sm:pr-2 sm:items-start\">\n                        <button type=\"button\" onClick={() => this.setState({hidden: true})}\n                                className=\"flex p-2 rounded-md hover:bg-primary focus:outline-none focus:ring-2 focus:ring-white\"\n                        >\n                            <span className=\"sr-only\">Dismiss</span>\n                            <XIcon className=\"h-6 w-6 text-white\"/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","export default function EmptyStreams() {\n    return (<div className=\"mx-auto my-10 text-white text-center\">\n        <span>Your streams will appear here.</span>\n        <br/>\n        <span>Start streaming!</span>\n    </div>)\n}","import EmptyStreams from \"../Components/EmptyStreams\";\nimport {_swal, getDecodedAccountData} from \"../utils/helpers\";\nimport {getStreamed, Stream} from \"../Components\";\nimport {_cancelStream, _withdrawStream} from \"../Actions\";\nimport {getUnixTime} from \"date-fns\";\nimport {STREAM_STATUS_CANCELED} from \"../constants\";\nimport {useNetworkContext} from \"../Contexts/NetworkContext\";\nimport useBalanceStore from \"../Stores/BalanceStore\";\nimport useStreamStore from \"../Stores/StreamsStore\";\nimport {PublicKey} from \"@solana/web3.js\";\nimport {toast} from \"react-toastify\";\nimport {useEffect} from \"react\";\nimport useNetworkStore from \"../Stores/NetworkStore\"\n\nconst networkStore = state => state.cluster\n\nexport default function StreamsContainer() {\n\n    const { selectedWallet, connection } = useNetworkContext()\n    const cluster = useNetworkStore(networkStore)\n    const {balance, setBalance} = useBalanceStore()\n    const [streams, setStreams] = useStreamStore(state => [state.streams, state.setStreams])\n\n    //componentWillMount\n    useEffect(() => {\n        const newStreams = {...streams}\n        const streamID = window.location.hash.substring(1);\n\n        if (streamID) {\n            try {\n                new PublicKey(streamID);\n                newStreams[streamID] = undefined; // We're setting the data few lines below\n            } catch (e) {\n                toast.error(\"Stream doesn't exist. Please double check with the sender.\")\n            }\n        }\n\n        for (const id in newStreams) {\n            if (newStreams.hasOwnProperty(id)) {\n                //first, the cleanup\n                let pk = undefined\n                try {\n                    pk = new PublicKey(id);\n                } catch (e) {\n                    toast.error(e.message + id)\n                    //removeStream(id, true);\n                }\n\n                if (pk) {\n                    connection.getAccountInfo(new PublicKey(id)).then(result => {\n                        const temp = {...streams}\n                        if (result?.data) {\n                            temp[id] = getDecodedAccountData(result.data);\n                        } else {\n                            if (id === streamID) {\n                                toast.error(\"Stream doesn't exist. Please double check with the sender.\")\n                            }\n                            delete temp[id]\n                        }\n                        setStreams(temp)\n                    })\n                }\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        localStorage.streams = JSON.stringify(streams);\n    }, [streams])\n\n    async function withdrawStream(id: string) {\n        const {start, end, amount} = streams[id];\n        const success = await _withdrawStream(id, streams[id], connection, selectedWallet, cluster)\n        if (success) {\n            const withdrawn = getStreamed(start, end, amount)\n            setBalance(balance + withdrawn)\n            setStreams({...streams, [id]: {...streams[id], withdrawn}})\n        }\n    }\n\n    async function cancelStream(id: string) {\n        const {start, end, amount} = streams[id];\n        const now = new Date();\n        const withdrawn = getStreamed(start, end, amount);\n        const success = await _cancelStream(id, streams[id], connection, selectedWallet, cluster)\n        if (success) {\n            setBalance(balance + amount - withdrawn)\n            setStreams({\n                ...streams,\n                [id]: {...streams[id], withdrawn, canceled_at: getUnixTime(now), status: STREAM_STATUS_CANCELED}\n            })\n        }\n    }\n\n    async function removeStream(id: string, skipPrompt?: boolean) {\n        if (!skipPrompt && await _swal()) {\n            const newStreams = {...streams}\n            delete newStreams[id];\n            setStreams(newStreams)\n        }\n    }\n\n    return <div>\n        <strong className=\"text-white text-center text-2xl block\">My Streams</strong>\n        {Object.keys(streams).length > 0 ? (\n            Object.entries(streams)\n                .sort(([, stream1], [, stream2]) => stream2.start - stream1.start)\n                .map(([id, data]) => (\n                    <Stream key={id} onStatusUpdate={(status) => setStreams({\n                        ...streams,\n                        [id]: {...streams[id], status}\n                    })}\n                            onWithdraw={() => withdrawStream(id)} onCancel={() => cancelStream(id)}\n                            id={id} data={data} myAddress={selectedWallet.publicKey.toBase58()}\n                            removeStream={() => removeStream(id)}/>\n                ))\n        ) : <EmptyStreams/>}\n    </div>\n}\n","import {useState} from \"react\";\nimport {Account, CreateStreamForm, Curtain} from \"../Components\";\nimport StreamsContainer from \"../Containers/StreamsContainer\";\nimport {useNetworkContext} from \"../Contexts/NetworkContext\";\n\nexport default function Main() {\n    const [loading, setLoading] = useState(false)\n    const {selectedWallet} = useNetworkContext()\n\n    return (\n        <div className=\"mx-auto grid grid-cols-1 gap-16 max-w-lg xl:grid-cols-2 xl:max-w-5xl\">\n            <div className=\"mb-8\">\n                <Curtain visible={loading}/>\n                <Account wallet={selectedWallet} loading={loading} setLoading={setLoading}/>\n                <hr/>\n                <CreateStreamForm loading={loading} setLoading={setLoading}/>\n            </div>\n            <StreamsContainer/>\n        </div>\n    )\n}","import ButtonPrimary from \"../Components/ButtonPrimary\";\n\nexport default function NotConnected(props: { action: () => * }) {\n    return <div className=\"max-w-md mx-auto\">\n        <iframe width=\"100%\" height={270} src=\"https://www.youtube-nocookie.com/embed/7HWzcxu-De0\"\n                title=\"StreamFlow Finance Demo\" frameBorder=\"0\"\n                allowFullScreen>&nbsp;</iframe>\n        <ButtonPrimary className=\"font-bold text-2xl my-5\"\n                       type=\"button\"\n                       onClick={props.action}>\n            Connect\n        </ButtonPrimary>\n    </div>;\n}\n","export default __webpack_public_path__ + \"static/media/logo.c4294b7c.png\";","import {useEffect} from \"react\";\nimport {LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {Main, NotConnected} from \"./Pages\";\nimport {Footer, Logo} from \"./Components\";\nimport {useNetworkContext} from \"./Contexts/NetworkContext\";\nimport useBalanceStore from \"./Stores/BalanceStore\";\nimport SelectCluster from \"./Components/SelectCluster\";\nimport logo from './logo.png'\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst mainComponent = (connected: boolean, selectedWallet: ?Wallet) => {\n    if (connected) {\n        return <Main/>\n    }\n    else {\n        return <>\n            <div className=\"sm:absolute top-0 right-0 p-4\"><SelectCluster/></div>\n            <NotConnected action={() => selectedWallet.connect()}/>\n        </>\n    }\n}\n\nfunction App() {\n    const {\n        selectedWallet,\n        setSelectedWallet,\n        urlWallet,\n        connected,\n        setConnected,\n        connection,\n    } = useNetworkContext()\n\n    const {setBalance} = useBalanceStore()\n\n    useEffect(() => {\n        if (selectedWallet) {\n            selectedWallet.on('connect', () => {\n                setConnected(true);\n                connection.getBalance(selectedWallet.publicKey)\n                    .then(result => setBalance(result / LAMPORTS_PER_SOL));\n                toast.success('Connected to wallet!');\n            });\n            selectedWallet.on('disconnect', () => {\n                setConnected(false);\n                // setSelectedWallet(undefined);\n                toast.info('Disconnected from wallet');\n            });\n            //selectedWallet.connect();\n            return () => {\n                selectedWallet.disconnect();\n            };\n        }\n    }, [connection, selectedWallet, setBalance, setConnected]);\n\n    useEffect(() => {\n        setSelectedWallet(urlWallet)\n    }, [setSelectedWallet, urlWallet])\n\n    return (\n        <div>\n            <div className={\"mx-auto bg-blend-darken px-4 my-4\"}>\n                <Logo src={logo}/>\n                {mainComponent(connected, selectedWallet)}\n            </div>\n            <ToastContainer hideProgressBar position=\"bottom-left\" limit={3}/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport {FormProvider} from \"./Contexts/FormContext\";\nimport {NetworkProvider} from \"./Contexts/NetworkContext\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <NetworkProvider>\n            <FormProvider>\n                <App/>\n            </FormProvider>\n        </NetworkProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();\n","import createStore from 'zustand'\nimport {clusterApiUrl} from \"@solana/web3.js\"\nimport { devtools } from 'zustand/middleware'\n\nexport const CLUSTER_LOCAL = 'local'\nexport const CLUSTER_DEVNET = 'devnet'\nexport const CLUSTER_TESTNET = 'testnet'\nexport const CLUSTER_MAINNET = 'mainnet-beta'\n\nconst clusterUrls = {\n    [CLUSTER_LOCAL]: () => 'http://127.0.0.1:8899',\n    [CLUSTER_DEVNET]: () => clusterApiUrl(CLUSTER_DEVNET),\n    [CLUSTER_TESTNET]: () => clusterApiUrl(CLUSTER_TESTNET),\n    [CLUSTER_MAINNET]: () => clusterApiUrl(CLUSTER_MAINNET),\n}\n\nconst programIds = {\n    [CLUSTER_LOCAL]: () => prompt(\"Program ID?\"),\n    [CLUSTER_DEVNET]: () => \"2DvvSEde36Ch3B52g9hKWDYbfmJimLpJwVBV9Cknypi4\",\n    [CLUSTER_TESTNET]: () => \"8tQZMH3NWtoiNDYwTpSZ3GVrRKbMVi2S5Xjy6UcbG5rR\",\n    [CLUSTER_MAINNET]: () => null, // TODO: publish the program to mainnet\n}\n\nconst networkStore = createStore(devtools((set: Function, get: Function) => ({\n    // state\n    cluster: localStorage.cluster || CLUSTER_DEVNET,\n    programId: programIds[localStorage.cluster || CLUSTER_DEVNET](),\n\n    // actions\n    clusterUrl: () => clusterUrls[get().cluster](),\n    explorerUrl: () => {\n        const cluster = get().cluster\n        return cluster === CLUSTER_LOCAL ? `custom&customUrl=${encodeURIComponent(get().clusterUrl)}` : cluster\n    },\n    setCluster: (cluster: string) => {\n        const programId = programIds[cluster]()\n        if (programId) {\n            set({cluster, programId})\n        }\n        else {\n            set({cluster: CLUSTER_DEVNET, programId: programIds[CLUSTER_DEVNET]()})\n        }\n    }\n})))\n\nwindow.addEventListener(\"beforeunload\", () => {\n    const state = networkStore.getState()\n    localStorage.cluster = state.cluster\n    localStorage.programId = state.programId\n})\n\nexport default networkStore","import {\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants\";\nimport BufferLayout from \"buffer-layout\";\nimport {LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport {u64} from \"@solana/spl-token\";\nimport {getUnixTime} from \"date-fns\";\nimport swal from \"sweetalert\";\nimport {Buffer} from 'buffer/';\nimport useNetworkStore from \"../Stores/NetworkStore\";\n\nexport const publicKey = (property = \"publicKey\"): BufferLayout.Layout => {\n    return BufferLayout.blob(32, property);\n};\n\nexport const uint64 = (property = \"uint64\"): BufferLayout.Layout => {\n    return BufferLayout.blob(8, property);\n};\n\nconst DataLayout = BufferLayout.struct([\n    uint64(\"starttime\"),\n    uint64(\"endtime\"),\n    uint64(\"amount\"),\n    uint64(\"withdrawn\"),\n    publicKey(\"sender\"),\n    publicKey(\"recipient\"),\n]);\n\nexport function getDecodedAccountData(buffer: Buffer) {\n    const accountData = DataLayout.decode(buffer);\n\n    const start = Number(u64.fromBuffer(accountData.starttime));\n    const end = Number(u64.fromBuffer(accountData.endtime));\n    const amount = Number(u64.fromBuffer(accountData.amount)) / LAMPORTS_PER_SOL;\n    const withdrawn = Number(u64.fromBuffer(accountData.withdrawn)) / LAMPORTS_PER_SOL;\n    const sender = (new PublicKey(accountData.sender)).toBase58();\n    const recipient = (new PublicKey(accountData.recipient)).toBase58();\n\n    const status = getStreamStatus(Number(start), Number(end), getUnixTime(new Date())) //in milliseconds\n\n    return new StreamData(sender, recipient, amount, start, end, withdrawn, status);\n}\n\nexport function getExplorerLink(type: string, id: string): string {\n    return `https://explorer.solana.com/${type}/${id}?cluster=${useNetworkStore.getState().explorerUrl()}`;\n}\n\nexport function getStreamStatus(start: number, end: number, now: number) {\n    if (now < start) {\n        return STREAM_STATUS_SCHEDULED\n    } else if (now < end) {\n        return STREAM_STATUS_STREAMING\n    } else {\n        return STREAM_STATUS_COMPLETE\n    }\n}\n\nexport function StreamData(sender: string, receiver: string, amount: number, start: number, end: number, withdrawn?: number, status?: string, canceled_at: number) {\n    this.sender = sender;\n    this.receiver = receiver;\n    this.amount = amount;\n    this.start = start;\n    this.end = end;\n    this.withdrawn = withdrawn || 0;\n    this.status = canceled_at ? STREAM_STATUS_CANCELED : (status || STREAM_STATUS_SCHEDULED);\n    this.canceled_at = canceled_at;\n}\n\nexport function _swal(): Promise {\n    return swal({text: \"Are you sure?\", icon: \"warning\", buttons: true})\n}\n\nexport function copyToClipboard(value): void {\n    const el = document.createElement('textarea');\n    el.value = value;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport function streamCreated(id: string) {\n    const url = window.location.origin + \"#\" + id;\n    swal({\n        button: \"Copy Stream URL\",\n        icon: 'success',\n        title: \"Stream created!\",\n        //sweet alert accepts pure HTML Node, so some wrapping must be done https://sweetalert.js.org/guides/#using-dom-nodes-as-content\n        content:\n            {\n                element: \"a\",\n                attributes: {\n                    className: \"text-primary block truncate max-w-full\",\n                    href: url,\n                    target: \"_blank\",\n                    innerHTML: url\n                }\n            }\n    }).then((clicked) => {\n        if (clicked) {\n            copyToClipboard(url);\n            swal(\"Link copied to clipboard!\", \"Send it to the recipient!\", \"success\")\n        }\n    })\n}\n","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function ToastrLink(props: { url: string, urlText: string, nonUrlText: string }) {\n    const {url, urlText, nonUrlText} = props;\n    return <span>{nonUrlText}<br/>\n        <a className=\"font-bold\"\n           href={url} rel=\"noopener noreferrer\"\n           target=\"_blank\">{urlText}<ExternalLinkIcon className=\"ml-1 w-4 h-4 inline\"/>\n        </a>\n    </span>\n}","import {toast} from \"react-toastify\";\nimport {Connection, Keypair, Transaction} from \"@solana/web3.js\";\nimport ToastrLink from \"../Components/ToastrLink\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {INSTRUCTION_CREATE_STREAM, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {getExplorerLink} from \"../utils/helpers\";\n\nexport default async function sendTransaction(type: number, transaction: Transaction, connection: Connection, wallet: Wallet, network?: string, pda?: Keypair) {\n    try {\n        transaction.recentBlockhash = (await connection.getRecentBlockhash()).blockhash;\n        toast.info('Please confirm transaction in your wallet.', {autoClose: 15000});\n        transaction.feePayer = wallet.publicKey;\n\n        if (type === INSTRUCTION_CREATE_STREAM) {\n            transaction.partialSign(pda);\n        }\n\n        const signed = await wallet.signTransaction(transaction);\n        const signature = await connection.sendRawTransaction(signed.serialize());\n        toast.dismiss();\n        toast.info('Submitted transaction. Awaiting confirmation...', {autoClose:15000});\n\n        // can use 'finalized' which gives 100% certainty, but requires much longer waiting.\n        const finality = TX_FINALITY_CONFIRMED\n        await connection.confirmTransaction(signature, finality)\n        const url = getExplorerLink('tx', signature)\n        toast.dismiss();\n        toast.success(\n            <ToastrLink\n                url={url}\n                urlText=\"View on explorer\"\n                nonUrlText={`Transaction ${finality}!` + (finality === TX_FINALITY_CONFIRMED ? \" Please allow it some time to finalize.\" : \"\")}\n            />,\n            {autoClose: 20000, closeOnClick: false}\n        )\n        return true;\n    } catch (e) {\n        console.warn(e);\n        //todo log these errors somewhere for our reference\n        toast.error('Error: ' + e.message);\n        return false;\n    }\n}\n","import {\n    Connection,\n    Keypair,\n    LAMPORTS_PER_SOL,\n    PublicKey,\n    SystemProgram,\n    Transaction,\n    TransactionInstruction\n} from \"@solana/web3.js\";\nimport BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CREATE_STREAM} from \"../constants\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useNetworkStore from \"../Stores/NetworkStore\"\n\nexport default async function _createStream(data: StreamData, connection: Connection, wallet: Wallet, network?: string, pda: Keypair) {\n    const instruction = getCreateStreamInstruction(data, pda.publicKey)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_CREATE_STREAM, tx, connection, wallet, network, pda);\n}\n\nfunction getCreateStreamInstruction(data: StreamData, pdaPub: PublicKey): TransactionInstruction {\n    const {sender, receiver} = data;\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver), //recipient\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: pdaPub, //PDA used for data\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId, //system program required to make a transfer\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useNetworkStore.getState().programId),\n        data: encodeInstructionData(data),\n    });\n}\n\n\nfunction encodeInstructionData(data: StreamData) {\n    const {amount, start, end} = data;\n    // Packed as little endian\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.u32(\"start\"),\n        BufferLayout.u32(\"end\"),\n        // N.B. JS Number has 53 significant bits, so numbers larger than\n        // 2^53 can be misrepresented\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const encoded = Buffer.alloc(layout.span);\n    layout.encode({\n            instruction: INSTRUCTION_CREATE_STREAM,\n            start: start,\n            end: end,\n            // amount: Number.MAX_SAFE_INTEGER // limited to 2^53 - 1 = 9007199254740991\n            amount: Math.trunc(amount * LAMPORTS_PER_SOL),\n        },\n        encoded\n    );\n\n    // UInt64 alternative is to remove the \"amount\" from layout encoding and\n    // use the following code:\n    // //encoded.writeBigUInt64LE(BigInt(\"18446744073709551615\"), 9)\n\n    return encoded;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_WITHDRAW_STREAM, STREAMFLOW_ACCOUNT_ID} from \"../constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useNetworkStore from \"../Stores/NetworkStore\"\n\nexport default async function _withdrawStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {receiver} = data;\n    const instruction = getWithdrawStreamInstruction(account_id, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_WITHDRAW_STREAM, tx, connection, wallet, network)\n}\n\nfunction getWithdrawStreamInstruction(account_id, receiver) {\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(receiver),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            //needed to transfer the rent only during the final withdrawal transaction\n            pubkey: new PublicKey(STREAMFLOW_ACCOUNT_ID),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useNetworkStore.getState().programId),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const data = Buffer.alloc(layout.span);\n    //TODO - allow withdrawal of arbitrary (allowed) amount\n    layout.encode({\n            instruction: INSTRUCTION_WITHDRAW_STREAM,\n            amount: 0,// 0 = whole available amount is withdrawn.\n        },\n        data\n    );\n    return data;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CANCEL_STREAM} from \"../constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useNetworkStore from \"../Stores/NetworkStore\"\n\nexport default async function _cancelStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {sender, receiver} = data;\n    const instruction = getCancelStreamInstruction(account_id, sender, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_CANCEL_STREAM, tx, connection, wallet, network)\n}\n\nfunction getCancelStreamInstruction(account_id, sender, receiver) {\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useNetworkStore.getState().programId),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([BufferLayout.u8(\"instruction\")]);\n    const data = Buffer.alloc(layout.span);\n\n    layout.encode({instruction: INSTRUCTION_CANCEL_STREAM}, data);\n\n    return data;\n}\n"],"sourceRoot":""}
{"version":3,"sources":["Components/Recipient.js","Components/SelectToken.js","Contexts/FormContext.js","Components/DateTime.js","Components/Amount.js","Components/Curtain.js","Components/Stream/Badge.js","Components/Stream/ActionButton.js","Components/Stream/Duration.js","Components/Stream/Progress.js","Components/Stream.js","Components/Footer.js","Components/Logo.js","Components/ButtonPrimary.js","Components/Link.js","Components/Address.js","Components/CreateStreamForm.js","Components/Account.js","Components/SelectCluster.js","Components/Banner.js","Components/EmptyStreams.js","Containers/StreamsContainer.js","Pages/Main.js","Pages/NotConnected.js","logo.png","App.js","index.js","utils/helpers.js","Stores/BalanceStore.js","Stores/StreamsStore.js","Stores/WalletStore.js","Stores/index.js","Stores/NetworkStore.js","Components/ToastrLink.js","Actions/sendTransaction.js","constants/ids.js","constants/index.js","Actions/createStream.js","Actions/withdrawStream.js","Actions/cancelStream.js"],"names":["Recipient","props","className","htmlFor","type","name","id","defaultValue","value","onChange","e","target","pattern","placeholder","required","SelectToken","disabled","FormContext","createContext","undefined","FormProvider","now","Date","useState","amount","setAmount","receiver","setReceiver","format","DATE_FORMAT","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","Provider","children","useFormContext","useContext","DateTime","title","date","updateDate","time","updateTime","initializeTime","add","minutes","TIME_FORMAT","END","minEndDate","TIME_SUFFIX","min","max","years","onFocus","onClick","Amount","step","autoFocus","Number","MAX_SAFE_INTEGER","Curtain","visible","Badge","color","fill","viewBox","cx","cy","r","ActionButton","action","Duration","fromUnixTime","start","end","memo","Progress","rtl","toFixed","style","width","Stream","data","withdrawn","sender","status","myAddress","removeStream","onStatusUpdate","onCancel","onWithdraw","STREAM_STATUS_COLOR","getStreamed","streamed","setStreamed","available","setAvailable","showWithdraw","STREAM_STATUS_STREAMING","STREAM_STATUS_COMPLETE","showCancel","STREAM_STATUS_SCHEDULED","useEffect","interval","setInterval","tmpStatus","getUnixTime","updateStatus","clearInterval","Link","url","getExplorerLink","EXPLORER_TYPE_ADDR","Address","address","STREAM_STATUS_CANCELED","timestamp","Footer","src","alt","loading","hideIcon","Logo","ButtonPrimary","rest","icon","href","rel","iconClassName","copied","setCopied","copyToClipboard","setTimeout","storeGetter","state","balance","setBalance","addStream","connection","wallet","CreateStreamForm","setLoading","pda","Keypair","generate","useStore","cluster","validate","element","msg","toDateString","setCustomValidity","createStream","a","form","document","getElementById","elements","checkValidity","reportValidity","StreamData","publicKey","toBase58","_createStream","success","streamCreated","getMinimumBalanceForRentExemption","fee","LAMPORTS_PER_SOL","onSubmit","START","isMainnet","CLUSTER_MAINNET","disconnectWallet","Account","airdropTxSignature","setAirdropTxSignature","requestAirdrop","AIRDROP_AMOUNT","signature","toast","confirmTransaction","TX_FINALITY_CONFIRMED","then","result","err","error","networkStore","setCluster","SelectCluster","CLUSTER_DEVNET","CLUSTER_TESTNET","hidden","CLUSTER_LOCAL","Component","EmptyStreams","streams","deleteStream","clearStreams","StreamsContainer","_withdrawStream","getBalance","newBalance","getAccountInfo","PublicKey","streamData","getDecodedAccountData","oldBalance","_cancelStream","newWithdrawn","canceled_at","skipPrompt","_swal","savedStreams","JSON","parse","localStorage","newStreams","streamID","window","location","hash","substring","hasOwnProperty","pk","message","Object","keys","length","entries","sort","stream1","map","withdrawStream","cancelStream","Main","NotConnected","height","frameBorder","allowFullScreen","setStreams","reconnectWallet","App","useReducer","i","forceUpdate","on","info","connect","logo","connected","hideProgressBar","position","limit","ReactDOM","render","StrictMode","property","BufferLayout","blob","uint64","DataLayout","struct","buffer","accountData","decode","u64","fromBuffer","starttime","endtime","recipient","getStreamStatus","getState","explorerUrl","this","swal","text","buttons","el","createElement","setAttribute","left","body","appendChild","select","execCommand","removeChild","origin","button","content","attributes","innerHTML","clicked","useBalanceStore","set","useStreamStore","get","stream","wallets","Sollet","SOLLET_URL","memoizedWallet","memoizedConnection","walletTypeWithFallback","fallback","walletStore","walletType","clusterUrl","key","Wallet","getWallet","Connection","getConnection","setWalletType","persistStoreToLocalStorage","disconnect","programId","existingStreams","walletKey","mergedStreams","stringify","create","devtools","useNetworkStore","useWalletStore","addEventListener","clusterUrls","clusterApiUrl","programIds","prompt","encodeURIComponent","ToastrLink","urlText","nonUrlText","sendTransaction","transaction","network","getRecentBlockhash","recentBlockhash","blockhash","autoClose","feePayer","INSTRUCTION_CREATE_STREAM","partialSign","signTransaction","signed","sendRawTransaction","serialize","dismiss","finality","closeOnClick","console","warn","STREAMFLOW_ACCOUNT_ID","INSTRUCTION_WITHDRAW_STREAM","INSTRUCTION_CANCEL_STREAM","instruction","getCreateStreamInstruction","tx","Transaction","pdaPub","TransactionInstruction","pubkey","isSigner","isWritable","SystemProgram","encodeInstructionData","layout","u8","ns64","nu64","encoded","Buffer","alloc","span","encode","Math","trunc","account_id","getWithdrawStreamInstruction","getCancelStreamInstruction"],"mappings":"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","file":"static/js/main.dd076d53.chunk.js","sourcesContent":["export default function Recipient(props: { onChange: void, value: string }) {\n    return (\n        <div className=\"col-span-full\">\n            <label htmlFor=\"account\" className=\"block font-medium text-gray-100\">\n                Recipient Account\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"account\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    pattern=\"[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}\"\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    placeholder=\"Please double check the address\"\n                    aria-describedby=\"account-description\"\n                    required\n                />\n            </div>\n        </div>\n    )\n}","export default function SelectToken() {\n    return (\n        <div className=\"col-span-2 sm:col-span-1\">\n            <label htmlFor=\"token\" className=\"block font-medium text-gray-100\">\n                Token\n            </label>\n            <select\n                id=\"token\"\n                name=\"token\"\n                className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"                defaultValue=\"SOL\"\n            >\n                <option>SOL</option>\n                <option disabled>ETH - Coming soon️™</option>\n                <option disabled>BTC - Coming soon™</option>\n                <option disabled>USDC - Coming soon™</option>\n                <option disabled>Other tokens...</option>\n            </select>\n        </div>\n    )\n}\n","import {format} from \"date-fns\";\nimport {createContext, useContext, useState} from \"react\";\nimport {DATE_FORMAT} from \"../constants\";\n\nconst FormContext = createContext(undefined)\n\nexport function FormProvider(props) {\n    const now = new Date();\n\n    const [amount, setAmount] = useState(undefined);\n    const [receiver, setReceiver] = useState(undefined);\n    const [startDate, setStartDate] = useState(format(now, DATE_FORMAT));\n    const [startTime, setStartTime] = useState(\"\");\n    const [endDate, setEndDate] = useState(startDate);\n    const [endTime, setEndTime] = useState(\"\");\n\n    return <FormContext.Provider value={{\n        amount,\n        setAmount,\n        receiver,\n        setReceiver,\n        startDate,\n        setStartDate,\n        startTime,\n        setStartTime,\n        endDate,\n        setEndDate,\n        endTime,\n        setEndTime\n    }}>{props.children}</FormContext.Provider>\n}\n\nexport function useFormContext() {\n    return useContext(FormContext)\n}","import {add, format} from \"date-fns\";\nimport {DATE_FORMAT, END, TIME_FORMAT, TIME_SUFFIX} from \"../constants\";\nimport {Dispatch, SetStateAction} from \"react\";\nimport {useFormContext} from \"../Contexts/FormContext\";\n\nexport default function DateTime(props: { title: string, date: string, updateDate: Dispatch<SetStateAction<string>>, time: string, updateTime: Dispatch<SetStateAction<string>> }) {\n    const {title, date, updateDate, time, updateTime} = props;\n    const {startDate, startTime} = useFormContext();\n\n    function getMinDate(): string {\n        if (title === END && startDate) {\n            return format(new Date(startDate + TIME_SUFFIX), DATE_FORMAT);\n        } else {\n            return format(new Date(), DATE_FORMAT);\n        }\n    }\n\n    function initializeTime() {\n        const now = format(add(new Date(), {minutes: 1}), TIME_FORMAT);\n\n        if (title === END) {\n            const minEndDate = startDate ? (new Date(startDate + TIME_SUFFIX)) : (new Date())\n\n            if (!startDate || !date || date < startDate) {\n                updateDate(format(minEndDate, DATE_FORMAT))\n            }\n\n            if (startDate && startDate === date && time <= startTime) {\n                updateTime(format(add(new Date(startDate + 'T' + startTime), {minutes: 5}), TIME_FORMAT));\n            } else if (!startTime) {\n                updateTime(now)\n            }\n        } else if (!time || time < now) {\n            updateTime(now)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"col-span-3 sm:col-span-1\">\n                <label htmlFor={title}\n                       className=\"block font-medium text-gray-100 capitalize\">{title} Date</label>\n                <div className=\"mt-1\">\n                    <input type=\"date\" name={title} id={title}\n                           value={date}\n                           min={getMinDate()}\n                           max={format(add(new Date(), {years: 1}), DATE_FORMAT)}\n                           onFocus={initializeTime}\n                           onClick={initializeTime}\n                           onChange={e => updateDate(e.target.value)}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={title + `-description`} required/>\n                </div>\n            </div>\n            <div className=\"col-span-2 sm:col-span-1\">\n                <label htmlFor={title + `_time`}\n                       className=\"block font-medium text-gray-100 capitalize\">{title} time</label>\n                <div className=\"mt-1\">\n                    <input type=\"time\" name={title + `_time`} id={title + `_time`}\n                           value={time}\n                           onFocus={initializeTime}\n                           onClick={initializeTime}\n                           onChange={e => updateTime(e.target.value)}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={title + `_time-description`} required/>\n                </div>\n            </div>\n        </>\n    )\n}","export default function Amount(props: { onChange: void, max: number, value: number }) {\n    return (\n        <div className=\"col-span-3 sm:col-span-1\">\n            <label htmlFor=\"amount\" className=\"block font-medium text-gray-100\">\n                Amount\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    step=\"any\"\n                    autoFocus={true}\n                    type=\"number\"\n                    name=\"amount\"\n                    id=\"amount\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    min={0}\n                    max={props.max || Number.MAX_SAFE_INTEGER}\n                    placeholder=\"0.00\"\n                    aria-describedby=\"amount-description\"\n                    required={true}\n                />\n            </div>\n        </div>\n    )\n}\n","export default function Curtain(props: { visible: boolean }) {\n    return (\n        <div className={`fixed top-0 bottom-0 left-0 right-0 bg-gray-900 opacity-90 z-10 ${props.visible ? \"block\" : \"hidden\"}`}>\n            <div className=\"loader\"> </div>\n        </div>\n    )\n}","export default function Badge(props: { type: string, color: string }) {\n    const {type, color } = props;\n    return <div className=\"inline\">\n        <span\n            className={`align-top px-2.5 py-0.5 rounded-full text-xs font-medium bg-${color}-100 text-${color}-800 capitalize`}>\n            <svg className={`mr-1 -ml-1 inline align-baseline h-2 w-2 text-${color}-400`} fill=\"currentColor\" viewBox=\"0 0 8 8\">\n              <circle cx={4} cy={4} r={3}/>\n            </svg>\n            {type}\n      </span></div>\n}","export default function ActionButton(props: { title: string, action: void, color: string }) {\n    const {title, action, color} = props;\n\n    return (\n        <button onClick={action}\n                className={`rounded-md text-sm bg-${color}-500 hover:bg-${color}-700 active:bg-${color}-900 text-white py-1 px-2`}>\n            {title}\n        </button>\n    )\n}","import {memo} from 'react'\nimport {format, fromUnixTime} from \"date-fns\";\n\nfunction Duration(props: { start: number, end: number }) {\n    return (\n        <dt className=\"col-span-full text-center\">\n            {(format(fromUnixTime(props.start), \"yyyy-MM-dd HH:mm\"))} &ndash; {(format(fromUnixTime(props.end), \"yyyy-MM-dd HH:mm\"))}\n        </dt>\n    )\n}\n\nexport default memo(Duration);","export default function Progress(props: { title: string, value: number, max: number, rtl?: boolean }) {\n    let {title, value, max, rtl} = props;\n    value = Number(value).toFixed(2);\n    max = Number(max).toFixed(2);\n    return (\n        <>\n            <dt>{title}</dt>\n            <div className=\"rounded-sm h-3 bg-gray-900 w-full my-auto\">\n                <div\n                    className={\"max-w-full bg-gradient-to-r from-primary to-secondary rounded-sm h-full \" + (rtl ? \"float-right\" : \"\")}\n                    style={{width: value / max * 100 + \"%\"}}>\n                </div>\n            </div>\n            <label className=\"ml-2 text-right truncate\">◎{value}<small className=\"text-gray-400\">/{max}</small></label>\n        </>\n    )\n}","import Badge from \"./Stream/Badge\";\nimport ActionButton from \"./Stream/ActionButton\";\nimport {getUnixTime} from \"date-fns\";\nimport Duration from \"./Stream/Duration\";\nimport Progress from \"./Stream/Progress\";\nimport {useEffect, useState} from \"react\";\nimport {StreamData, getExplorerLink} from \"../utils/helpers\";\nimport {XIcon} from \"@heroicons/react/outline\";\nimport {\n    EXPLORER_TYPE_ADDR,\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COLOR,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants\";\nimport {Address, Link} from \"./index\";\n\nexport default function Stream(props: { data: StreamData, myAddress: string, id: string, removeStream: void, onStatusUpdate: void, onCancel: void, onWithdraw: void }) {\n    const {start, end, withdrawn, amount, receiver, sender, status} = props.data;\n    const {myAddress, removeStream, onStatusUpdate, onCancel, onWithdraw, id} = props;\n\n    const color = STREAM_STATUS_COLOR[status];\n\n    const [streamed, setStreamed] = useState(getStreamed(start, end, amount))\n    const [available, setAvailable] = useState(streamed - withdrawn);\n\n    const showWithdraw = ((status === STREAM_STATUS_STREAMING || (status === STREAM_STATUS_COMPLETE && withdrawn < amount)) && myAddress === receiver);\n    const showCancel = (status === STREAM_STATUS_STREAMING || status === STREAM_STATUS_SCHEDULED) && myAddress === sender\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setStreamed(getStreamed(start, end, amount));\n            setAvailable(streamed - withdrawn);\n            const tmpStatus = updateStatus(status, start, end);\n            if (tmpStatus !== status) {\n                onStatusUpdate(tmpStatus)\n            }\n        }, 1000)\n        return () => clearInterval(interval);\n    });\n\n    return (\n        <dl className={`text-white my-4 grid gap-y-4 gap-x-2 grid-cols-3 p-4 bg-${color}-300 bg-opacity-10 hover:bg-opacity-20 shadow rounded-lg`}>\n            <div className=\"col-span-full\">\n                <Badge className=\"inline\" type={status} color={color}/>\n                <button onClick={removeStream}\n                        className={`p-1.5 h-6 w-6 float-right align-top rounded-sm hover:bg-${color}-100 focus:outline-none focus:ring-1`}>\n                    <XIcon className=\"float-right w-3 h-3\"/>\n                </button>\n            </div>\n            <Duration start={start} end={end}/>\n            <Link url={getExplorerLink(EXPLORER_TYPE_ADDR, id)} title={\"ID\"}/>\n            <Address address={id} className=\"col-span-2 text-sm text-gray-400\"/>\n            <Link url={getExplorerLink(EXPLORER_TYPE_ADDR, receiver)} title={\"Recipient\"}/>\n            <Address address={receiver} className=\"col-span-2 text-sm text-gray-400\"/>\n            <Progress title=\"Withdrawn\" value={withdrawn} max={amount}/>\n            {status === STREAM_STATUS_CANCELED &&\n            <Progress title=\"Returned\" value={amount - withdrawn} max={amount} rtl={true}/>}\n            {status !== STREAM_STATUS_CANCELED &&\n            <>\n                <Progress title=\"Streamed\" value={streamed} max={amount}/>\n                {showWithdraw &&\n                (<>\n                    <dt>Available<br/>\n                        <sup className=\"text-xs text-gray-300 align-top\">for withdrawal</sup></dt>\n                    <dd className=\"col-span-2\">◎{available.toFixed(2)}</dd>\n                    <ActionButton title=\"Withdraw\" action={onWithdraw}\n                                  color={STREAM_STATUS_COLOR[STREAM_STATUS_STREAMING]}/>\n                </>)}\n                {showCancel && <ActionButton title={\"Cancel\"} action={onCancel}\n                                             color={STREAM_STATUS_COLOR[STREAM_STATUS_CANCELED]}/>}\n            </>}\n        </dl>\n    )\n}\n\nexport function getStreamed(start: number, end: number, amount: number, timestamp?: number) {\n    timestamp = timestamp || getUnixTime(new Date());\n\n    if (timestamp < start) return 0\n    if (timestamp > end) return amount;\n\n    return (timestamp - start) / (end - start) * amount;\n}\n\nfunction updateStatus(status: string, start: number, end: number) {\n    const now = getUnixTime(new Date());\n    if (status === STREAM_STATUS_SCHEDULED && now >= start) {\n        return STREAM_STATUS_STREAMING;\n    } else if (status === STREAM_STATUS_STREAMING && now >= end) {\n        return STREAM_STATUS_COMPLETE;\n    } else {\n        return status;\n    }\n}\n","import {Link} from \"./index\";\n\nexport default function Footer() {\n    return (<footer className=\"mt-40 mb-4 text-center text-sm font-mono text-gray-400\">\n        <img src=\"https://solana.com/branding/horizontal/logo-horizontal-gradient-dark.png\"\n             className=\"w-40 mx-auto my-2\" alt=\"Solana logo\" loading=\"lazy\"/>\n        <small>\n            <Link url=\"https://streamflow.finance\" title=\"StreamFlow\" hideIcon={true}/>\n            @ <Link url=\"https://solana.com/solanaszn\" title=\"SolanaSZN\" hideIcon={true}/>\n        </small>\n    </footer>)\n}","export default function Logo(props: {src: string}){\n    return (\n        <div className=\"mb-8 text-white\">\n            <img src={props.src} alt=\"StreamFlow Finance logo\" className=\"w-24 mx-auto\"/>\n            <h1 className=\"text-6xl text-center\">Stream<strong>Flow</strong></h1>\n        </div>\n    )\n}","export default function ButtonPrimary({children, className, ...rest}) {\n    const baseClasses = \"block mx-auto px-8 py-4 bg-gradient-to-br from-primary via-primary to-secondary border-transparent font-medium rounded shadow-sm text-white hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary \"\n    return (\n        <button className={baseClasses + className} {...rest}>\n            {children}\n        </button>\n    )\n}\n","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function Link(props: { url: string, title?: string, className?: string, hideIcon?: boolean}) {\n    const {url, title, className, hideIcon} = props;\n    const icon = hideIcon || <sup><ExternalLinkIcon className=\"w-3 h-3 inline\"/></sup>\n\n    return (\n        <strong className={\"text-gray-300 hover:text-white \" + className}>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {title || url} {icon}\n            </a>\n        </strong>\n    )\n}","import {copyToClipboard} from \"../utils/helpers\";\nimport {DuplicateIcon, CheckIcon} from \"@heroicons/react/outline\";\nimport {useState} from \"react\";\n\nexport default function Address(props: { address: string, className: string }) {\n    const {address, className} = props;\n    const iconClassName = \"h-4 inline mr-1 cursor-pointer hover:opacity-80 align-text-bottom \";\n    const [copied, setCopied] = useState(false)\n\n    function copy() {\n        copyToClipboard(address);\n        setCopied(true);\n        setTimeout(() => {\n            setCopied(false)\n        }, 1000)\n    }\n\n    return (\n        <span className={\"block truncate \" + className}>\n            {copied\n                ? (<span className=\"text-green-300 mr-1\"><CheckIcon className={iconClassName}/><small>Copied!</small></span>)\n                : <DuplicateIcon className={iconClassName} onClick={copy}/>}\n            {address}</span>\n    )\n}\n\n\n","import {Amount, ButtonPrimary, DateTime, Recipient, SelectToken,} from \"./index\";\nimport {useFormContext} from \"../Contexts/FormContext\";\nimport {getUnixTime} from \"date-fns\";\nimport {streamCreated, StreamData} from \"../utils/helpers\";\nimport {_createStream} from \"../Actions\";\nimport {Keypair, LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {START, END, TIME_SUFFIX} from \"../constants\";\nimport {Dispatch, SetStateAction} from \"react\";\nimport useStore from \"../Stores\"\n\nconst storeGetter = state => ({\n    balance: state.balance, \n    setBalance: state.setBalance, \n    addStream: state.addStream,\n    connection: state.connection(),\n    wallet: state.wallet(),\n})\n\nexport default function CreateStreamForm({\n                                             loading,\n                                             setLoading\n                                         }: { loading: boolean, setLoading: Dispatch<SetStateAction<boolean>> }) {\n    const pda = Keypair.generate();\n    const {\n        amount,\n        setAmount,\n        receiver,\n        setReceiver,\n        startDate,\n        setStartDate,\n        startTime,\n        setStartTime,\n        endDate,\n        setEndDate,\n        endTime,\n        setEndTime\n    } = useFormContext()\n\n    const { connection, wallet, balance, setBalance, addStream, cluster } = useStore(storeGetter)\n\n    function validate(element) {\n        const {name, value} = element;\n        let start;\n        let msg = '';\n        switch (name) {\n            case \"start\":\n                start = new Date(value + TIME_SUFFIX)\n                const now =  new Date(new Date().toDateString())\n                msg = start < now ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"start_time\":\n                start = new Date(startDate + \"T\" + value);\n                msg = start < new Date() ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"end\":\n                msg = new Date(value + TIME_SUFFIX) < new Date(startDate + TIME_SUFFIX) ? \"Umm... end date before the start date?\" : \"\";\n                break;\n            case \"end_time\":\n                start = new Date(startDate + \"T\" + startTime);\n                const end = new Date(endDate + \"T\" + value);\n                msg = end < start ? \"Err... end time before the start time?\" : \"\";\n                break;\n            default:\n        }\n        element.setCustomValidity(msg);\n    }\n\n    async function createStream() {\n        const form = document.getElementById('form');\n        for (const elem of form.elements) {\n            validate(elem);\n        }\n\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return false;\n        }\n\n        const start = getUnixTime(new Date(startDate + \"T\" + startTime));\n        let end = getUnixTime(new Date(endDate + \"T\" + endTime));\n\n        // Make sure that end time is always AFTER start time\n        if (end === start) {\n            end = start + 1;\n        }\n\n        setLoading(true);\n        const data = new StreamData(wallet.publicKey.toBase58(), receiver, amount, start, end);\n        const success = await _createStream(data, connection, wallet, cluster, pda)\n        setLoading(false);\n\n        if (success) {\n            streamCreated(pda.publicKey.toBase58())\n            const fee = await connection.getMinimumBalanceForRentExemption(96)\n            setBalance(balance - amount - fee / LAMPORTS_PER_SOL);\n            addStream(pda.publicKey.toBase58(), data)\n        }\n    }\n\n    return (\n        <form onSubmit={createStream} id=\"form\">\n            <div className=\"my-4 grid gap-4 grid-cols-5 sm:grid-cols-2\">\n                <Amount onChange={setAmount} value={amount} max={balance}/>\n                <SelectToken/>\n                <Recipient onChange={setReceiver} value={receiver}/>\n                <DateTime\n                    title={START}\n                    date={startDate}\n                    updateDate={setStartDate}\n                    time={startTime}\n                    updateTime={setStartTime}\n                />\n                <DateTime\n                    title={END}\n                    date={endDate}\n                    updateDate={setEndDate}\n                    time={endTime}\n                    updateTime={setEndTime}\n                />\n            </div>\n            <ButtonPrimary\n                className=\"font-bold text-2xl my-5\"\n                onClick={createStream}\n                type=\"button\"\n                disabled={loading}\n            >\n                Stream!\n            </ButtonPrimary>\n        </form>\n    );\n}\n","import {Address, ButtonPrimary, Link} from \"./index\";\nimport {getExplorerLink} from \"../utils/helpers\";\nimport {AIRDROP_AMOUNT, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {toast} from \"react-toastify\";\nimport {LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {Dispatch, SetStateAction, useEffect, useState} from \"react\";\nimport useStore from \"../Stores\"\nimport { CLUSTER_MAINNET } from \"../Stores/NetworkStore\"\n\nconst storeGetter = state => ({\n    balance: state.balance,\n    setBalance: state.setBalance,\n    isMainnet: state.cluster === CLUSTER_MAINNET,\n    connection: state.connection(),\n    wallet: state.wallet(),\n    disconnectWallet: state.disconnectWallet,\n})\n\nexport default function Account({\n                                    loading,\n                                    setLoading\n                                }: { loading: boolean, setLoading: Dispatch<SetStateAction<boolean>> }) {\n\n    const [airdropTxSignature, setAirdropTxSignature] = useState(undefined)\n    const { connection, wallet, balance, setBalance, isMainnet, disconnectWallet } = useStore(storeGetter)\n\n    useEffect(() => {\n        if (airdropTxSignature) {\n            connection.confirmTransaction(airdropTxSignature, TX_FINALITY_CONFIRMED).then(\n                result => {\n                    if (result.value.err) {\n                        toast.error('Airdrop failed!')\n                    } else {\n                        setBalance(balance + AIRDROP_AMOUNT)\n                        toast.success(\"Airdrop confirmed. Balance updated!\")\n                    }\n                }\n            )\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [airdropTxSignature])\n\n    async function requestAirdrop() {\n        setLoading(true);\n        const signature = await connection.requestAirdrop(wallet.publicKey, AIRDROP_AMOUNT * LAMPORTS_PER_SOL);\n        setAirdropTxSignature(signature);\n        setLoading(false);\n        toast.success(\"Airdrop requested!\")\n    }\n\n    return (\n        <>\n            <div className=\"mb-4 text-white\">\n                <Link url={getExplorerLink('address', wallet.publicKey.toBase58())}\n                      title=\"My Wallet Address\"/>\n                <Address address={wallet.publicKey.toBase58()} className=\"block truncate\"/>\n            </div>\n            <div className=\"mb-4 clearfix text-white\">\n                <strong className=\"block\">Balance</strong>\n                <span>◎{Number(balance).toFixed(4)}</span>\n                <button type=\"button\" onClick={disconnectWallet}\n                        className=\"float-right items-center px-2.5 py-1.5 shadow-sm text-xs  font-medium rounded bg-gray-500 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\">\n                    Disconnect\n                </button>\n                <ButtonPrimary\n                    type=\"button\" onClick={requestAirdrop}\n                    className={\"float-right mr-2 px-2.5 py-1.5 text-xs my-0 rounded active:bg-white\" + (isMainnet ? \" hidden\" : \"\")}\n                    disabled={loading}\n                >\n                    Airdrop\n                </ButtonPrimary>\n            </div>\n        </>\n    )\n}\n","import {CLUSTER_LOCAL, CLUSTER_DEVNET, CLUSTER_TESTNET, CLUSTER_MAINNET} from '../Stores/NetworkStore'\nimport useStore from \"../Stores\"\n\nconst networkStore = state => ({cluster: state.cluster, setCluster: state.setCluster})\n\nexport default function SelectCluster() {\n    const {cluster, setCluster} = useStore(networkStore)\n    return (\n        <select\n            id=\"cluster\"\n            name=\"cluster\"\n            className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n            defaultValue={cluster}\n            onChange={e => setCluster(e.target.value)}\n        >\n            <option value={CLUSTER_MAINNET} disabled={true}>mainnet</option>\n            <option value={CLUSTER_DEVNET}>{CLUSTER_DEVNET}</option>\n            {/* handy for developers, but not needed for the end user */}\n            <option value={CLUSTER_TESTNET} hidden={true}>{CLUSTER_TESTNET}</option>\n            <option value={CLUSTER_LOCAL} hidden={true}>{CLUSTER_LOCAL}</option>\n        </select>\n    )\n}\n","import {XIcon} from '@heroicons/react/outline'\nimport {Component} from \"react\";\n\n//could be functional component, but we decided to let it manage its own state (open/close)\nexport default class Banner extends Component {\n    state = {\n        hidden: false\n    }\n\n    render() {\n        return (\n            <div className={`relative bg-primary ${this.state.hidden && \"hidden\"}`}>\n                <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n                    <div className=\"pr-16 sm:text-center sm:px-16\">\n                        <p className=\"font-small text-white\">\n                            <b>{this.props.title}</b>\n                            &nbsp;\n                            <span className=\"hidden lg:inline\">{this.props.message}</span>\n                        </p>\n                    </div>\n                    <div\n                        className=\"absolute inset-y-0 right-0 pt-1 pr-1 flex items-start sm:pt-1 sm:pr-2 sm:items-start\">\n                        <button type=\"button\" onClick={() => this.setState({hidden: true})}\n                                className=\"flex p-2 rounded-md hover:bg-primary focus:outline-none focus:ring-2 focus:ring-white\"\n                        >\n                            <span className=\"sr-only\">Dismiss</span>\n                            <XIcon className=\"h-6 w-6 text-white\"/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","export default function EmptyStreams() {\n    return (<div className=\"mx-auto my-10 text-white text-center\">\n        <span>Your streams will appear here.</span>\n        <br/>\n        <span>Start streaming!</span>\n    </div>)\n}","import EmptyStreams from \"../Components/EmptyStreams\";\nimport {_swal, getDecodedAccountData} from \"../utils/helpers\";\nimport {Stream} from \"../Components\";\nimport {_cancelStream, _withdrawStream} from \"../Actions\";\nimport {getUnixTime} from \"date-fns\";\nimport {STREAM_STATUS_CANCELED, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport useStore from \"../Stores\"\nimport {toast} from \"react-toastify\";\nimport {useEffect} from \"react\";\n\nconst storeGetter = state => ({\n    balance: state.balance,\n    setBalance: state.setBalance,\n    streams: state.streams,\n    addStream: state.addStream,\n    deleteStream: state.deleteStream,\n    clearStreams: state.clearStreams,\n    cluster: state.cluster,\n    wallet: state.wallet(),\n    connection: state.connection(),\n})\n\nexport default function StreamsContainer() {\n    const {wallet, connection, balance, setBalance, streams, addStream, deleteStream, clearStreams, cluster,} = useStore(storeGetter)\n\n    //componentWillMount\n    useEffect(() => {\n        clearStreams()\n        const savedStreams = JSON.parse(localStorage.streams || '{}')\n        const newStreams = savedStreams?.[cluster]?.[wallet?.publicKey?.toBase58()] || {}\n        const streamID = window.location.hash.substring(1);\n\n        if (streamID) {\n            try {\n                new PublicKey(streamID);\n                newStreams[streamID] = undefined; // We're setting the data few lines below\n            } catch (e) {\n                toast.error(\"Stream doesn't exist. Please double check with the sender.\")\n            }\n        }\n\n        for (const id in newStreams) {\n            if (newStreams.hasOwnProperty(id)) {\n                //first, the cleanup\n                let pk = undefined\n                try {\n                    pk = new PublicKey(id);\n                } catch (e) {\n                    toast.error(e.message + id)\n                    //removeStream(id, true);\n                }\n\n                if (pk) {\n                    connection.getAccountInfo(new PublicKey(id)).then(result => {\n                        if (result?.data) {\n                            addStream(id, getDecodedAccountData(result.data));\n                        } else {\n                            if (id === streamID) {\n                                toast.error(\"Stream doesn't exist. Please double check with the sender.\")\n                            }\n                        }\n                    })\n                }\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    async function withdrawStream(id: string) {\n        const success = await _withdrawStream(id, streams[id], connection, wallet, cluster)\n        if (success) {\n            const newBalance = (await connection.getBalance(wallet.publicKey, TX_FINALITY_CONFIRMED)) / LAMPORTS_PER_SOL;\n            const streamData = await connection.getAccountInfo(new PublicKey(id), TX_FINALITY_CONFIRMED)\n            setBalance(newBalance)\n            addStream(id, getDecodedAccountData(streamData.data))\n        }\n    }\n\n    async function cancelStream(id: string) {\n        const {amount, withdrawn} = streams[id];\n        const now = new Date();\n        const oldBalance = balance;\n        const success = await _cancelStream(id, streams[id], connection, wallet, cluster)\n        if (success) {\n            const newBalance = (await connection.getBalance(wallet.publicKey, TX_FINALITY_CONFIRMED)) / LAMPORTS_PER_SOL;\n            const newWithdrawn = amount - (newBalance - oldBalance);\n            setBalance(balance + amount - withdrawn)\n            addStream(\n                id,\n                {\n                    ...streams[id],\n                    withdrawn: newWithdrawn,\n                    canceled_at: getUnixTime(now),\n                    status: STREAM_STATUS_CANCELED\n                }\n            )\n        }\n    }\n\n    async function removeStream(id: string, skipPrompt?: boolean) {\n        if (!skipPrompt && await _swal()) {\n            deleteStream(id)\n        }\n    }\n\n    return <div>\n        <strong className=\"text-white text-center text-2xl block\">My Streams</strong>\n        {Object.keys(streams).length > 0 ? (\n            Object.entries(streams)\n                .sort(([, stream1], [, stream2]) => stream2.start - stream1.start)\n                .map(([id, data]) => (\n                    <Stream key={id} onStatusUpdate={(status) => addStream(id, {...streams[id], status})}\n                            onWithdraw={() => withdrawStream(id)} onCancel={() => cancelStream(id)}\n                            id={id} data={data} myAddress={wallet.publicKey.toBase58()}\n                            removeStream={() => removeStream(id)}/>\n                ))\n        ) : <EmptyStreams/>}\n    </div>\n}\n","import {useState} from \"react\";\nimport {Account, CreateStreamForm, Curtain} from \"../Components\";\nimport StreamsContainer from \"../Containers/StreamsContainer\";\n\nexport default function Main() {\n    const [loading, setLoading] = useState(false)\n\n    return (\n        <div className=\"mx-auto grid grid-cols-1 gap-16 max-w-lg xl:grid-cols-2 xl:max-w-5xl\">\n            <div className=\"mb-8\">\n                <Curtain visible={loading}/>\n                <Account loading={loading} setLoading={setLoading}/>\n                <hr/>\n                <CreateStreamForm loading={loading} setLoading={setLoading}/>\n            </div>\n            <StreamsContainer/>\n        </div>\n    )\n}","import ButtonPrimary from \"../Components/ButtonPrimary\";\n\nexport default function NotConnected(props: { action: () => * }) {\n    return <div className=\"max-w-md mx-auto\">\n        <iframe width=\"100%\" height={270} src=\"https://www.youtube-nocookie.com/embed/7HWzcxu-De0\"\n                title=\"StreamFlow Finance Demo\" frameBorder=\"0\"\n                allowFullScreen>&nbsp;</iframe>\n        <ButtonPrimary className=\"font-bold text-2xl my-5\"\n                       type=\"button\"\n                       onClick={props.action}>\n            Connect\n        </ButtonPrimary>\n    </div>;\n}\n","export default __webpack_public_path__ + \"static/media/logo.c4294b7c.png\";","import {useEffect, useReducer} from \"react\";\nimport {LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {Main, NotConnected} from \"./Pages\";\nimport {Footer, Logo} from \"./Components\";\nimport useStore from \"./Stores\"\nimport SelectCluster from \"./Components/SelectCluster\";\nimport logo from './logo.png'\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst storeGetter = state => ({\n    wallet: state.wallet(),\n    cluster: state.cluster,\n    connection: state.connection(),\n    setBalance: state.setBalance,\n    setStreams: state.setStreams,\n    disconnectWallet: state.disconnectWallet,\n})\n\nlet reconnectWallet = false\n\nfunction App() {\n    const {\n        wallet,\n        cluster,\n        connection,\n        setBalance,\n        setStreams,\n        disconnectWallet,\n    } = useStore(storeGetter)\n\n    const [, forceUpdate] = useReducer(i => ++i, 0)\n\n    useEffect(() => {\n        if (wallet) {\n            wallet.on('connect', () => {\n                reconnectWallet = false\n                forceUpdate()\n                connection.getBalance(wallet.publicKey)\n                    .then(result => setBalance(result / LAMPORTS_PER_SOL));\n                toast.success('Connected to wallet!');\n            });\n            wallet.on('disconnect', () => {\n                forceUpdate()\n                toast.info('Disconnected from wallet');\n            });\n            if (reconnectWallet) {\n                setTimeout(() => wallet.connect(), 0)\n            }\n            return () => {\n                reconnectWallet = true\n                disconnectWallet()\n            };\n        }\n    }, [connection, wallet, cluster, setBalance, setStreams, disconnectWallet]);\n\n    return (\n        <div>\n            <div className={\"mx-auto bg-blend-darken px-4 my-4\"}>\n                <Logo src={logo}/>\n                <div className=\"sm:absolute top-0 right-0 p-4\"><SelectCluster/></div>\n                {wallet.connected ? <Main/> : <NotConnected action={() => wallet?.connect()}/>}\n            </div>\n            <ToastContainer hideProgressBar position=\"bottom-left\" limit={3}/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport {FormProvider} from \"./Contexts/FormContext\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <FormProvider>\n            <App/>\n        </FormProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();\n","import {\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants\";\nimport BufferLayout from \"buffer-layout\";\nimport {LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport {u64} from \"@solana/spl-token\";\nimport {getUnixTime} from \"date-fns\";\nimport swal from \"sweetalert\";\nimport {Buffer} from 'buffer/';\nimport useStore from \"../Stores\"\n\nexport const publicKey = (property = \"publicKey\"): BufferLayout.Layout => {\n    return BufferLayout.blob(32, property);\n};\n\nexport const uint64 = (property = \"uint64\"): BufferLayout.Layout => {\n    return BufferLayout.blob(8, property);\n};\n\nconst DataLayout = BufferLayout.struct([\n    uint64(\"starttime\"),\n    uint64(\"endtime\"),\n    uint64(\"amount\"),\n    uint64(\"withdrawn\"),\n    publicKey(\"sender\"),\n    publicKey(\"recipient\"),\n]);\n\nexport function getDecodedAccountData(buffer: Buffer) {\n    const accountData = DataLayout.decode(buffer);\n\n    const start = Number(u64.fromBuffer(accountData.starttime));\n    const end = Number(u64.fromBuffer(accountData.endtime));\n    const amount = Number(u64.fromBuffer(accountData.amount)) / LAMPORTS_PER_SOL;\n    const withdrawn = Number(u64.fromBuffer(accountData.withdrawn)) / LAMPORTS_PER_SOL;\n    const sender = (new PublicKey(accountData.sender)).toBase58();\n    const recipient = (new PublicKey(accountData.recipient)).toBase58();\n\n    const status = getStreamStatus(Number(start), Number(end), getUnixTime(new Date())) //in milliseconds\n\n    return new StreamData(sender, recipient, amount, start, end, withdrawn, status);\n}\n\nexport function getExplorerLink(type: string, id: string): string {\n    return `https://explorer.solana.com/${type}/${id}?cluster=${useStore.getState().explorerUrl()}`;\n}\n\nexport function getStreamStatus(start: number, end: number, now: number) {\n    if (now < start) {\n        return STREAM_STATUS_SCHEDULED\n    } else if (now < end) {\n        return STREAM_STATUS_STREAMING\n    } else {\n        return STREAM_STATUS_COMPLETE\n    }\n}\n\nexport function StreamData(sender: string, receiver: string, amount: number, start: number, end: number, withdrawn?: number, status?: string, canceled_at: number) {\n    this.sender = sender;\n    this.receiver = receiver;\n    this.amount = amount;\n    this.start = start;\n    this.end = end;\n    this.withdrawn = withdrawn || 0;\n    this.status = canceled_at ? STREAM_STATUS_CANCELED : (status || STREAM_STATUS_SCHEDULED);\n    this.canceled_at = canceled_at;\n}\n\nexport function _swal(): Promise {\n    return swal({text: \"Are you sure?\", icon: \"warning\", buttons: true})\n}\n\nexport function copyToClipboard(value): void {\n    const el = document.createElement('textarea');\n    el.value = value;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport function streamCreated(id: string) {\n    const url = window.location.origin + \"#\" + id;\n    swal({\n        button: \"Copy Stream URL\",\n        icon: 'success',\n        title: \"Stream created!\",\n        //sweet alert accepts pure HTML Node, so some wrapping must be done https://sweetalert.js.org/guides/#using-dom-nodes-as-content\n        content:\n            {\n                element: \"a\",\n                attributes: {\n                    className: \"text-primary block truncate max-w-full\",\n                    href: url,\n                    target: \"_blank\",\n                    innerHTML: url\n                }\n            }\n    }).then((clicked) => {\n        if (clicked) {\n            copyToClipboard(url);\n            swal(\"Link copied to clipboard!\", \"Send it to the recipient!\", \"success\")\n        }\n    })\n}\n","const useBalanceStore = (set: Function) => ({\n    balance: 0,\n    setBalance: balance => set({balance})\n})\n\nexport default useBalanceStore","const useStreamStore = (set: Function, get: Function) => ({\n    streams: {},\n    addStream: (id: string, stream: Object) => set({streams: {...get().streams, [id]: stream}}),\n    deleteStream: (id: string) => {\n        const streams = {...get().streams}\n        delete streams[id]\n        set({streams})\n    },\n    clearStreams: () => set({streams: {}}),\n})\n\nexport default useStreamStore","import { SOLLET_URL } from '../constants'\nimport { Connection } from \"@solana/web3.js\"\nimport Wallet from \"@project-serum/sol-wallet-adapter\"\n\nconst wallets = {\n    Sollet: SOLLET_URL,\n}\n\nlet memoizedWallet = {}\nlet memoizedConnection = {}\n\nconst walletTypeWithFallback = (type: ?string, fallback?: ?string = null) => !type || !(type in wallets) ? fallback : type\n\nconst getWallet = (type: ?string, clusterUrl: ?string) => {\n    if (!clusterUrl || !walletTypeWithFallback(type)) {\n        return null\n    }\n    const key = clusterUrl + type\n    if (! memoizedWallet[key]) {\n        memoizedWallet = {[key]: new Wallet(wallets[type], clusterUrl)}\n    }\n    return memoizedWallet[key]\n}\n\nconst getConnection = (clusterUrl: ?string) => {\n    if (!clusterUrl) {\n        return null\n    }\n    const key = clusterUrl\n    if (! memoizedConnection[key]) {\n        memoizedConnection = {[key]: new Connection(clusterUrl)}\n    }\n    return memoizedConnection[key]\n}\n\nconst walletStore = (set: Function, get: Function) => ({\n    // state\n    walletType: walletTypeWithFallback(localStorage.walletType, 'Sollet'),\n    wallet: () => {\n        const state = get()\n        return getWallet(state.walletType, state.clusterUrl())\n    },\n    connection: () => getConnection(get().clusterUrl()),\n\n    // actions\n    setWalletType: (walletType: string) => {\n        get().persistStoreToLocalStorage()\n        set({walletType})\n    },\n    disconnectWallet: () => {\n        const state = get()\n        state.persistStoreToLocalStorage()\n        state.wallet()?.disconnect()\n    },\n})\n\nexport default walletStore","import create from 'zustand'\nimport { devtools } from 'zustand/middleware'\nimport useBalanceStore from './BalanceStore'\nimport useNetworkStore from './NetworkStore'\nimport useStreamStore from './StreamsStore'\nimport useWalletStore from './WalletStore'\n\nconst persistStoreToLocalStorage = () => {\n    const state = useStore.getState()\n    localStorage.cluster = state.cluster\n    localStorage.programId = state.programId\n    localStorage.walletType = state.walletType\n\n    const existingStreams = JSON.parse(localStorage.streams || '{}')\n    const walletKey = state.wallet()?.publicKey\n    if (walletKey) {\n        // put current streams in localStorage without overwriting\n        // the exiting ones in other wallets or clusters\n        // localStorage.streams[state.cluster][walletKey] = state.streams\n        const mergedStreams = {\n            ...existingStreams,\n            [state.cluster]: {\n                ...existingStreams[state.cluster],\n                [walletKey.toBase58()]: state.streams\n            }\n        }\n        localStorage.streams = JSON.stringify(mergedStreams)\n    }\n}\n\nconst useStore = create(devtools((set, get) => ({\n    ...useBalanceStore(set, get),\n    ...useNetworkStore(set, get),\n    ...useStreamStore(set, get),\n    ...useWalletStore(set, get),\n    persistStoreToLocalStorage,\n})))\n\nwindow.addEventListener(\"beforeunload\", persistStoreToLocalStorage)\n\nexport default useStore","import {clusterApiUrl} from \"@solana/web3.js\"\n\nexport const CLUSTER_LOCAL = 'local'\nexport const CLUSTER_DEVNET = 'devnet'\nexport const CLUSTER_TESTNET = 'testnet'\nexport const CLUSTER_MAINNET = 'mainnet-beta'\n\nconst clusterUrls = {\n    [CLUSTER_LOCAL]: () => 'http://127.0.0.1:8899',\n    [CLUSTER_DEVNET]: () => clusterApiUrl(CLUSTER_DEVNET),\n    [CLUSTER_TESTNET]: () => clusterApiUrl(CLUSTER_TESTNET),\n    [CLUSTER_MAINNET]: () => clusterApiUrl(CLUSTER_MAINNET),\n}\n\nconst programIds = {\n    [CLUSTER_LOCAL]: () => prompt(\"Program ID?\"),\n    [CLUSTER_DEVNET]: () => \"8tQZMH3NWtoiNDYwTpSZ3GVrRKbMVi2S5Xjy6UcbG5rR\",\n    [CLUSTER_TESTNET]: () => \"8tQZMH3NWtoiNDYwTpSZ3GVrRKbMVi2S5Xjy6UcbG5rR\",\n    [CLUSTER_MAINNET]: () => null, // TODO: publish the program to mainnet\n}\n\nconst useNetworkStore = (set: Function, get: Function) => ({\n    // state\n    cluster: localStorage.cluster || CLUSTER_DEVNET,\n    programId: programIds[localStorage.cluster || CLUSTER_DEVNET](),\n\n    // actions\n    clusterUrl: () => clusterUrls[get().cluster](),\n    explorerUrl: () => {\n        const cluster = get().cluster\n        return cluster === CLUSTER_LOCAL ? `custom&customUrl=${encodeURIComponent(get().clusterUrl)}` : cluster\n    },\n    setCluster: (cluster: string) => {\n        get().persistStoreToLocalStorage()\n        const programId = programIds[cluster]()\n        if (programId) {\n            set({cluster, programId})\n        }\n        else {\n            set({cluster: CLUSTER_DEVNET, programId: programIds[CLUSTER_DEVNET]()})\n        }\n    }\n})\n\nexport default useNetworkStore","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function ToastrLink(props: { url: string, urlText: string, nonUrlText: string }) {\n    const {url, urlText, nonUrlText} = props;\n    return <span>{nonUrlText}<br/>\n        <a className=\"font-bold\"\n           href={url} rel=\"noopener noreferrer\"\n           target=\"_blank\">{urlText}<ExternalLinkIcon className=\"ml-1 w-4 h-4 inline\"/>\n        </a>\n    </span>\n}","import {toast} from \"react-toastify\";\nimport {Connection, Keypair, Transaction} from \"@solana/web3.js\";\nimport ToastrLink from \"../Components/ToastrLink\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {INSTRUCTION_CREATE_STREAM, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {getExplorerLink} from \"../utils/helpers\";\n\nexport default async function sendTransaction(type: number, transaction: Transaction, connection: Connection, wallet: Wallet, network?: string, pda?: Keypair) {\n    try {\n        transaction.recentBlockhash = (await connection.getRecentBlockhash()).blockhash;\n        toast.info('Please confirm transaction in your wallet.', {autoClose: 10000});\n        transaction.feePayer = wallet.publicKey;\n\n        if (type === INSTRUCTION_CREATE_STREAM) {\n            transaction.partialSign(pda);\n        }\n\n        const signed = await wallet.signTransaction(transaction);\n        const signature = await connection.sendRawTransaction(signed.serialize());\n        toast.dismiss();\n        toast.info('Submitted transaction. Awaiting confirmation...', {autoClose: 10000});\n\n        // can use 'finalized' which gives 100% certainty, but requires much longer waiting.\n        const finality = TX_FINALITY_CONFIRMED\n        await connection.confirmTransaction(signature, finality)\n        const url = getExplorerLink('tx', signature)\n        toast.dismiss();\n        toast.success(\n            <ToastrLink\n                url={url}\n                urlText=\"View on explorer\"\n                nonUrlText={`Transaction ${finality}!` + (finality === TX_FINALITY_CONFIRMED ? \" Please allow it few seconds to finalize.\" : \"\")}\n            />,\n            {autoClose: 15000, closeOnClick: true}\n        )\n        return true;\n    } catch (e) {\n        console.warn(e);\n        //todo log these errors somewhere for our reference\n        toast.error('Error: ' + e.message);\n        return false;\n    }\n}\n","export const STREAMFLOW_ACCOUNT_ID = \"61q5sBk7ZtjWJtRxnbhgKjUP9cxvdzmxcGRFxCJhQhdN\";","export * from './ids';\n\nexport const SOLLET_URL = 'https://www.sollet.io';\nexport const AIRDROP_AMOUNT = 1; // 1 SOL is the cap on the testnet\n\nexport const TX_FINALITY_CONFIRMED = \"confirmed\";\nexport const TX_FINALITY_FINALIZED = \"finalized\";\n\nexport const INSTRUCTION_CREATE_STREAM = 0;\nexport const INSTRUCTION_WITHDRAW_STREAM = 1;\nexport const INSTRUCTION_CANCEL_STREAM = 2;\n\nexport const EXPLORER_TYPE_TX = \"tx\";\nexport const EXPLORER_TYPE_ADDR = \"address\";\n\nexport const DATE_FORMAT = \"yyyy-MM-dd\";\nexport const TIME_FORMAT = \"HH:mm\";\nexport const TIME_SUFFIX = \"T00:00\";\n\nexport const START = \"start\";\nexport const END = \"end\";\n\nexport const STREAM_STATUS_SCHEDULED = \"scheduled\";\nexport const STREAM_STATUS_STREAMING = \"streaming\";\nexport const STREAM_STATUS_COMPLETE = \"complete\";\nexport const STREAM_STATUS_CANCELED = \"canceled\";\n\n//don't forget to update tailwind.config.js to safelist dynamically generated classes\nexport const STREAM_STATUS_COLOR = {\n    [STREAM_STATUS_SCHEDULED]: 'gray', // now < start\n    [STREAM_STATUS_STREAMING]: 'green', // start <= now < end\n    [STREAM_STATUS_COMPLETE]: 'blue', //now >= end;\n    [STREAM_STATUS_CANCELED]: 'red',\n}\n","import {\n    Connection,\n    Keypair,\n    LAMPORTS_PER_SOL,\n    PublicKey,\n    SystemProgram,\n    Transaction,\n    TransactionInstruction\n} from \"@solana/web3.js\";\nimport BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CREATE_STREAM} from \"../constants\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\"\n\nexport default async function _createStream(data: StreamData, connection: Connection, wallet: Wallet, network?: string, pda: Keypair) {\n    const instruction = getCreateStreamInstruction(data, pda.publicKey)\n    const tx = new Transaction({feePayer: wallet.publicKey}).add(instruction);\n    return await sendTransaction(INSTRUCTION_CREATE_STREAM, tx, connection, wallet, network, pda);\n}\n\nfunction getCreateStreamInstruction(data: StreamData, pdaPub: PublicKey): TransactionInstruction {\n    const {sender, receiver} = data;\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver), //recipient\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: pdaPub, //PDA used for data\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId, //system program required to make a transfer\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useStore.getState().programId),\n        data: encodeInstructionData(data),\n    });\n}\n\n\nfunction encodeInstructionData(data: StreamData) {\n    const {amount, start, end} = data;\n    // Packed as little endian\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.ns64(\"start\"),\n        BufferLayout.ns64(\"end\"),\n        // N.B. JS Number has 53 significant bits, so numbers larger than\n        // 2^53 can be misrepresented\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const encoded = Buffer.alloc(layout.span);\n    layout.encode({\n            instruction: INSTRUCTION_CREATE_STREAM,\n            start: start,\n            end: end,\n            // amount: Number.MAX_SAFE_INTEGER // limited to 2^53 - 1 = 9007199254740991\n            amount: Math.trunc(amount * LAMPORTS_PER_SOL),\n        },\n        encoded\n    );\n\n    // UInt64 alternative is to remove the \"amount\" from layout encoding and\n    // use the following code:\n    // //encoded.writeBigUInt64LE(BigInt(\"18446744073709551615\"), 9)\n\n    return encoded;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_WITHDRAW_STREAM, STREAMFLOW_ACCOUNT_ID} from \"../constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\"\n\nexport default async function _withdrawStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {receiver} = data;\n    const instruction = getWithdrawStreamInstruction(account_id, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_WITHDRAW_STREAM, tx, connection, wallet, network)\n}\n\nfunction getWithdrawStreamInstruction(account_id, receiver) {\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(receiver),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            //needed to transfer the rent only during the final withdrawal transaction\n            pubkey: new PublicKey(STREAMFLOW_ACCOUNT_ID),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useStore.getState().programId),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const data = Buffer.alloc(layout.span);\n    //TODO - allow withdrawal of arbitrary (allowed) amount\n    layout.encode({\n            instruction: INSTRUCTION_WITHDRAW_STREAM,\n            amount: 0,// 0 = whole available amount is withdrawn.\n        },\n        data\n    );\n    return data;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CANCEL_STREAM} from \"../constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\"\n\nexport default async function _cancelStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {sender, receiver} = data;\n    const instruction = getCancelStreamInstruction(account_id, sender, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_CANCEL_STREAM, tx, connection, wallet, network)\n}\n\nfunction getCancelStreamInstruction(account_id, sender, receiver) {\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useStore.getState().programId),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([BufferLayout.u8(\"instruction\")]);\n    const data = Buffer.alloc(layout.span);\n\n    layout.encode({instruction: INSTRUCTION_CANCEL_STREAM}, data);\n\n    return data;\n}\n"],"sourceRoot":""}
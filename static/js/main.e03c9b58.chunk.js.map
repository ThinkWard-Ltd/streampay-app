{"version":3,"sources":["constants/constants.js","Components/Recipient.js","Components/SelectToken.js","Components/Banner.js","Components/DateTime.js","Components/Amount.js","Components/Curtain.js","Components/Stream/Badge.js","Components/Stream/Duration.js","Components/Stream/Progress.js","Components/Stream.js","Components/Footer.js","Components/Logo.js","Components/ButtonPrimary.js","logo.png","Pages/NotConnected.js","App.js","reportWebVitals.js","index.js","utils/helpers.js","constants/ids.js","Components/ToastrLink.js","Actions/sendTransaction.js","Actions/createStream.js","Actions/withdrawStream.js","Actions/cancelStream.js"],"names":["DELAY_MINUTES","SOLLET_URL","AIRDROP_AMOUNT","INSTRUCTION_CREATE_STREAM","INSTRUCTION_WITHDRAW_STREAM","INSTRUCTION_CANCEL_STREAM","STREAM_STATUS_SCHEDULED","STREAM_STATUS_STREAMING","STREAM_STATUS_COMPLETE","STREAM_STATUS_CANCELED","STREAM_STATUS_COLOR","Recipient","props","className","htmlFor","type","name","id","defaultValue","value","onChange","e","target","pattern","placeholder","aria-describedby","required","SelectToken","disabled","Banner","state","hidden","this","href","rel","aria-hidden","onClick","setState","Component","DateTime","title","date","min","format","Date","max","add","years","updateDate","time","updateTime","Amount","step","autoFocus","Number","MAX_SAFE_INTEGER","Curtain","visible","Badge","color","fill","viewBox","cx","cy","r","Duration","fromUnixTime","start","end","memo","Progress","rtl","toFixed","style","width","Stream","data","withdrawn","amount","receiver","sender","status","myAddress","removeStream","onStatusUpdate","onCancel","onWithdraw","useState","getStreamed","streamed","setStreamed","available","setAvailable","showWithdraw","showCancel","useEffect","interval","setInterval","tmpStatus","now","getUnixTime","updateStatus","clearInterval","timestamp","Footer","src","alt","Logo","ButtonPrimary","text","action","submit","NotConnected","height","frameBorder","allowFullScreen","App","network","clusterApiUrl","pda","Keypair","generate","providerUrl","undefined","selectedWallet","setSelectedWallet","connected","setConnected","balance","setBalance","setAmount","setReceiver","startDate","setStartDate","minutes","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","loading","setLoading","localStorage","streams","JSON","parse","setStreams","connection","useMemo","Connection","urlWallet","Wallet","validate","element","msg","setCustomValidity","createStream","a","form","document","getElementById","elements","checkValidity","reportValidity","StreamData","publicKey","toBase58","_createStream","success","streamCreated","_withdrawStream","_cancelStream","canceled_at","skipPrompt","_swal","newStreams","on","getBalance","then","result","LAMPORTS_PER_SOL","toast","info","connect","disconnect","streamID","window","location","hash","substring","PublicKey","error","hasOwnProperty","pk","message","getAccountInfo","temp","getDecodedAccountData","stringify","logo","getExplorerLink","requestAirdrop","signature","confirmTransaction","err","onSubmit","Object","keys","length","entries","sort","stream1","map","withdrawStream","cancelStream","hideProgressBar","position","limit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","property","BufferLayout","blob","uint64","DataLayout","struct","buffer","accountData","decode","u64","fromBuffer","starttime","endtime","recipient","getStreamStatus","cluster","url","hasMatch","match","getClusterName","swal","icon","buttons","origin","button","content","attributes","innerHTML","clicked","el","createElement","setAttribute","left","body","appendChild","select","execCommand","removeChild","copyToClipboard","PROGRAM_ID","STREAMFLOW_ACCOUNT_ID","ToastrLink","nonUrlText","urlText","sendTransaction","transaction","wallet","getRecentBlockhash","recentBlockhash","blockhash","feePayer","partialSign","signTransaction","signed","sendRawTransaction","serialize","autoClose","transactionUrl","closeOnClick","console","warn","instruction","getCreateStreamInstruction","tx","Transaction","pdaPub","TransactionInstruction","pubkey","isSigner","isWritable","SystemProgram","programId","encodeInstructionData","layout","u8","u32","nu64","encoded","Buffer","alloc","span","encode","Math","trunc","account_id","getWithdrawStreamInstruction","getCancelStreamInstruction"],"mappings":"6kBAAaA,EAAgB,GAChBC,EAAa,wBACbC,EAAiB,GAEjBC,EAA4B,EAC5BC,EAA8B,EAC9BC,EAA4B,EAI5BC,EAA0B,YAC1BC,EAA0B,YAC1BC,EAAyB,WACzBC,EAAyB,WAEzBC,GAAmB,mBAC3BJ,EAA0B,QADC,cAE3BC,EAA0B,SAFC,cAG3BC,EAAyB,QAHE,cAI3BC,EAAyB,OAJE,I,yQCfjB,SAASE,EAAUC,GAC9B,OACI,sBAAKC,UAAU,gBAAf,UACI,uBAAOC,QAAQ,UAAUD,UAAU,kCAAnC,+BAGA,qBAAKA,UAAU,OAAf,SACI,uBACIE,KAAK,OACLC,KAAK,UACLC,GAAG,UACHC,aAAcN,EAAMO,MACpBC,SAAU,SAAAC,GAAC,OAAIT,EAAMQ,SAASC,EAAEC,OAAOH,QACvCI,QAAQ,sEACRV,UAAU,yHACVW,YAAY,kCACZC,mBAAiB,sBACjBC,UAAQ,SCjBb,SAASC,IACpB,OACI,sBAAKd,UAAU,2BAAf,UACI,uBAAOC,QAAQ,QAAQD,UAAU,kCAAjC,mBAGA,yBACII,GAAG,QACHD,KAAK,QACLH,UAAU,8HAA6IK,aAAa,MAHxK,UAKI,yCACA,wBAAQU,UAAQ,EAAhB,2CACA,wBAAQA,UAAQ,EAAhB,qCACA,wBAAQA,UAAQ,EAAhB,sCACA,wBAAQA,UAAQ,EAAhB,mC,oCCXKC,E,4MACjBC,MAAQ,CACJC,QAAQ,G,4CAGZ,WAAU,IAAD,OACL,OACI,qBAAKlB,UAAS,8BAAyBmB,KAAKF,MAAMC,QAAU,UAA5D,SACI,sBAAKlB,UAAU,8CAAf,UACI,qBAAKA,UAAU,gCAAf,SACI,oBAAGA,UAAU,wBAAb,UACI,gDAAkB,uCAAlB,yCACA,sBAAMA,UAAU,oBAAhB,SACd,oBAAGoB,KAAK,6BAA6BC,IAAI,sBAAsBZ,OAAO,SAAST,UAAU,uBAAzF,qCAC4B,sBAAMsB,cAAY,OAAlB,8BAKtB,qBACItB,UAAU,uFADd,SAEI,yBAAQE,KAAK,SAASqB,QAAS,kBAAM,EAAKC,SAAS,CAACN,QAAQ,KACpDlB,UAAU,wFADlB,UAGI,sBAAMA,UAAU,UAAhB,qBACA,cAAC,IAAD,CAAOA,UAAU,qC,GAzBTyB,aCFrB,SAASC,EAAS3B,GAC7B,OACI,qCACI,sBAAKC,UAAU,2BAAf,UACI,wBAAOC,QAASF,EAAM4B,MACf3B,UAAU,6CADjB,UAC+DD,EAAM4B,MADrE,WAEA,qBAAK3B,UAAU,OAAf,SACI,uBAAOE,KAAK,OAAOC,KAAMJ,EAAM4B,MAAOvB,GAAIL,EAAM4B,MACzCrB,MAAOP,EAAM6B,KACbC,IAAKC,YAAO,IAAIC,KAAQ,cACxBC,IAAKF,YAAOG,YAAI,IAAIF,KAAQ,CAACG,MAAO,IAAK,cACzC3B,SAAUR,EAAMoC,WAChBnC,UAAU,yHACVW,YAAY,GAAGC,mBAAkBb,EAAM4B,MAAN,eAA8Bd,UAAQ,SAGtF,sBAAKb,UAAU,2BAAf,UACI,wBAAOC,QAASF,EAAM4B,MAAN,QACT3B,UAAU,6CADjB,UAC+DD,EAAM4B,MADrE,WAEA,qBAAK3B,UAAU,OAAf,SACI,uBAAOE,KAAK,OAAOC,KAAMJ,EAAM4B,MAAN,QAAuBvB,GAAIL,EAAM4B,MAAN,QAC7CrB,MAAOP,EAAMqC,KACb7B,SAAUR,EAAMsC,WAChBrC,UAAU,yHACVW,YAAY,GAAGC,mBAAkBb,EAAM4B,MAAN,oBAAmCd,UAAQ,YC1BxF,SAASyB,EAAOvC,GAC3B,OACI,sBAAKC,UAAU,2BAAf,UACI,uBAAOC,QAAQ,SAASD,UAAU,kCAAlC,oBAGA,qBAAKA,UAAU,OAAf,SACI,uBACIuC,KAAM,KAAOC,WAAW,EACxBtC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHC,aAAcN,EAAMO,MACpBC,SAAU,SAAAC,GAAC,OAAIT,EAAMQ,SAASC,EAAEC,OAAOH,QACvCN,UAAU,yHACV6B,IAAK,EACLG,IAAKjC,EAAMiC,KAAOS,OAAOC,iBACzB/B,YAAY,OACZC,mBAAiB,qBACjBC,UAAU,SCnBf,SAAS8B,EAAQ5C,GAC5B,OACI,qBAAKC,UAAS,uEAAkED,EAAM6C,QAAU,QAAU,UAA1G,SACI,qBAAK5C,UAAU,SAAf,iBCHG,SAAS6C,EAAM9C,GAAyC,IAC5DG,EAAgBH,EAAhBG,KAAM4C,EAAU/C,EAAV+C,MACb,OAAO,qBAAK9C,UAAU,SAAf,SACH,uBACIA,UAAS,sEAAiE8C,EAAjE,qBAAmFA,EAAnF,mBADb,UAEI,qBAAK9C,UAAS,wDAAmD8C,EAAnD,QAAgEC,KAAK,eAAeC,QAAQ,UAA1G,SACE,wBAAQC,GAAI,EAAGC,GAAI,EAAGC,EAAG,MAE1BjD,O,aCLb,SAASkD,EAASrD,GACd,OACI,qBAAIC,UAAU,4BAAd,UACM8B,YAAOuB,YAAatD,EAAMuD,OAAQ,oBADxC,WACwExB,YAAOuB,YAAatD,EAAMwD,KAAM,uBAKjGC,qBAAKJ,GCXL,SAASK,EAAS1D,GAAsE,IAC9F4B,EAA0B5B,EAA1B4B,MAAOrB,EAAmBP,EAAnBO,MAAO0B,EAAYjC,EAAZiC,IAAK0B,EAAO3D,EAAP2D,IAGxB,OAFApD,EAAQmC,OAAOnC,GAAOqD,QAAQ,GAC9B3B,EAAMS,OAAOT,GAAK2B,QAAQ,GAEtB,qCACI,6BAAKhC,IACL,qBAAK3B,UAAU,4CAAf,SACI,qBACIA,UAAW,iEAAmE0D,EAAM,cAAgB,IACpGE,MAAO,CAACC,MAAOvD,EAAQ0B,EAAM,IAAM,SAG3C,wBAAOhC,UAAU,2BAAjB,mBAA8CM,EAAM,wBAAON,UAAU,gBAAjB,cAAmCgC,W,oBCEpF,SAAS8B,EAAO/D,GAAyI,IAAD,EACjGA,EAAMgE,KAAjET,EAD4J,EAC5JA,MAAOC,EADqJ,EACrJA,IAAKS,EADgJ,EAChJA,UAAWC,EADqI,EACrIA,OAAQC,EAD6H,EAC7HA,SAAUC,EADmH,EACnHA,OAAQC,EAD2G,EAC3GA,OACjDC,EAAqEtE,EAArEsE,UAAWC,EAA0DvE,EAA1DuE,aAAcC,EAA4CxE,EAA5CwE,eAAgBC,EAA4BzE,EAA5ByE,SAAUC,EAAkB1E,EAAlB0E,WAAYrE,EAAML,EAANK,GAEhE0C,EAAQjD,IAAoBuE,GAJiI,EAMnIM,mBAASC,EAAYrB,EAAOC,EAAKU,IANkG,mBAM5JW,EAN4J,KAMlJC,EANkJ,OAOjIH,mBAASE,EAAWZ,GAP6G,mBAO5Jc,EAP4J,KAOjJC,EAPiJ,KAS7JC,EAAeZ,IAAW1E,KAA4B0E,IAAWzE,KAA0BqE,EAAYC,EACvGgB,GAAcb,IAAW1E,KAA2B0E,IAAW3E,MAA4B4E,IAAcF,EAc/G,OAZAe,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzBP,EAAYF,EAAYrB,EAAOC,EAAKU,IACpCc,EAAaH,EAAWZ,GACxB,IAAMqB,EA0DlB,SAAsBjB,EAAgBd,EAAeC,GACjD,IAAM+B,EAAMC,YAAY,IAAIxD,MAC5B,OAAIqC,IAAW3E,KAA2B6F,GAAOhC,EACtC5D,IACA0E,IAAW1E,KAA2B4F,GAAO/B,EAC7C5D,IAEAyE,EAjEeoB,CAAapB,EAAQd,EAAOC,GAC1C8B,IAAcjB,GACdG,EAAec,KAEpB,KACH,OAAO,kBAAMI,cAAcN,OAI3B,qBAAInF,UAAS,kEAA6D8C,EAA7D,4DAAb,UACI,sBAAK9C,UAAU,gBAAf,UACI,cAAC6C,EAAD,CAAO7C,UAAU,SAASE,KAAMkE,EAAQtB,MAAOA,IAC/C,wBAAQvB,QAAS+C,EACTtE,UAAS,kEAA6D8C,EAA7D,wCADjB,SAEI,cAAC,IAAD,CAAO9C,UAAU,6BAGzB,cAAC,EAAD,CAAUsD,MAAOA,EAAOC,IAAKA,IAC7B,oCACA,oBAAIvD,UAAU,4CAAd,SAA2DI,IAC3D,2CACA,oBAAIJ,UAAU,4CAAd,SAA2DkE,IAC1DE,IAAWxE,IACR,qCACI,cAAC6D,EAAD,CAAU9B,MAAM,YAAYrB,MAAO0D,EAAWhC,IAAKiC,IACnD,cAACR,EAAD,CAAU9B,MAAM,WAAWrB,MAAO2D,EAASD,EAAWhC,IAAKiC,EAAQP,KAAK,OAG5E,qCACI,cAACD,EAAD,CAAU9B,MAAM,WAAWrB,MAAOsE,EAAU5C,IAAKiC,IACjD,cAACR,EAAD,CAAU9B,MAAM,YAAYrB,MAAO0D,EAAWhC,IAAKiC,IAClDI,IAAcH,GACd,qCACG,2CAAa,uBACT,qBAAKlE,UAAU,kCAAf,+BACJ,qBAAIA,UAAU,aAAd,mBAA6B8E,EAAUnB,QAAQ,MAC9CqB,GAAiB,wBAAQzD,QAASkD,EACXzE,UAAU,0FADhB,yBAKpBiF,GAAe,wBAAQ1D,QAASiD,EACcxE,UAAU,oFADzC,0BAQ9B,SAAS2E,EAAYrB,EAAeC,EAAaU,EAAgByB,GAGpE,OAFAA,EAAYA,GAAaH,YAAY,IAAIxD,OAEzBuB,EAAc,EAC1BoC,EAAYnC,EAAYU,GAEpByB,EAAYpC,IAAUC,EAAMD,GAASW,ECtFlC,SAAS0B,IACpB,OAAQ,yBAAQ3F,UAAU,oDAAlB,UACJ,qBAAK4F,IAAI,2EACJ5F,UAAU,oBAAoB6F,IAAI,gBACvC,gCACI,+CAAiB,mBAAGzE,KAAK,6BAA6BpB,UAAU,gBAAgBqB,IAAI,sBAChEZ,OAAO,SADV,wBACiC,uBADlD,UAEW,mBAAGW,KAAK,+BAA+BX,OAAO,SAAST,UAAU,gBACrEqB,IAAI,sBADA,+BCPR,SAASyE,EAAK/F,GACzB,OACI,sBAAKC,UAAU,kBAAf,UACI,qBAAK4F,IAAK7F,EAAM6F,IAAKC,IAAI,0BAA0B7F,UAAU,iBAC7D,qBAAIA,UAAU,uBAAd,mBAA2C,gD,4BCJxC,SAAS+F,EAAchG,GAClC,IACOiG,EAA6CjG,EAA7CiG,KAAMC,EAAuClG,EAAvCkG,OAAQjG,EAA+BD,EAA/BC,UAAWkG,EAAoBnG,EAApBmG,OAAQnF,EAAYhB,EAAZgB,SACxC,OACI,wBAAQb,KAAMgG,EAAS,SAAW,SAAU3E,QAAS0E,EAC7CjG,UAJQ,uOAIiBA,EAAWe,SAAUA,EADtD,SAEKiF,I,WCNE,MAA0B,iCCE1B,SAASG,EAAapG,GACjC,OAAO,sBAAKC,UAAU,mBAAf,UACH,wBAAQ6D,MAAM,OAAOuC,OAAQ,IAAKR,IAAI,qDAC9BjE,MAAM,oDAAoD0E,YAAY,IACtEC,iBAAe,EAFvB,kBAGA,cAACP,EAAD,CAAeC,KAAK,UAAUhG,UAAU,0BACzBiG,OAAQlG,EAAMkG,YCkTtBM,MA7Rf,WACI,IAAMC,EAAUC,YAAc,UACxBnB,EAAM,IAAIvD,KACV2E,EAAMC,IAAQC,WAHT,EAKYlC,mBAAStF,KAAzByH,EALI,sBAMiCnC,wBAASoC,GAN1C,mBAMJC,EANI,KAMYC,EANZ,OAOuBtC,oBAAS,GAPhC,mBAOJuC,EAPI,KAOOC,EAPP,OAQmBxC,wBAASoC,GAR5B,mBAQJK,EARI,KAQKC,EARL,OASiB1C,wBAASoC,GAT1B,mBASJ7C,EATI,KASIoD,EATJ,QAUqB3C,wBAASoC,GAV9B,qBAUJ5C,GAVI,MAUMoD,GAVN,SAWuB5C,mBAAS5C,YAAOwD,EAAK,eAX5C,qBAWJiC,GAXI,MAWOC,GAXP,SAYuB9C,mBAAS5C,YAAOG,YAAIqD,EAAK,CAACmC,QAAStI,MAAiB,UAZ3E,qBAYJuI,GAZI,MAYOC,GAZP,SAamBjD,mBAAS6C,IAb5B,qBAaJK,GAbI,MAaKC,GAbL,SAcmBnD,mBAASgD,IAd5B,qBAcJI,GAdI,MAcKC,GAdL,SAemBrD,oBAAS,GAf5B,qBAeJsD,GAfI,MAeKC,GAfL,SAgBmBvD,mBAASwD,aAAaC,QAAUC,KAAKC,MAAMH,aAAaC,SAAW,IAhBtF,qBAgBJA,GAhBI,MAgBKG,GAhBL,MAkBLC,GAAaC,mBAAQ,kBAAM,IAAIC,IAAWjC,KAAU,CAACA,IACrDkC,GAAYF,mBAAQ,kBAAM,IAAIG,IAAO9B,EAAaL,KAAU,CAACK,EAAaL,IAqFhF,SAASoC,GAASC,GAAU,IAEpBvF,EADGnD,EAAe0I,EAAf1I,KAAMG,EAASuI,EAATvI,MAETwI,EAAM,GACV,OAAQ3I,GACJ,IAAK,QAED2I,GADAxF,EAAQ,IAAIvB,KAAKzB,EAAQ,IAAMoH,KACjB,IAAI3F,KAAS,uCAAyC,GACpE,MACJ,IAAK,aAED+G,GADAxF,EAAQ,IAAIvB,KAAKwF,GAAY,IAAMjH,IACrB,IAAIyB,KAAS,uCAAyC,GACpE,MACJ,IAAK,MACD+G,EAAM,IAAI/G,KAAKzB,GAAS,IAAIyB,KAAKwF,IAAa,yCAA2C,GACzF,MACJ,IAAK,WACDjE,EAAQ,IAAIvB,KAAKwF,GAAY,IAAMG,IAEnCoB,EADY,IAAI/G,KAAK6F,GAAU,IAAMtH,GACzBgD,EAAQ,yCAA2C,GAIvEuF,EAAQE,kBAAkBD,GA/HnB,SAkIIE,KAlIJ,8EAkIX,wCAAAC,EAAA,sDACUC,EAAOC,SAASC,eAAe,QADzC,cAEuBF,EAAKG,UAF5B,IAEI,2BACIT,GAD8B,SAFtC,iCAMSM,EAAKI,gBANd,uBAOQJ,EAAKK,iBAPb,mBAQe,GARf,cAWUjG,EAAQiC,YAAY,IAAIxD,KAAKwF,GAAY,IAAMG,MACjDnE,EAAMgC,YAAY,IAAIxD,KAAK6F,GAAU,IAAME,QAGnCxE,IACRC,EAAMD,EAAQ,GAGlB2E,IAAW,GACLlE,EAAO,IAAIyF,IAAWzC,EAAe0C,UAAUC,WAAYxF,GAAUD,EAAQX,EAAOC,GApB9F,UAqB0BoG,YAAc5F,EAAMwE,GAAYxB,EAAgBP,EAASE,GArBnF,QAqBUkD,EArBV,OAsBI3B,IAAW,GACP2B,IACAC,YAAcnD,EAAI+C,UAAUC,YAE5BtC,EAAWD,EAAUlD,GACrBqE,GAAW,2BAAIH,IAAL,kBAAezB,EAAI+C,UAAUC,WAAa3F,MA3B5D,6CAlIW,oEAiKX,WAA8B3D,GAA9B,uBAAA6I,EAAA,+DACiCd,GAAQ/H,GAA9BkD,EADX,EACWA,MAAOC,EADlB,EACkBA,IAAKU,EADvB,EACuBA,OADvB,SAE0B6F,YAAgB1J,EAAI+H,GAAQ/H,GAAKmI,GAAYxB,EAAgBP,GAFvF,gBAIcxC,EAAYW,EAAYrB,EAAOC,EAAKU,GAC1CmD,EAAWD,EAAUnD,GACrBsE,GAAW,2BAAIH,IAAL,kBAAe/H,EAAf,YAAC,eAAuB+H,GAAQ/H,IAAhC,IAAqC4D,kBANvD,4CAjKW,oEA2KX,WAA4B5D,GAA5B,yBAAA6I,EAAA,+DACiCd,GAAQ/H,GAA9BkD,EADX,EACWA,MAAOC,EADlB,EACkBA,IAAKU,EADvB,EACuBA,OACbqB,EAAM,IAAIvD,KACViC,EAAYW,EAAYrB,EAAOC,EAAKU,GAH9C,SAI0B8F,YAAc3J,EAAI+H,GAAQ/H,GAAKmI,GAAYxB,EAAgBP,GAJrF,gBAMQY,EAAWD,EAAUlD,EAASD,GAC9BsE,GAAW,2BACJH,IADG,kBAEL/H,EAFK,YAAC,eAEG+H,GAAQ/H,IAFZ,IAEiB4D,YAAWgG,YAAazE,YAAYD,GAAMlB,OAAQxE,UATrF,4CA3KW,+BAyLI0E,GAzLJ,mFAyLX,WAA4BlE,EAAY6J,GAAxC,eAAAhB,EAAA,+DACSgB,GADT,qCAC6BC,cAD7B,0DAEcC,EAFd,eAE+BhC,KACL/H,GAClBkI,GAAW6B,GAJnB,4CAzLW,sBAiMX,OA5KAjF,qBAAU,WACN,GAAI6B,EAaA,OAZAA,EAAeqD,GAAG,WAAW,WACzBlD,GAAa,GACbqB,GAAW8B,WAAWtD,EAAe0C,WAChCa,MAAK,SAAAC,GAAM,OAAInD,EAAWmD,EAASC,QACxCC,IAAMb,QAAQ,2BAElB7C,EAAeqD,GAAG,cAAc,WAC5BlD,GAAa,GACbF,OAAkBF,GAClB2D,IAAMC,KAAK,+BAEf3D,EAAe4D,UACR,WACH5D,EAAe6D,gBAGxB,CAACrC,GAAYxB,IAEhB7B,qBAAU,WACN,IAAMiF,EAAU,eAAOhC,IACjB0C,EAAWC,OAAOC,SAASC,KAAKC,UAAU,GAEhD,GAAIJ,EACA,IACI,IAAIK,IAAUL,GACdV,EAAWU,QAAY/D,EACzB,MAAOtG,GACLiK,IAAMU,MAAM,8DATR,eAaD/K,GACP,GAAI+J,EAAWiB,eAAehL,GAAK,CAE/B,IAAIiL,OAAKvE,EACT,IACIuE,EAAK,IAAIH,IAAU9K,GACrB,MAAOI,GACLiK,IAAMU,MAAM3K,EAAE8K,QAAUlL,GACxBkE,GAAalE,GAAI,GAGjBiL,GACA9C,GAAWgD,eAAe,IAAIL,IAAU9K,IAAKkK,MAAK,SAAAC,GAC9C,IAAMiB,EAAI,eAAOrD,KACjB,OAAIoC,QAAJ,IAAIA,OAAJ,EAAIA,EAAQxG,MACRyH,EAAKpL,GAAMqL,YAAsBlB,EAAOxG,OAEpC3D,IAAOyK,GACPJ,IAAMU,MAAM,qEAETK,EAAKpL,IAEhBkI,GAAWkD,QAtB3B,IAAK,IAAMpL,KAAM+J,EAAa,EAAnB/J,KA6BZ,IAEH8E,qBAAU,WACNgD,aAAaC,QAAUC,KAAKsD,UAAUvD,MACvC,CAACA,KA2GA,gCACI,cAAC,EAAD,IACA,sBAAKnI,UAAW,oCAAhB,UACI,cAAC8F,EAAD,CAAMF,IAAK+F,IACV1E,EACG,sBAAKjH,UAAU,uEAAf,UACI,sBAAKA,UAAU,OAAf,UACI,cAAC2C,EAAD,CAASC,QAASoF,KAClB,sBAAKhI,UAAU,kBAAf,UACI,wBAAQA,UAAU,iCAAlB,SACI,oBAAGoB,KAAMwK,YAAgB,UAAW7E,EAAe0C,UAAUC,WAAYlD,GACtE/F,OAAO,SAASY,IAAI,sBADvB,+BAEsB,cAAC,IAAD,CAAkBrB,UAAU,wBAFlD,SAIJ,sBAAMA,UAAU,iBAAhB,SAAkC+G,EAAe0C,UAAUC,gBAE/D,sBAAK1J,UAAU,2BAAf,UACI,wBAAQA,UAAU,QAAlB,sBACA,0CAAQmH,KACR,wBAAQjH,KAAK,SAASqB,QAAS,kBAAMwF,EAAe6D,cAC5C5K,UAAU,qLADlB,wBAIA,cAAC+F,EAAD,CAAeC,KAAK,UAAUC,OAhI1D,WACIgC,IAAW,GACX,sBAAC,4BAAAgB,EAAA,sEAC2BV,GAAWsD,eAAe9E,EAAe0C,UAAWpK,IAAiBmL,KADhG,cACSsB,EADT,gBAEwBvD,GAAWwD,mBAAmBD,EAAW,aAFjE,cAGcxL,MAAM0L,IACbvB,IAAMU,MAAM,6BAEZlD,IAAW,GACXb,EAAWD,EAAU9H,KACrBoL,IAAMb,QAAQ,0BARrB,0CAAD,IA+HuC5J,UAAU,sEACVe,SAAUiH,QAE7B,uBACA,uBAAMiE,SAAUjD,GAAc5I,GAAG,OAAjC,UACI,sBAAKJ,UAAU,6CAAf,UACI,cAACsC,EAAD,CAAQ/B,SAAU8G,EAAW/G,MAAO2D,EAAQjC,IAAKmF,IACjD,cAACrG,EAAD,IACA,cAAChB,EAAD,CAAWS,SAAU+G,GAAahH,MAAO4D,KACzC,cAACxC,EAAD,CACIC,MAAM,QACNC,KAAM2F,GACNpF,WAAY,SAAA3B,GAAC,OAAIgH,GAAahH,EAAEC,OAAOH,QACvC8B,KAAMsF,GACNrF,WAAY,SAAA7B,GAAC,OAAImH,GAAanH,EAAEC,OAAOH,UAE3C,cAACoB,EAAD,CACIC,MAAM,MACNC,KAAMgG,GACNzF,WAAY,SAAA3B,GAAC,OAAIqH,GAAWrH,EAAEC,OAAOH,QACrC8B,KAAM0F,GACNzF,WAAY,SAAA7B,GAAC,OAAIuH,GAAWvH,EAAEC,OAAOH,aAE7C,cAACyF,EAAD,CAAeC,KAAK,UAAUhG,UAAU,0BACzBiG,OAAQ,kBAAM+C,cAIrC,gCACI,wBAAQhJ,UAAU,wCAAlB,wBACCkM,OAAOC,KAAKhE,IAASiE,OAAS,EAC3BF,OAAOG,QAAQlE,IACVmE,MAAK,kBAAIC,EAAJ,+CAAsCjJ,MAAQiJ,EAAQjJ,SAC3DkJ,KAAI,mCAAEpM,EAAF,KAAM2D,EAAN,YACD,cAACD,EAAD,CACIS,eAAgB,SAACH,GAAD,OAAYkE,GAAW,2BAChCH,IAD+B,kBAEjC/H,EAFiC,YAAC,eAEzB+H,GAAQ/H,IAFgB,IAEXgE,eAE3BK,WAAY,kBAjQzC,4CAiQ+CgI,CAAerM,IACjCoE,SAAU,kBAlQvC,4CAkQ6CkI,CAAatM,IAE7BA,GAAIA,EACJ2D,KAAMA,EACNM,UAAW0C,EAAe0C,UAAUC,WACpCpF,aAAc,kBAAMA,GAAalE,KAJ5BA,MAQjB,sBAAKJ,UAAU,uCAAf,UACI,kEACA,uBACA,6DAMhB,cAACmG,EAAD,CAAcF,OAAQ,kBAAMe,EAAkB0B,UAGtD,cAAC,IAAD,CAAgBiE,iBAAe,EAACC,SAAS,cAAcC,MAAO,IAC9D,cAAClH,EAAD,QCzSGmH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrE,SAASC,eAAe,SAM1B0D,K,gCChBA,+OAaarD,GAbb,KAayB,WAAkD,IAAjDgE,EAAgD,uDAArC,YACjC,OAAOC,IAAaC,KAAK,GAAIF,KAGpBG,EAAS,WAA+C,IAA9CH,EAA6C,uDAAlC,SAC9B,OAAOC,IAAaC,KAAK,EAAGF,IAG1BI,EAAaH,IAAaI,OAAO,CACnCF,EAAO,aACPA,EAAO,WACPA,EAAO,UACPA,EAAO,aACPnE,EAAU,UACVA,EAAU,eAGP,SAASgC,EAAsBsC,GAClC,IAAMC,EAAcH,EAAWI,OAAOF,GAEhCzK,EAAQ4K,IAAIC,WAAWH,EAAYI,WACnC7K,EAAM2K,IAAIC,WAAWH,EAAYK,SACjCpK,EAASiK,IAAIC,WAAWH,EAAY/J,QAAUuG,IAC9CxG,EAAYkK,IAAIC,WAAWH,EAAYhK,WAAawG,IAgB1D,OAAO,IAAIhB,EAfK,IAAI0B,IAAU8C,EAAY7J,QAASuF,WAChC,IAAIwB,IAAU8C,EAAYM,WAAY5E,WAchBzF,EAAQX,EAAOC,EAAKS,EAU1D,SAAyBV,EAAeC,EAAa+B,GACxD,OAAIA,EAAMhC,EACC7D,IACA6F,EAAM/B,EACN7D,IAEAC,IAlBI4O,CAAgB9L,OAAOa,GAAQb,OAAOc,GAAMgC,YAAY,IAAIxD,QAKxE,SAAS6J,EAAgB1L,EAAcE,EAAYoG,GAEtD,IAAMgI,EAmEV,SAAwBC,GACpB,IAAMC,EAAWD,EAAIE,MAAM,iCAC3B,OAAOD,EAAWA,EAAS,GAAK,KArEhBE,CADhBpI,EAAUA,GAAWC,YAAc,kBACnB,2BAAgDD,GAChE,MAAM,+BAAN,OAAsCtG,EAAtC,YAA8CE,EAA9C,oBAA4DoO,GAczD,SAAShF,EAAWrF,EAAgBD,EAAkBD,EAAgBX,EAAeC,EAAaS,EAAoBI,EAAiB4F,GAC1I7I,KAAKgD,OAASA,EACdhD,KAAK+C,SAAWA,EAChB/C,KAAK8C,OAASA,EACd9C,KAAKmC,MAAQA,EACbnC,KAAKoC,IAAMA,EACXpC,KAAK6C,UAAYA,GAAa,EAC9B7C,KAAKiD,OAAS4F,EAAcpK,IAA0BwE,GAAU3E,IAChE0B,KAAK6I,YAAcA,EAGhB,SAASE,IACZ,OAAO2E,IAAK,CAAC7I,KAAM,gBAAiB8I,KAAM,UAAWC,SAAS,IAe3D,SAASlF,EAAczJ,GAC1B,IAAMqO,EAAM3D,OAAOC,SAASiE,OAAS,IAAM5O,EAC3CyO,IAAK,CACDI,OAAQ,kBACRH,KAAM,UACNnN,MAAO,kBAEPuN,QACI,CACIrG,QAAS,IACTsG,WAAY,CACRnP,UAAW,yCACXoB,KAAMqN,EACNhO,OAAQ,SACR2O,UAAWX,MAGxBnE,MAAK,SAAC+E,GACDA,KA9BL,SAAyB/O,GAC5B,IAAMgP,EAAKnG,SAASoG,cAAc,YAClCD,EAAGhP,MAAQA,EACXgP,EAAGE,aAAa,WAAY,IAC5BF,EAAG1L,MAAMgJ,SAAW,WACpB0C,EAAG1L,MAAM6L,KAAO,UAChBtG,SAASuG,KAAKC,YAAYL,GAC1BA,EAAGM,SACHzG,SAAS0G,YAAY,QACrB1G,SAASuG,KAAKI,YAAYR,GAsBlBS,CAAgBtB,GAChBI,IAAK,4BAA6B,4BAA6B,iB,gCCvH3E,oEAAO,IAAMmB,EAAa,+CACbC,EAAwB,gD,2HCCtB,SAASC,EAAWnQ,GAC/B,OAAO,iCAAOA,EAAMoQ,WAAW,uBACnB,oBAAGnQ,UAAU,YACVoB,KAAMrB,EAAM0O,IAAKpN,IAAI,sBACrBZ,OAAO,SAFV,UAEoBV,EAAMqQ,QAAQ,cAAC,IAAD,CAAkBpQ,UAAU,8B,0BCC/D,SAAeqQ,EAA9B,4C,4CAAe,WAA+BnQ,EAAcoQ,EAA0B/H,EAAwBgI,EAAgB/J,EAAkBE,GAAjI,mBAAAuC,EAAA,+EAE8BV,EAAWiI,qBAFzC,cAEPF,EAAYG,gBAFL,OAE+DC,UACtEjG,IAAMC,KAAK,gCACX4F,EAAYK,SAAWJ,EAAO9G,UAE1BvJ,IAASZ,KACTgR,EAAYM,YAAYlK,GAPrB,SAUc6J,EAAOM,gBAAgBP,GAVrC,cAUDQ,EAVC,iBAWiBvI,EAAWwI,mBAAmBD,EAAOE,aAXtD,eAWDlF,EAXC,OAYPrB,IAAMC,KAAK,kDAAmD,CAACuG,UAAU,OAZlE,UAeD1I,EAAWwD,mBAAmBD,EAAW,aAfxC,eAgBDoF,EAAiBtF,YAAgB,KAAME,EAAWtF,GACxDiE,IAAMb,QAAQ,cAACsG,EAAD,CACVzB,IAAKyC,EACLd,QAAQ,mBACRD,WAAW,2BACX,CAACc,UAAW,IAAOE,cAAc,IArB9B,mBAsBA,GAtBA,yCAwBPC,QAAQC,KAAR,MAEA5G,IAAMU,MAAM,UAAY,KAAEG,SA1BnB,mBA2BA,GA3BA,2D,+LCSA,SAAe3B,EAA9B,0C,4CAAe,WAA6B5F,EAAkBwE,EAAwBgI,EAAgB/J,EAAkBE,GAAzG,iBAAAuC,EAAA,6DACLqI,EAAcC,EAA2BxN,EAAM2C,EAAI+C,WACnD+H,GAAK,IAAIC,KAAcxP,IAAIqP,GAFtB,SAGEjB,YAAgB/Q,IAA2BkS,EAAIjJ,EAAYgI,EAAQ/J,EAASE,GAH9E,oF,sBAMf,SAAS6K,EAA2BxN,EAAkB2N,GAA4C,IACvFvN,EAAoBJ,EAApBI,OAAQD,EAAYH,EAAZG,SAEf,OAAO,IAAIyN,IAAuB,CAC9BxF,KAAM,CAAC,CACHyF,OAAQ,IAAI1G,IAAU/G,GACtB0N,UAAU,EACVC,YAAY,GACb,CACCF,OAAQ,IAAI1G,IAAUhH,GACtB2N,UAAU,EACVC,YAAY,GACb,CACCF,OAAQF,EACRG,UAAU,EACVC,YAAY,GACb,CACCF,OAAQG,IAAcC,UACtBH,UAAU,EACVC,YAAY,IAEhBE,UAAW,IAAI9G,IAAU8E,KACzBjM,KAAMkO,EAAsBlO,KAKpC,SAASkO,EAAsBlO,GAAmB,IACvCE,EAAsBF,EAAtBE,OAAQX,EAAcS,EAAdT,MAAOC,EAAOQ,EAAPR,IAEhB2O,EAASxE,IAAaI,OAAO,CAC/BJ,IAAayE,GAAG,eAChBzE,IAAa0E,IAAI,SACjB1E,IAAa0E,IAAI,OAGjB1E,IAAa2E,KAAK,YAGhBC,EAAUC,EAAOC,MAAMN,EAAOO,MAepC,OAdAP,EAAOQ,OAAO,CACNpB,YAAahS,IACbgE,MAAOA,EACPC,IAAKA,EAELU,OAAQ0O,KAAKC,MAAM3O,EAASuG,MAEhC8H,GAOGA,K,+LCpEI,SAAexI,EAA9B,0C,4CAAe,WAA+B+I,EAAoB9O,EAAkBwE,EAAwBgI,EAAgB/J,GAA7G,mBAAAyC,EAAA,6DACJ/E,EAAYH,EAAZG,SACDoN,EAAcwB,EAA6BD,EAAY3O,GACvDsN,GAAK,IAAIC,KAAcxP,IAAIqP,GAHtB,SAIEjB,YAAgB9Q,IAA6BiS,EAAIjJ,EAAYgI,EAAQ/J,GAJvE,oF,sBAOf,SAASsM,EAA6BD,EAAY3O,GAE9C,OAAO,IAAIyN,IAAuB,CAC9BxF,KAAM,CAAC,CACHyF,OAAQ,IAAI1G,IAAUhH,GACtB2N,UAAU,EACVC,YAAY,GACb,CACCF,OAAQ,IAAI1G,IAAU2H,GACtBhB,UAAU,EACVC,YAAY,GACb,CAECF,OAAQ,IAAI1G,IAAU+E,KACtB4B,UAAU,EACVC,YAAY,GACb,CACCF,OAAQG,IAAcC,UACtBH,UAAU,EACVC,YAAY,IAEhBE,UAAW,IAAI9G,IAAU8E,KACzBjM,KAAMkO,MAKd,SAASA,IACL,IAAMC,EAASxE,IAAaI,OAAO,CAC/BJ,IAAayE,GAAG,eAChBzE,IAAa2E,KAAK,YAGhBtO,EAAOwO,EAAOC,MAAMN,EAAOO,MAQjC,OANAP,EAAOQ,OAAO,CACNpB,YAAa/R,IACb0E,OAAQ,GAEZF,GAEGA,K,+LChDI,SAAegG,EAA9B,0C,4CAAe,WAA6B8I,EAAoB9O,EAAkBwE,EAAwBgI,EAAgB/J,GAA3G,mBAAAyC,EAAA,6DACJ9E,EAAUJ,EAAVI,OACDmN,EAAcyB,EAA2BF,EAAY1O,GACrDqN,GAAK,IAAIC,KAAcxP,IAAIqP,GAHtB,SAIEjB,YAAgB7Q,IAA2BgS,EAAIjJ,EAAYgI,EAAQ/J,GAJrE,oF,sBAOf,SAASuM,EAA2BF,EAAY1O,GAC5C,OAAO,IAAIwN,IAAuB,CAC9BxF,KAAM,CAAC,CACHyF,OAAQ,IAAI1G,IAAU/G,GACtB0N,UAAU,EACVC,YAAY,GACb,CACCF,OAAQ,IAAI1G,IAAU2H,GACtBhB,UAAU,EACVC,YAAY,GACb,CACCF,OAAQG,IAAcC,UACtBH,UAAU,EACVC,YAAY,IAEhBE,UAAW,IAAI9G,IAAU8E,KACzBjM,KAAMkO,MAKd,SAASA,IACL,IAAMC,EAASxE,IAAaI,OAAO,CAACJ,IAAayE,GAAG,iBAC9CpO,EAAOwO,EAAOC,MAAMN,EAAOO,MAIjC,OAFAP,EAAOQ,OAAO,CAACpB,YAAa9R,KAA4BuE,GAEjDA,K","file":"static/js/main.e03c9b58.chunk.js","sourcesContent":["export const DELAY_MINUTES = 10;\nexport const SOLLET_URL = 'https://www.sollet.io';\nexport const AIRDROP_AMOUNT = 10; //cap on the devnet\n\nexport const INSTRUCTION_CREATE_STREAM = 0;\nexport const INSTRUCTION_WITHDRAW_STREAM = 1;\nexport const INSTRUCTION_CANCEL_STREAM = 2;\n\nexport const ACC_DATA_OFFSET_WITHDRAWN = 25;\n\nexport const STREAM_STATUS_SCHEDULED = \"scheduled\";\nexport const STREAM_STATUS_STREAMING = \"streaming\";\nexport const STREAM_STATUS_COMPLETE = \"complete\";\nexport const STREAM_STATUS_CANCELED = \"canceled\";\n\nexport const STREAM_STATUS_COLOR = {\n    [STREAM_STATUS_SCHEDULED]: 'gray', // now < start\n    [STREAM_STATUS_STREAMING]: 'green', // start <= now < end\n    [STREAM_STATUS_COMPLETE]: 'blue', //now >= end;\n    [STREAM_STATUS_CANCELED]: 'red',\n}","export default function Recipient(props: { onChange: void, value: string }) {\n    return (\n        <div className=\"col-span-full\">\n            <label htmlFor=\"account\" className=\"block font-medium text-gray-100\">\n                Recipient Account\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"account\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    pattern=\"[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}\"\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    placeholder=\"Please double check the address\"\n                    aria-describedby=\"account-description\"\n                    required\n                />\n            </div>\n        </div>\n    )\n}","export default function SelectToken() {\n    return (\n        <div className=\"col-span-2 sm:col-span-1\">\n            <label htmlFor=\"token\" className=\"block font-medium text-gray-100\">\n                Token\n            </label>\n            <select\n                id=\"token\"\n                name=\"token\"\n                className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"                defaultValue=\"SOL\"\n            >\n                <option>SOL</option>\n                <option disabled>ETH - Coming soon️™</option>\n                <option disabled>BTC - Coming soon™</option>\n                <option disabled>USDC - Coming soon™</option>\n                <option disabled>Other tokens...</option>\n            </select>\n        </div>\n    )\n}\n","import {XIcon} from '@heroicons/react/outline'\nimport {Component} from \"react\";\n\n//could be \"stupid\"/functional component, but we decided to let it manage its own state (open/close)\nexport default class Banner extends Component {\n    state = {\n        hidden: false\n    }\n\n    render() {\n        return (\n            <div className={`relative bg-primary ${this.state.hidden && \"hidden\"}`}>\n                <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n                    <div className=\"pr-16 sm:text-center sm:px-16\">\n                        <p className=\"font-small text-white\">\n                            <span>This is the <b>Devnet</b> version. Go wild and test freely! </span>\n                            <span className=\"inline-block ml-2\">\n              <a href=\"https://streamflow.finance\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"text-white underline\">\n                  Live version coming soon<span aria-hidden=\"true\">&rarr;</span>\n              </a>\n            </span>\n                        </p>\n                    </div>\n                    <div\n                        className=\"absolute inset-y-0 right-0 pt-1 pr-1 flex items-start sm:pt-1 sm:pr-2 sm:items-start\">\n                        <button type=\"button\" onClick={() => this.setState({hidden: true})}\n                                className=\"flex p-2 rounded-md hover:bg-primary focus:outline-none focus:ring-2 focus:ring-white\"\n                        >\n                            <span className=\"sr-only\">Dismiss</span>\n                            <XIcon className=\"h-6 w-6 text-white\"/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import {add, format} from \"date-fns\";\n\nexport default function DateTime(props: { title: string, date: string, updateDate: void, time: string, updateTime: void }) {\n    return (\n        <>\n            <div className=\"col-span-3 sm:col-span-1\">\n                <label htmlFor={props.title}\n                       className=\"block font-medium text-gray-100 capitalize\">{props.title} Date</label>\n                <div className=\"mt-1\">\n                    <input type=\"date\" name={props.title} id={props.title}\n                           value={props.date}\n                           min={format(new Date(), \"yyyy-MM-dd\")}\n                           max={format(add(new Date(), {years: 1}), \"yyyy-MM-dd\")}\n                           onChange={props.updateDate}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={props.title + `-description`} required/>\n                </div>\n            </div>\n            <div className=\"col-span-2 sm:col-span-1\">\n                <label htmlFor={props.title + `_time`}\n                       className=\"block font-medium text-gray-100 capitalize\">{props.title} time</label>\n                <div className=\"mt-1\">\n                    <input type=\"time\" name={props.title + `_time`} id={props.title + `_time`}\n                           value={props.time}\n                           onChange={props.updateTime}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={props.title + `_time-description`} required/>\n                </div>\n            </div>\n        </>\n    )\n}","export default function Amount(props: { onChange: void, max: number, value: number }) {\n    return (\n        <div className=\"col-span-3 sm:col-span-1\">\n            <label htmlFor=\"amount\" className=\"block font-medium text-gray-100\">\n                Amount\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    step={0.001} autoFocus={true}\n                    type=\"number\"\n                    name=\"amount\"\n                    id=\"amount\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    min={0}\n                    max={props.max || Number.MAX_SAFE_INTEGER}\n                    placeholder=\"0.00\"\n                    aria-describedby=\"amount-description\"\n                    required={true}\n                />\n            </div>\n        </div>\n    )\n}\n","export default function Curtain(props: { visible: boolean }) {\n    return (\n        <div className={`fixed top-0 bottom-0 left-0 right-0 bg-white opacity-90 z-10 ${props.visible ? \"block\" : \"hidden\"}`}>\n            <div className=\"loader\"> </div>\n        </div>\n    )\n}","export default function Badge(props: { type: string, color: string }) {\n    const {type, color } = props;\n    return <div className=\"inline\">\n        <span\n            className={`align-top px-2.5 py-0.5 rounded-full text-xs font-medium bg-${color}-100 text-${color}-800 capitalize`}>\n            <svg className={`mr-1 -ml-1 inline align-baseline h-2 w-2 text-${color}-400`} fill=\"currentColor\" viewBox=\"0 0 8 8\">\n              <circle cx={4} cy={4} r={3}/>\n            </svg>\n            {type}\n      </span></div>\n}","import {memo} from 'react'\nimport {format, fromUnixTime} from \"date-fns\";\n\nfunction Duration(props: { start: number, end: number }) {\n    return (\n        <dt className=\"col-span-full text-center\">\n            {(format(fromUnixTime(props.start), \"yyyy-MM-dd HH:mm\"))} &ndash; {(format(fromUnixTime(props.end), \"yyyy-MM-dd HH:mm\"))}\n        </dt>\n    )\n}\n\nexport default memo(Duration);","export default function Progress(props: { title: string, value: number, max: number, rtl?: boolean }) {\n    let {title, value, max, rtl} = props;\n    value = Number(value).toFixed(2);\n    max = Number(max).toFixed(2);\n    return (\n        <>\n            <dt>{title}</dt>\n            <div className=\"rounded-sm h-3 bg-gray-900 w-full my-auto\">\n                <div\n                    className={\"bg-gradient-to-r from-primary to-secondary rounded-sm h-full \" + (rtl ? \"float-right\" : \"\")}\n                    style={{width: value / max * 100 + \"%\"}}>\n                </div>\n            </div>\n            <label className=\"ml-2 text-right truncate\">◎{value}<small className=\"text-gray-400\">/{max}</small></label>\n        </>\n    )\n}","import Badge from \"./Stream/Badge\";\nimport {getUnixTime} from \"date-fns\";\nimport Duration from \"./Stream/Duration\";\nimport Progress from \"./Stream/Progress\";\nimport {useEffect, useState} from \"react\";\nimport {StreamData} from \"../utils/helpers\";\nimport {XIcon} from \"@heroicons/react/outline\";\nimport {\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COLOR,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants/constants\";\n\nexport default function Stream(props: { data: StreamData, myAddress: string, id: string, removeStream: void, onStatusUpdate: void, onCancel: void, onWithdraw: void }) {\n    const {start, end, withdrawn, amount, receiver, sender, status} = props.data;\n    const {myAddress, removeStream, onStatusUpdate, onCancel, onWithdraw, id} = props;\n\n    const color = STREAM_STATUS_COLOR[status];\n\n    const [streamed, setStreamed] = useState(getStreamed(start, end, amount))\n    const [available, setAvailable] = useState(streamed - withdrawn);\n\n    const showWithdraw = status === STREAM_STATUS_STREAMING || (status === STREAM_STATUS_COMPLETE && withdrawn < amount);\n    const showCancel = (status === STREAM_STATUS_STREAMING || status === STREAM_STATUS_SCHEDULED) && myAddress === sender\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setStreamed(getStreamed(start, end, amount));\n            setAvailable(streamed - withdrawn);\n            const tmpStatus = updateStatus(status, start, end);\n            if (tmpStatus !== status) {\n                onStatusUpdate(tmpStatus)\n            }\n        }, 1000)\n        return () => clearInterval(interval);\n    });\n\n    return (\n        <dl className={`text-white my-4 grid gap-y-4 gap-x-2 grid-cols-3 p-4 bg-${color}-300 bg-opacity-10 hover:bg-opacity-20 shadow rounded-lg`}>\n            <div className=\"col-span-full\">\n                <Badge className=\"inline\" type={status} color={color}/>\n                <button onClick={removeStream}\n                        className={`p-1.5 h-6 w-6 float-right align-top rounded-sm hover:bg-${color}-100 focus:outline-none focus:ring-1`}>\n                    <XIcon className=\"float-right w-3 h-3\"/>\n                </button>\n            </div>\n            <Duration start={start} end={end}/>\n            <dt>ID</dt>\n            <dd className=\"col-span-2 text-sm text-gray-400 truncate\">{id}</dd>\n            <dt>Recipient</dt>\n            <dd className=\"col-span-2 text-sm text-gray-400 truncate\">{receiver}</dd>\n            {status === STREAM_STATUS_CANCELED ? (\n                <>\n                    <Progress title=\"Withdrawn\" value={withdrawn} max={amount}/>\n                    <Progress title=\"Returned\" value={amount - withdrawn} max={amount} rtl={true}/>\n                </>\n            ) : (\n                <>\n                    <Progress title=\"Streamed\" value={streamed} max={amount}/>\n                    <Progress title=\"Withdrawn\" value={withdrawn} max={amount}/>\n                    {myAddress === receiver &&\n                    (<>\n                        <dt>Available<br/>\n                            <sup className=\"text-xs text-gray-300 align-top\">for withdrawal</sup></dt>\n                        <dd className=\"col-span-2\">◎{available.toFixed(2)}</dd>\n                        {showWithdraw && (<button onClick={onWithdraw}\n                                                className=\"rounded-md text-sm bg-green-500 hover:bg-green-700 active:bg-green text-white py-1 px-2\">\n                            Withdraw\n                        </button>)}\n                    </>)}\n                    { showCancel && (<button onClick={onCancel}\n                                                                    className=\"rounded-md text-sm bg-red-400 hover:bg-red-600 active:bg-red text-white py-1 px-2\">\n                        Cancel</button>)}\n                </>)}\n        </dl>\n    )\n}\n\nexport function getStreamed(start: number, end: number, amount: number, timestamp?: number) {\n    timestamp = timestamp || getUnixTime(new Date());\n\n    if (timestamp < start) return 0\n    if (timestamp > end) return amount;\n\n    return (timestamp - start) / (end - start) * amount;\n}\n\nfunction updateStatus(status: string, start: number, end: number) {\n    const now = getUnixTime(new Date());\n    if (status === STREAM_STATUS_SCHEDULED && now >= start) {\n        return STREAM_STATUS_STREAMING;\n    } else if (status === STREAM_STATUS_STREAMING && now >= end) {\n        return STREAM_STATUS_COMPLETE;\n    } else {\n        return status;\n    }\n}","export default function Footer() {\n    return (<footer className=\"mt-40 text-center text-sm font-mono text-gray-400\">\n        <img src=\"https://solana.com/branding/horizontal/logo-horizontal-gradient-dark.png\"\n             className=\"w-40 mx-auto my-2\" alt=\"Solana logo\"/>\n        <small>\n            <code>BUIDLed by <a href=\"https://streamflow.finance\" className=\"text-gray-300\" rel=\"noopener noreferrer\"\n                                target=\"_blank\">StreamFlow</a><br/>\n                during <a href=\"https://solana.com/solanaszn\" target=\"_blank\" className=\"text-gray-300\"\n                   rel=\"noopener noreferrer\">SOLANASZN</a></code></small>\n    </footer>)\n}","export default function Logo(props: {src: string}){\n    return (\n        <div className=\"mb-8 text-white\">\n            <img src={props.src} alt=\"StreamFlow Finance logo\" className=\"w-24 mx-auto\"/>\n            <h1 className=\"text-6xl text-center\">Stream<strong>Flow</strong></h1>\n        </div>\n    )\n}","export default function ButtonPrimary(props: {text: string, action?: void, className?: string, submit?: boolean, disabled?: boolean}) {\n    const baseClasses = \"block mx-auto px-8 py-4 bg-gradient-to-br from-primary via-primary to-secondary border-transparent font-medium rounded shadow-sm text-white hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary \"\n    const {text, action, className, submit, disabled} = props;\n    return (\n        <button type={submit ? \"submit\" : \"button\"} onClick={action}\n                className={baseClasses + className} disabled={disabled}>\n            {text}\n        </button>\n    )\n}","export default __webpack_public_path__ + \"static/media/logo.c4294b7c.png\";","import ButtonPrimary from \"../Components/ButtonPrimary\";\n\nexport default function NotConnected(props: { action: () => * }) {\n    return <div className=\"max-w-md mx-auto\">\n        <iframe width=\"100%\" height={270} src=\"https://www.youtube-nocookie.com/embed/7hrv7HDK3oE\"\n                title=\"StreamFlow Finance - Solana Season Hackathon Demo\" frameBorder=\"0\"\n                allowFullScreen>&nbsp;</iframe>\n        <ButtonPrimary text=\"Connect\" className=\"font-bold text-2xl my-5\"\n                       action={props.action}/>\n    </div>;\n}","import {useEffect, useMemo, useState} from \"react\";\nimport {clusterApiUrl, Connection, Keypair, LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport {add, format, getUnixTime} from \"date-fns\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nimport {\n    Amount,\n    Banner,\n    Curtain,\n    DateTime,\n    getStreamed,\n    Recipient,\n    SelectToken,\n    Stream,\n    Logo,\n    Footer\n} from \"./Components\";\nimport {_swal, getDecodedAccountData, getExplorerLink, streamCreated, StreamData} from \"./utils/helpers\";\n\nimport {AIRDROP_AMOUNT, DELAY_MINUTES, SOLLET_URL, STREAM_STATUS_CANCELED,} from \"./constants/constants\";\nimport {_createStream, _cancelStream, _withdrawStream} from './Actions'\nimport ButtonPrimary from \"./Components/ButtonPrimary\";\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport logo from './logo.png'\nimport NotConnected from \"./Pages/NotConnected\";\n\nfunction App() {\n    const network = clusterApiUrl('devnet');\n    const now = new Date();\n    const pda = Keypair.generate();\n\n    const [providerUrl,] = useState(SOLLET_URL);\n    const [selectedWallet, setSelectedWallet] = useState(undefined);\n    const [connected, setConnected] = useState(false);\n    const [balance, setBalance] = useState(undefined);\n    const [amount, setAmount] = useState(undefined);\n    const [receiver, setReceiver] = useState(undefined);\n    const [startDate, setStartDate] = useState(format(now, \"yyyy-MM-dd\"));\n    const [startTime, setStartTime] = useState(format(add(now, {minutes: DELAY_MINUTES}), \"HH:mm\"));\n    const [endDate, setEndDate] = useState(startDate);\n    const [endTime, setEndTime] = useState(startTime);\n    const [loading, setLoading] = useState(false);\n    const [streams, setStreams] = useState(localStorage.streams ? JSON.parse(localStorage.streams) : {})\n\n    const connection = useMemo(() => new Connection(network), [network]);\n    const urlWallet = useMemo(() => new Wallet(providerUrl, network), [providerUrl, network]);\n\n    useEffect(() => {\n        if (selectedWallet) {\n            selectedWallet.on('connect', () => {\n                setConnected(true);\n                connection.getBalance(selectedWallet.publicKey)\n                    .then(result => setBalance(result / LAMPORTS_PER_SOL));\n                toast.success('Connected to wallet!');\n            });\n            selectedWallet.on('disconnect', () => {\n                setConnected(false);\n                setSelectedWallet(undefined);\n                toast.info('Disconnected from wallet');\n            });\n            selectedWallet.connect();\n            return () => {\n                selectedWallet.disconnect();\n            };\n        }\n    }, [connection, selectedWallet]);\n\n    useEffect(() => {\n        const newStreams = {...streams}\n        const streamID = window.location.hash.substring(1);\n\n        if (streamID) {\n            try {\n                new PublicKey(streamID);\n                newStreams[streamID] = undefined; // We're setting the data few lines below\n            } catch (e) {\n                toast.error(\"Stream URL not valid. Please double check with the sender.\")\n            }\n        }\n\n        for (const id in newStreams) {\n            if (newStreams.hasOwnProperty(id)) {\n                //first, the cleanup\n                let pk = undefined\n                try {\n                    pk = new PublicKey(id);\n                } catch (e) {\n                    toast.error(e.message + id)\n                    removeStream(id, true);\n                }\n\n                if (pk) {\n                    connection.getAccountInfo(new PublicKey(id)).then(result => {\n                        const temp = {...streams}\n                        if (result?.data) {\n                            temp[id] = getDecodedAccountData(result.data);\n                        } else {\n                            if (id === streamID) {\n                                toast.error(\"Stream URL not valid. Please double check with the sender.\")\n                            }\n                            delete temp[id]\n                        }\n                        setStreams(temp)\n                    })\n                }\n            }\n        }\n        // this is on purpose, as we want it executed only once (during initialization)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        localStorage.streams = JSON.stringify(streams);\n    }, [streams])\n\n    function requestAirdrop() {\n        setLoading(true);\n        (async () => {\n            const signature = await connection.requestAirdrop(selectedWallet.publicKey, AIRDROP_AMOUNT * LAMPORTS_PER_SOL);\n            const result = await connection.confirmTransaction(signature, 'finalized');\n            if (result.value.err) {\n                toast.error('Error requesting airdrop')\n            } else {\n                setLoading(false)\n                setBalance(balance + AIRDROP_AMOUNT)\n                toast.success(\"Huge airdrop for you!\")\n            }\n        })();\n    }\n\n    function validate(element) {\n        const {name, value} = element;\n        let start;\n        let msg = \"\";\n        switch (name) {\n            case \"start\":\n                start = new Date(value + \"T\" + startTime);\n                msg = start < new Date() ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"start_time\":\n                start = new Date(startDate + \"T\" + value);\n                msg = start < new Date() ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"end\":\n                msg = new Date(value) < new Date(startDate) ? \"Umm... end date before the start date?\" : \"\";\n                break;\n            case \"end_time\":\n                start = new Date(startDate + \"T\" + startTime);\n                const end = new Date(endDate + \"T\" + value);\n                msg = end < start ? \"Err... end time before the start time?\" : \"\";\n                break;\n            default:\n        }\n        element.setCustomValidity(msg);\n    }\n\n    async function createStream() {\n        const form = document.getElementById('form');\n        for (const elem of form.elements) {\n            validate(elem);\n        }\n\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return false;\n        }\n\n        const start = getUnixTime(new Date(startDate + \"T\" + startTime));\n        let end = getUnixTime(new Date(endDate + \"T\" + endTime));\n\n        // Make sure that end time is always AFTER start time\n        if (end === start) {\n            end = start + 1;\n        }\n\n        setLoading(true);\n        const data = new StreamData(selectedWallet.publicKey.toBase58(), receiver, amount, start, end);\n        const success = await _createStream(data, connection, selectedWallet, network, pda)\n        setLoading(false);\n        if (success) {\n            streamCreated(pda.publicKey.toBase58())\n            // const newBalance = await connection.getBalance(selectedWallet.publicKey);\n            setBalance(balance - amount)\n            setStreams({...streams, [pda.publicKey.toBase58()]: data})\n        }\n    }\n\n    async function withdrawStream(id: string) {\n        const {start, end, amount} = streams[id];\n        const success = await _withdrawStream(id, streams[id], connection, selectedWallet, network)\n        if (success) {\n            const withdrawn = getStreamed(start, end, amount)\n            setBalance(balance - withdrawn)\n            setStreams({...streams, [id]: {...streams[id], withdrawn}})\n        }\n    }\n\n    async function cancelStream(id: string) {\n        const {start, end, amount} = streams[id];\n        const now = new Date();\n        const withdrawn = getStreamed(start, end, amount);\n        const success = await _cancelStream(id, streams[id], connection, selectedWallet, network)\n        if (success) {\n            setBalance(balance + amount - withdrawn)\n            setStreams({\n                ...streams,\n                [id]: {...streams[id], withdrawn, canceled_at: getUnixTime(now), status: STREAM_STATUS_CANCELED}\n            })\n        }\n    }\n\n    async function removeStream(id: string, skipPrompt?: boolean) {\n        if (!skipPrompt && await _swal()) {\n            const newStreams = {...streams}\n            delete newStreams[id];\n            setStreams(newStreams)\n        }\n    }\n\n    return (\n        <div>\n            <Banner/>\n            <div className={\"mx-auto bg-blend-darken px-4 my-4\"}>\n                <Logo src={logo}/>\n                {connected ? (\n                    <div className=\"mx-auto grid grid-cols-1 gap-16 max-w-lg xl:grid-cols-2 xl:max-w-5xl\">\n                        <div className=\"mb-8\">\n                            <Curtain visible={loading}/>\n                            <div className=\"mb-4 text-white\">\n                                <strong className=\"text-gray-400 hover:text-white\">\n                                    <a href={getExplorerLink('address', selectedWallet.publicKey.toBase58(), network)}\n                                       target=\"_blank\" rel=\"noopener noreferrer\">\n                                        My Wallet Account <ExternalLinkIcon className=\"ml-1 w-4 h-4 inline\"/>:\n                                    </a></strong>\n                                <span className=\"block truncate\">{selectedWallet.publicKey.toBase58()}</span>\n                            </div>\n                            <div className=\"mb-4 clearfix text-white\">\n                                <strong className=\"block\">Balance:</strong>\n                                <span>◎{balance}</span>\n                                <button type=\"button\" onClick={() => selectedWallet.disconnect()}\n                                        className=\"float-right items-center px-2.5 py-1.5 shadow-sm text-xs  font-medium rounded bg-gray-500 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\">\n                                    Disconnect\n                                </button>\n                                <ButtonPrimary text=\"Airdrop\" action={requestAirdrop}\n                                               className=\"float-right mr-2 px-2.5 py-1.5 text-xs my-0 rounded active:bg-white\"\n                                               disabled={loading}/>\n                            </div>\n                            <hr/>\n                            <form onSubmit={createStream} id=\"form\">\n                                <div className=\"my-4 grid gap-4 grid-cols-5 sm:grid-cols-2\">\n                                    <Amount onChange={setAmount} value={amount} max={balance}/>\n                                    <SelectToken/>\n                                    <Recipient onChange={setReceiver} value={receiver}/>\n                                    <DateTime\n                                        title=\"start\"\n                                        date={startDate}\n                                        updateDate={e => setStartDate(e.target.value)}\n                                        time={startTime}\n                                        updateTime={e => setStartTime(e.target.value)}\n                                    />\n                                    <DateTime\n                                        title=\"end\"\n                                        date={endDate}\n                                        updateDate={e => setEndDate(e.target.value)}\n                                        time={endTime}\n                                        updateTime={e => setEndTime(e.target.value)}/>\n                                </div>\n                                <ButtonPrimary text=\"Stream!\" className=\"font-bold text-2xl my-5\"\n                                               action={() => createStream()}/>\n                            </form>\n                        </div>\n                        {/*move to different file StreamsContainer */}\n                        <div>\n                            <strong className=\"text-white text-center text-2xl block\">My Streams</strong>\n                            {Object.keys(streams).length > 0 ? (\n                                Object.entries(streams)\n                                    .sort(([, stream1], [, stream2]) => stream2.start - stream1.start)\n                                    .map(([id, data]) => (\n                                        <Stream\n                                            onStatusUpdate={(status) => setStreams({\n                                                ...streams,\n                                                [id]: {...streams[id], status}\n                                            })}\n                                            onWithdraw={() => withdrawStream(id)}\n                                            onCancel={() => cancelStream(id)}\n                                            key={id}\n                                            id={id}\n                                            data={data}\n                                            myAddress={selectedWallet.publicKey.toBase58()}\n                                            removeStream={() => removeStream(id)}/>\n                                    ))\n                            ) : (\n                                //move to EmptyStreams\n                                <div className=\"mx-auto my-10 text-white text-center\">\n                                    <span>Your streams will appear here.</span>\n                                    <br/>\n                                    <span>Start streaming!</span>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                ) : (\n                    <NotConnected action={() => setSelectedWallet(urlWallet)}/>\n                )}\n            </div>\n            <ToastContainer hideProgressBar position=\"bottom-left\" limit={4}/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants/constants\";\nimport BufferLayout from \"buffer-layout\";\nimport {clusterApiUrl, LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport {u64} from \"@solana/spl-token\";\nimport {getUnixTime} from \"date-fns\";\nimport swal from \"sweetalert\";\nimport {Buffer} from 'buffer/';\n\nexport const publicKey = (property = \"publicKey\"): BufferLayout.Layout => {\n    return BufferLayout.blob(32, property);\n};\n\nexport const uint64 = (property = \"uint64\"): BufferLayout.Layout => {\n    return BufferLayout.blob(8, property);\n};\n\nconst DataLayout = BufferLayout.struct([\n    uint64(\"starttime\"),\n    uint64(\"endtime\"),\n    uint64(\"amount\"),\n    uint64(\"withdrawn\"),\n    publicKey(\"sender\"),\n    publicKey(\"recipient\"),\n]);\n\nexport function getDecodedAccountData(buffer: Buffer) {\n    const accountData = DataLayout.decode(buffer);\n\n    const start = u64.fromBuffer(accountData.starttime);\n    const end = u64.fromBuffer(accountData.endtime);\n    const amount = u64.fromBuffer(accountData.amount) / LAMPORTS_PER_SOL;\n    const withdrawn = u64.fromBuffer(accountData.withdrawn) / LAMPORTS_PER_SOL;\n    const sender = (new PublicKey(accountData.sender)).toBase58();\n    const recipient = (new PublicKey(accountData.recipient)).toBase58();\n\n    /*\n    const start = Number(buffer.readBigUInt64LE(0));\n    const start = u64.fromBuff\n    const end = Number(buffer.readBigUInt64LE(8));\n    const amount = Number(buffer.readBigUInt64LE(16)) / LAMPORTS_PER_SOL;\n    const withdrawn = Number(buffer.readBigUInt64LE(24)) / LAMPORTS_PER_SOL;\n    const sender = (new PublicKey(buffer.slice(32, 64))).toBase58();\n    const recipient = (new PublicKey(buffer.slice(64, 96))).toBase58();\n    */\n\n    const status = getStreamStatus(Number(start), Number(end), getUnixTime(new Date())) //in milliseconds\n\n    return new StreamData(sender, recipient, amount, start, end, withdrawn, status);\n}\n\nexport function getExplorerLink(type: string, id: string, network?: string): string {\n    network = network || clusterApiUrl('mainnet-beta');\n    const cluster = getClusterName(network) ||  `custom&customUrl=${network}`\n    return `https://explorer.solana.com/${type}/${id}?cluster=${cluster}`;\n\n}\n\nexport function getStreamStatus(start: number, end: number, now: number) {\n    if (now < start) {\n        return STREAM_STATUS_SCHEDULED\n    } else if (now < end) {\n        return STREAM_STATUS_STREAMING\n    } else {\n        return STREAM_STATUS_COMPLETE\n    }\n}\n\nexport function StreamData(sender: string, receiver: string, amount: number, start: number, end: number, withdrawn?: number, status?: string, canceled_at: number) {\n    this.sender = sender;\n    this.receiver = receiver;\n    this.amount = amount;\n    this.start = start;\n    this.end = end;\n    this.withdrawn = withdrawn || 0;\n    this.status = canceled_at ? STREAM_STATUS_CANCELED : (status || STREAM_STATUS_SCHEDULED);\n    this.canceled_at = canceled_at;\n}\n\nexport function _swal(): Promise {\n    return swal({text: \"Are you sure?\", icon: \"warning\", buttons: true})\n}\n\nexport function copyToClipboard(value): void {\n    const el = document.createElement('textarea');\n    el.value = value;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport function streamCreated(id: string) {\n    const url = window.location.origin + \"#\" + id;\n    swal({\n        button: \"Copy Stream URL\",\n        icon: 'success',\n        title: \"Stream created!\",\n        //sweet alert accepts pure HTML Node, so some wrapping must be done https://sweetalert.js.org/guides/#using-dom-nodes-as-content\n        content:\n            {\n                element: \"a\",\n                attributes: {\n                    className: \"text-primary block truncate max-w-full\",\n                    href: url,\n                    target: \"_blank\",\n                    innerHTML: url\n                }\n            }\n    }).then((clicked) => {\n        if (clicked) {\n            copyToClipboard(url);\n            swal(\"Link copied to clipboard!\", \"Send it to the recipient!\", \"success\")\n        }\n    })\n}\n\nfunction getClusterName(url: string) {\n    const hasMatch = url.match(/https:\\/\\/api.(.*).solana.com/)\n    return hasMatch ? hasMatch[1] : null\n}","export const PROGRAM_ID = \"2DvvSEde36Ch3B52g9hKWDYbfmJimLpJwVBV9Cknypi4\";\nexport const STREAMFLOW_ACCOUNT_ID = \"DrFtxPb9F6SxpHHHFiEtSNXE3SZCUNLXMaHS6r8pkoz2\";","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function ToastrLink(props: { url: string, urlText: string, nonUrlText: string }) {\n    return <span>{props.nonUrlText}<br/>\n                <a className=\"font-bold\"\n                   href={props.url} rel=\"noopener noreferrer\"\n                   target=\"_blank\">{props.urlText}<ExternalLinkIcon className=\"ml-1 w-4 h-4 inline\"/>\n                </a>\n    </span>\n}","import {toast} from \"react-toastify\";\nimport {Connection, Keypair, Transaction} from \"@solana/web3.js\";\nimport ToastrLink from \"../Components/ToastrLink\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {INSTRUCTION_CREATE_STREAM} from \"../constants/constants\";\nimport {getExplorerLink} from \"../utils/helpers\";\n\nexport default async function sendTransaction(type: number, transaction: Transaction, connection: Connection, wallet: Wallet, network?: string, pda?: Keypair) {\n    try {\n        transaction.recentBlockhash = (await connection.getRecentBlockhash()).blockhash;\n        toast.info('Sending request to wallet...');\n        transaction.feePayer = wallet.publicKey;\n\n        if (type === INSTRUCTION_CREATE_STREAM) {\n            transaction.partialSign(pda);\n        }\n\n        const signed = await wallet.signTransaction(transaction);\n        const signature = await connection.sendRawTransaction(signed.serialize());\n        toast.info('Submitted transaction. Awaiting confirmation...', {autoClose:15000});\n\n        // can use 'finalized' which gives 100% certainty, but requires much longer waiting.\n        await connection.confirmTransaction(signature, 'finalized')\n        const transactionUrl = getExplorerLink('tx', signature, network);\n        toast.success(<ToastrLink\n            url={transactionUrl}\n            urlText=\"View on explorer\"\n            nonUrlText=\"Transaction finalized!\"\n        />, {autoClose: 20000, closeOnClick: false});\n        return true;\n    } catch (e) {\n        console.warn(e);\n        //todo log the error somewhere for our reference\n        toast.error('Error: ' + e.message);\n        return false;\n    }\n}","import {\n    Connection,\n    Keypair,\n    LAMPORTS_PER_SOL,\n    PublicKey,\n    SystemProgram,\n    Transaction,\n    TransactionInstruction\n} from \"@solana/web3.js\";\nimport {PROGRAM_ID} from \"../constants/ids\";\nimport BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CREATE_STREAM} from \"../constants/constants\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\n\nexport default async function _createStream(data: StreamData, connection: Connection, wallet: Wallet, network?: string, pda: Keypair) {\n    const instruction = getCreateStreamInstruction(data, pda.publicKey)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_CREATE_STREAM, tx, connection, wallet, network, pda);\n}\n\nfunction getCreateStreamInstruction(data: StreamData, pdaPub: PublicKey): TransactionInstruction {\n    const {sender, receiver} = data;\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver), //recipient\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: pdaPub, //PDA used for data\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId, //system program required to make a transfer\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(PROGRAM_ID),\n        data: encodeInstructionData(data),\n    });\n}\n\n\nfunction encodeInstructionData(data: StreamData) {\n    const {amount, start, end} = data;\n    // Packed as little endian\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.u32(\"start\"),\n        BufferLayout.u32(\"end\"),\n        // N.B. JS Number has 53 significant bits, so numbers larger than\n        // 2^53 can be misrepresented\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const encoded = Buffer.alloc(layout.span);\n    layout.encode({\n            instruction: INSTRUCTION_CREATE_STREAM,\n            start: start,\n            end: end,\n            // amount: Number.MAX_SAFE_INTEGER // limited to 2^53 - 1 = 9007199254740991\n            amount: Math.trunc(amount * LAMPORTS_PER_SOL),\n        },\n        encoded\n    );\n\n    // UInt64 alternative is to remove the \"amount\" from layout encoding and\n    // use the following code:\n    // //encoded.writeBigUInt64LE(BigInt(\"18446744073709551615\"), 9)\n\n    return encoded;\n}","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_WITHDRAW_STREAM} from \"../constants/constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport {PROGRAM_ID, STREAMFLOW_ACCOUNT_ID} from \"../constants/ids\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\n\nexport default async function _withdrawStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {receiver} = data;\n    const instruction = getWithdrawStreamInstruction(account_id, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_WITHDRAW_STREAM, tx, connection, wallet, network)\n}\n\nfunction getWithdrawStreamInstruction(account_id, receiver) {\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(receiver),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            //needed to transfer the rent only during the final withdrawal transaction\n            pubkey: new PublicKey(STREAMFLOW_ACCOUNT_ID),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(PROGRAM_ID),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const data = Buffer.alloc(layout.span);\n    //TODO - allow withdrawal of arbitrary (allowed) amount\n    layout.encode({\n            instruction: INSTRUCTION_WITHDRAW_STREAM,\n            amount: 0,// 0 = whole available amount is withdrawn.\n        },\n        data\n    );\n    return data;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CANCEL_STREAM} from \"../constants/constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport {PROGRAM_ID} from \"../constants/ids\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\n\nexport default async function _cancelStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {sender} = data;\n    const instruction = getCancelStreamInstruction(account_id, sender)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_CANCEL_STREAM, tx, connection, wallet, network)\n}\n\nfunction getCancelStreamInstruction(account_id, sender) {\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(PROGRAM_ID),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([BufferLayout.u8(\"instruction\")]);\n    const data = Buffer.alloc(layout.span);\n\n    layout.encode({instruction: INSTRUCTION_CANCEL_STREAM}, data);\n\n    return data;\n}\n"],"sourceRoot":""}